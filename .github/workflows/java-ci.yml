name: Java CI

on:
  - push

jobs:
  deployment:
    name: Deployment Setup
    runs-on: ubuntu-latest
    steps:
      - name: Set Deployment Options
        id: deployment
        run: |
          VERSION="${GITHUB_REF##*/}"
          case "$GITHUB_REF" in
            refs/heads/develop) NAMESPACE=dev ;;
            refs/tags/v*) NAMESPACE=prod ;;
          esac
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=namespace::$NAMESPACE"
    outputs:
      version: ${{ steps.deployment.outputs.version }}
      namespace: ${{ steps.deployment.outputs.namespace }}
  build:
    name: Java ${{ matrix.java }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    needs:
      - deployment
    strategy:
      matrix:
        java:
          - 17
        os:
          - ubuntu
          - windows
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: ${{ matrix.java }}
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      # --------------- Library ---------------
      - name: Build with Gradle
        run: ./gradlew :build
      - name: Deploy to Maven Central
        if: matrix.os == 'ubuntu' && matrix.java == 17 && startsWith(github.ref, 'refs/tags/v')
        run: |
          echo '${{ secrets.SIGNING_KEY }}' | base64 -d > /tmp/signing_key.gpg
          ./gradlew \
            '-PsonatypeUsername=${{ secrets.NEXUS_USERNAME }}' \
            '-PsonatypePassword=${{ secrets.NEXUS_PASSWORD }}' \
            '-Psigning.keyId=${{ secrets.SIGNING_KEY_ID }}' \
            '-Psigning.password=${{ secrets.SIGNING_PASSWORD }}' \
            '-Psigning.secretKeyRingFile=/tmp/signing_key.gpg' \
            publishToSonatype closeAndReleaseSonatypeStagingRepository
      # --------------- Service ---------------
      - name: Build Service with Gradle
        run: ./gradlew :service:build
      - name: Build the Workflows Docker Image
        if: matrix.os == 'ubuntu' && matrix.java == 17 && needs.deployment.outputs.namespace
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
          image_name: fulib/fulib.org-workflows
          image_tag: ${{ needs.deployment.outputs.version }}
          context: workflows/
      - name: Deploy the Workflows Backend to Rancher
        if: matrix.os == 'ubuntu' && matrix.java == 17 && needs.deployment.outputs.namespace
        uses: sekassel-research/actions-rancher-update@2.0.2
        with:
          rancher_url: ${{ secrets.RANCHER_URL }}
          rancher_token: ${{ secrets.RANCHER_TOKEN }}
          cluster_id: ${{ secrets.RANCHER_CLUSTER }}
          project_id: ${{ secrets.RANCHER_PROJECT }}
          namespace: ${{ needs.deployment.outputs.namespace }}
          deployment: workflows-backend
          docker_image: ${{ secrets.DOCKER_REGISTRY }}/fulib/fulib.org-workflows:${{ needs.deployment.outputs.version }}
      # --------------- Finishing ---------------
      - name: Stop Gradle Daemon
        run: ./gradlew --stop
