// --------------- Plugins ---------------

plugins {
    id 'java-library'
//    id 'maven-publish'
    id 'antlr'
    id 'idea'
    // https://plugins.gradle.org/plugin/org.fulib.fulibGradle
    id 'org.fulib.fulibGradle' version '0.5.0'
    // https://plugins.gradle.org/plugin/io.github.gradle-nexus.publish-plugin
//    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

// --------------- General Settings ---------------

group = 'org.fulib'
//version = 'git describe --tags'.execute([], rootDir).text[1..-2] // strip v and \n
description = 'fulibWorkflows is tool to generate mockups and object-/class-diagrams from a workflow description.'

// --------------- Dependencies ---------------

repositories {
    mavenLocal()
    mavenCentral()
}

//nexusPublishing {
//    repositories {
//        sonatype()
//    }
//}
//
//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            from(components.java)
//            pom {
//                name = project.name
//                description = project.description
//                url = 'https://github.com/fujaba/fulibWorkflows'
//                inceptionYear = '2019'
//
//                scm {
//                    url = 'https://github.com/fujaba/fulibWorkflows'
//                }
//
//                licenses {
//                    license {
//                        name = 'MIT License'
//                        url = 'https://www.opensource.org/licenses/mit-license.php'
//                    }
//                }
//
//                developers {
//                    developer {
//                        id = 'zuendorf'
//                        name = 'Albert Zuendorf'
//                    }
//                    developer {
//                        id = 'Clashsoft'
//                        name = 'Adrian Kunz'
//                    }
//                    developer {
//                        id = 'Kuenssi'
//                        name = 'Maximilian Freiherr von Kuenssberg'
//                    }
//                }
//            }
//        }
//    }
//}

dependencies {
    // https://mvnrepository.com/artifact/org.antlr/ST4
    implementation group: 'org.antlr', name: 'ST4', version: '4.3.1'

    // https://mvnrepository.com/artifact/org.antlr/antlr4-runtime
    implementation group: 'org.antlr', name: 'antlr4-runtime', version: '4.9.3'

    // https://mvnrepository.com/artifact/org.fulib/fulibScenarios
    fulibScenarios group: 'org.fulib', name: 'fulibScenarios', version: '1.7.0'

    // https://mvnrepository.com/artifact/org.fulib/fulibTools
    implementation group: 'org.fulib', name: 'fulibTools', version: '1.5.1'

    // https://mvnrepository.com/artifact/org.fulib/fulibTables
    testImplementation group: 'org.fulib', name: 'fulibTables', version: '1.4.0'

    // https://mvnrepository.com/artifact/org.fulib/fulibMockups
    testImplementation group: 'org.fulib', name: 'fulibMockups', version: '0.4.0'

    // https://mvnrepository.com/artifact/junit/junit
    testImplementation group: 'junit', name: 'junit', version: '4.13'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-nop
    testImplementation group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.30'

    antlr 'org.antlr:antlr4:4.9.3'
}

generateScenarioSource {
    classDiagramSVG = true
}

// --------------- ANTLR ---------------

// Source: https://tomassetti.me/antlr-mega-tutorial/#chapter18
generateGrammarSource {
    maxHeapSize = "128m"
    arguments += ['-package', 'org.fulib.workflows.yaml', '-no-visitor', '-listener', '-encoding', 'UTF-8']
}
compileJava.dependsOn generateGrammarSource
sourceSets {
    generated {
        java.srcDir 'generated-src/antlr/main/'
    }
}
compileJava.source sourceSets.generated.java, sourceSets.main.java
clean{
    delete "generated-src"
}
idea {
    module {
        sourceDirs += file("generated-src/antlr/main/")
    }
}