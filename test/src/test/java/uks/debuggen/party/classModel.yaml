- c: 	org.fulib.classmodel.ClassModel
  classes: 	testPartyApp
  defaultCollectionType: 	c1
  defaultPropertyStyle: 	Bean
  defaultRoleType: 	"java.util.ArrayList<%s>"
  mainJavaDir: 	"test/src/test/java"
  packageName: 	uks.debuggen.party
  packageSrcFolder: 	"test/src/test/java/uks/debuggen/party"

- testPartyApp: 	org.fulib.classmodel.Clazz
  attributes: 	testPartyApp_eventBroker
  importList: 	"import org.junit.Test;" 	"import uks.debuggen.party.events.*;" 	"import uks.debuggen.party.PartyApp.PartyAppService;" 	"import org.fulib.yaml.Yaml;" 	"import com.mashape.unirest.http.HttpResponse;" 	"import com.mashape.unirest.http.Unirest;" 	"import com.mashape.unirest.http.exceptions.UnirestException;" 	"import static com.codeborne.selenide.Selenide.open;" 	"import static com.codeborne.selenide.Selenide.$;" 	"import static com.codeborne.selenide.Condition.text;" 	"import com.codeborne.selenide.SelenideElement;"
  imports: 	"import org.junit.Test;" 	"import uks.debuggen.party.events.*;" 	"import uks.debuggen.party.PartyApp.PartyAppService;" 	"import org.fulib.yaml.Yaml;" 	"import com.mashape.unirest.http.HttpResponse;" 	"import com.mashape.unirest.http.Unirest;" 	"import com.mashape.unirest.http.exceptions.UnirestException;" 	"import static com.codeborne.selenide.Selenide.open;" 	"import static com.codeborne.selenide.Selenide.$;" 	"import static com.codeborne.selenide.Condition.text;" 	"import com.codeborne.selenide.SelenideElement;"
  methods: 	testPartyApp_PartyApp 	testPartyApp_publish
  model: 	c
  modified: 	false
  name: 	TestPartyApp
  propertyStyle: 	Bean

- c1: 	org.fulib.classmodel.CollectionType
  implClass: 	class java.util.ArrayList
  implTemplate: 	"java.util.ArrayList<%s>"
  itf: 	org.fulib.classmodel.CollectionInterface.List
  qualifiedImplName: 	java.util.ArrayList
  simpleImplName: 	ArrayList

- testPartyApp_eventBroker: 	org.fulib.classmodel.Attribute
  clazz: 	testPartyApp
  id: 	TestPartyApp_eventBroker
  modified: 	false
  name: 	eventBroker
  propertyStyle: 	Bean
  type: 	EventBroker
  typeSignature: 	EventBroker

- testPartyApp_PartyApp: 	org.fulib.classmodel.FMethod
  annotations: 	"@Test"
  clazz: 	testPartyApp
  declaration: 	"@Test
public void PartyApp()"
  id: 	TestPartyApp_PartyApp
  methodBody: 	"// start the event broker
eventBroker = new EventBroker();
eventBroker.start();

// start service
PartyAppService partyApp = new PartyAppService();
partyApp.start();

open(\"http://localhost:42000\");
$(\"body\").shouldHave(text(\"event broker\"));

SelenideElement pre = $(\"pre\");
pre.shouldHave(text(\"http://localhost:42001/apply\"));

// workflow working smoothly
// page 12:00
open(\"http://localhost:42001/page/12_00\");
$(\"#name\").setValue(\"Alice\");
$(\"#ok\").click();

open(\"http://localhost:42000\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 12_01:\"));

// check PartyApp
open(\"http://localhost:42001\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 12_01:\"));

System.out.println();
"
  modified: 	false
  modifiers: 	public
  name: 	PartyApp
  paramsString: 	""
  returnType: 	void
  signature: 	"class/TestPartyApp/method/PartyApp()"

- testPartyApp_publish: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	testPartyApp
  declaration: 	"public void publish(Event event)"
  id: 	TestPartyApp_publish
  methodBody: 	"String yaml = Yaml.encode(event);

try {
   HttpResponse<String> response = Unirest.post(\"http://localhost:42000/publish\")
         .body(yaml)
         .asString();
}
catch (UnirestException e) {
   e.printStackTrace();
}"
  modified: 	false
  modifiers: 	public
  name: 	publish
  paramsString: 	"Event event"
  returnType: 	void
  signature: 	"class/TestPartyApp/method/publish(Event)"

