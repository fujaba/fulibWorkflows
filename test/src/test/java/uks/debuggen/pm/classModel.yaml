- c: 	org.fulib.classmodel.ClassModel
  classes: 	testSomeEventStorming
  defaultCollectionType: 	c1
  defaultPropertyStyle: 	Bean
  defaultRoleType: 	"java.util.ArrayList<%s>"
  mainJavaDir: 	"test/src/test/java"
  packageName: 	uks.debuggen.pm
  packageSrcFolder: 	"test/src/test/java/uks/debuggen/pm"

- testSomeEventStorming: 	org.fulib.classmodel.Clazz
  importList: 	"import org.junit.Test;" 	"import java.util.LinkedHashMap;" 	"import static org.assertj.core.api.Assertions.assertThat;" 	"import uks.debuggen.pm.Routing.*;"
  imports: 	"import org.junit.Test;" 	"import java.util.LinkedHashMap;" 	"import static org.assertj.core.api.Assertions.assertThat;" 	"import uks.debuggen.pm.Routing.*;"
  methods: 	testSomeEventStorming_testSomeEventStorming
  model: 	c
  modified: 	false
  name: 	TestSomeEventStorming
  propertyStyle: 	Bean

- c1: 	org.fulib.classmodel.CollectionType
  implClass: 	class java.util.ArrayList
  implTemplate: 	"java.util.ArrayList<%s>"
  itf: 	org.fulib.classmodel.CollectionInterface.List
  qualifiedImplName: 	java.util.ArrayList
  simpleImplName: 	ArrayList

- testSomeEventStorming_testSomeEventStorming: 	org.fulib.classmodel.FMethod
  annotations: 	"@Test"
  clazz: 	testSomeEventStorming
  declaration: 	"@Test
public void testSomeEventStorming()"
  id: 	TestSomeEventStorming_testSomeEventStorming
  methodBody: 	"RoutingBusinessLogic logic = new RoutingBusinessLogic();
RoutingModel model = new RoutingModel();

Route route1 = model.getOrCreateRoute(\"route1\");
route1.setStart(model.getOrCreateStop(\"Kassel\"));
route1.setEnd(model.getOrCreateStop(\"Frankfurt\"));

Stop kassel = model.getOrCreateStop(\"Kassel\");
kassel.setDeparture(model.getOrCreateLeg(\"leg1\"));

Leg leg1 = model.getOrCreateLeg(\"leg1\");
leg1.setTo(model.getOrCreateStop(\"Fulda\"));
leg1.setVia(\"A7\");
leg1.setLength(\"104 km\");

Stop fulda = model.getOrCreateStop(\"Fulda\");
fulda.setDeparture(model.getOrCreateLeg(\"leg2\"));

Leg leg2 = model.getOrCreateLeg(\"leg2\");
leg2.setTo(model.getOrCreateStop(\"Frankfurt\"));
leg2.setVia(\"A66\");
leg2.setLength(\"71 km\");

Stop frankfurt = model.getOrCreateStop(\"Frankfurt\");
logic.computeLength(route1);
assertThat(model.getOrCreateRoute(\"route1\").getLength()).isEqualTo(\"175 km\");

System.out.println();
"
  modified: 	false
  modifiers: 	public
  name: 	testSomeEventStorming
  paramsString: 	""
  returnType: 	void
  signature: 	"class/TestSomeEventStorming/method/testSomeEventStorming()"

