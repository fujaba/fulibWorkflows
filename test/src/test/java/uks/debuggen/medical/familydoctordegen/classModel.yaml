- c: 	org.fulib.classmodel.ClassModel
  classes: 	testFamilyDoctor
  defaultCollectionType: 	c1
  defaultPropertyStyle: 	Bean
  defaultRoleType: 	"java.util.ArrayList<%s>"
  mainJavaDir: 	"test/src/test/java"
  packageName: 	uks.debuggen.medical.familydoctordegen
  packageSrcFolder: 	"test/src/test/java/uks/debuggen/medical/familydoctordegen"

- testFamilyDoctor: 	org.fulib.classmodel.Clazz
  attributes: 	testFamilyDoctor_eventBroker
  importList: 	"import org.junit.Test;" 	"import java.util.LinkedHashMap;" 	"import uks.debuggen.medical.familydoctordegen.events.*;" 	"import uks.debuggen.medical.familydoctordegen.DocMedical.DocMedicalService;" 	"import org.fulib.yaml.Yaml;" 	"import com.mashape.unirest.http.HttpResponse;" 	"import com.mashape.unirest.http.Unirest;" 	"import com.mashape.unirest.http.exceptions.UnirestException;" 	"import static com.codeborne.selenide.Selenide.open;" 	"import static com.codeborne.selenide.Selenide.$;" 	"import static com.codeborne.selenide.Condition.text;" 	"import static com.codeborne.selenide.Condition.matchText;" 	"import com.codeborne.selenide.SelenideElement;"
  imports: 	"import org.junit.Test;" 	"import java.util.LinkedHashMap;" 	"import uks.debuggen.medical.familydoctordegen.events.*;" 	"import uks.debuggen.medical.familydoctordegen.DocMedical.DocMedicalService;" 	"import org.fulib.yaml.Yaml;" 	"import com.mashape.unirest.http.HttpResponse;" 	"import com.mashape.unirest.http.Unirest;" 	"import com.mashape.unirest.http.exceptions.UnirestException;" 	"import static com.codeborne.selenide.Selenide.open;" 	"import static com.codeborne.selenide.Selenide.$;" 	"import static com.codeborne.selenide.Condition.text;" 	"import static com.codeborne.selenide.Condition.matchText;" 	"import com.codeborne.selenide.SelenideElement;"
  methods: 	testFamilyDoctor_FamilyDoctor 	testFamilyDoctor_publish
  model: 	c
  modified: 	false
  name: 	TestFamilyDoctor
  propertyStyle: 	Bean

- c1: 	org.fulib.classmodel.CollectionType
  implClass: 	class java.util.ArrayList
  implTemplate: 	"java.util.ArrayList<%s>"
  itf: 	org.fulib.classmodel.CollectionInterface.List
  qualifiedImplName: 	java.util.ArrayList
  simpleImplName: 	ArrayList

- testFamilyDoctor_eventBroker: 	org.fulib.classmodel.Attribute
  clazz: 	testFamilyDoctor
  id: 	TestFamilyDoctor_eventBroker
  modified: 	false
  name: 	eventBroker
  propertyStyle: 	Bean
  type: 	EventBroker
  typeSignature: 	EventBroker

- testFamilyDoctor_FamilyDoctor: 	org.fulib.classmodel.FMethod
  annotations: 	"@Test"
  clazz: 	testFamilyDoctor
  declaration: 	"@Test
public void FamilyDoctor()"
  id: 	TestFamilyDoctor_FamilyDoctor
  methodBody: 	"// start the event broker
eventBroker = new EventBroker();
eventBroker.start();

// start service
DocMedicalService docMedical = new DocMedicalService();
docMedical.start();
try {
   Thread.sleep(1500);
} catch (Exception e) {
}

open(\"http://localhost:42000\");
$(\"body\").shouldHave(text(\"event broker\"));

SelenideElement pre = $(\"pre\");
pre.shouldHave(text(\"http://localhost:42001/apply\"));
LinkedHashMap<String, Object> modelMap;

// workflow FamilyDoctorDegen

// workflow ImportKnowledge
   DiseaseBuilt common_coldEvent = new DiseaseBuilt();
   common_coldEvent.setId(\"12:00:01\");
   common_coldEvent.setBlockId(\"common_cold\");
   common_coldEvent.setName(\"common cold\");
   common_coldEvent.setSymptoms(\"[runny nose, cough, hoarseness, medium fever]\");
   common_coldEvent.setCounterSymptoms(\"[chills, joint pain]\");
   publish(common_coldEvent);

   DiseaseBuilt influenzaEvent = new DiseaseBuilt();
   influenzaEvent.setId(\"12:00:02\");
   influenzaEvent.setBlockId(\"influenza\");
   influenzaEvent.setName(\"influenza\");
   influenzaEvent.setSymptoms(\"[cough, medium fever, chills, joint pain, headache]\");
   influenzaEvent.setCounterSymptoms(\"[lung noises]\");
   publish(influenzaEvent);

   DiseaseBuilt pneumoniaEvent = new DiseaseBuilt();
   pneumoniaEvent.setId(\"12:00:03\");
   pneumoniaEvent.setBlockId(\"pneumonia\");
   pneumoniaEvent.setName(\"pneumonia\");
   pneumoniaEvent.setSymptoms(\"[cough, medium fever, chills, joint pain, headache, lung noises]\");
   publish(pneumoniaEvent);

   SymptomBuilt coughEvent = new SymptomBuilt();
   coughEvent.setId(\"12:00:04\");
   coughEvent.setBlockId(\"cough\");
   coughEvent.setName(\"cough\");
   publish(coughEvent);

   SymptomBuilt runny_noseEvent = new SymptomBuilt();
   runny_noseEvent.setId(\"12:00:05\");
   runny_noseEvent.setBlockId(\"runny_nose\");
   runny_noseEvent.setName(\"runny nose\");
   publish(runny_noseEvent);

   SymptomBuilt hoarsenessEvent = new SymptomBuilt();
   hoarsenessEvent.setId(\"12:00:06\");
   hoarsenessEvent.setBlockId(\"hoarseness\");
   hoarsenessEvent.setName(\"hoarseness\");
   publish(hoarsenessEvent);

   SymptomBuilt medium_feverEvent = new SymptomBuilt();
   medium_feverEvent.setId(\"12:00:07\");
   medium_feverEvent.setBlockId(\"medium_fever\");
   medium_feverEvent.setName(\"medium fever\");
   publish(medium_feverEvent);

   SymptomBuilt chillsEvent = new SymptomBuilt();
   chillsEvent.setId(\"12:00:08\");
   chillsEvent.setBlockId(\"chills\");
   chillsEvent.setName(\"chills\");
   publish(chillsEvent);

   SymptomBuilt joint_painEvent = new SymptomBuilt();
   joint_painEvent.setId(\"12:00:09\");
   joint_painEvent.setBlockId(\"joint_pain\");
   joint_painEvent.setName(\"joint pain\");
   publish(joint_painEvent);

   SymptomBuilt headacheEvent = new SymptomBuilt();
   headacheEvent.setId(\"12:00:10\");
   headacheEvent.setBlockId(\"headache\");
   headacheEvent.setName(\"headache\");
   publish(headacheEvent);

   SymptomBuilt lung_noisesEvent = new SymptomBuilt();
   lung_noisesEvent.setId(\"12:00:11\");
   lung_noisesEvent.setBlockId(\"lung_noises\");
   lung_noisesEvent.setName(\"lung noises\");
   publish(lung_noisesEvent);

   DiseaseBuilt disease2Event = new DiseaseBuilt();
   disease2Event.setId(\"12:00:01\");
   disease2Event.setBlockId(\"Disease2\");
   disease2Event.setMigratedTo(\"Disease2\");
   publish(disease2Event);


// workflow SimpleConsultations

// create PatientRegisteredEvent: patient registered 14:00
PatientRegisteredEvent e1400 = new PatientRegisteredEvent();
e1400.setId(\"14:00\");
e1400.setName(\"Alice\");
e1400.setAddress(\"Wonderland 1\");
e1400.setBirthDate(\"1970-01-01\");
publish(e1400);

open(\"http://localhost:42000\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_00:\"));

// check DocMedical
open(\"http://localhost:42001\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_00:\"));
for (DataEvent dataEvent : docMedical.getBuilder().getEventStore().values()) {
   docMedical.getBuilder().load(dataEvent.getBlockId());
}
modelMap = docMedical.getBuilder().getModel().getModelMap();
if (modelMap.values().size() > 0) {
   org.fulib.FulibTools.objectDiagrams().dumpSVG(\"tmp/docMedical14_00.svg\", modelMap.values());
}

open(\"http://localhost:42001\");
// check data note 14:00:01
pre = $(\"#data\");
pre.shouldHave(text(\"- alice:\"));
pre.shouldHave(matchText(\"name:.*Alice\"));
pre.shouldHave(matchText(\"address:.*\\"Wonderland 1\\"\"));
pre.shouldHave(matchText(\"birthDate:.*1970-01-01\"));

// create ConsultationEvent: consultation registered
ConsultationEvent e1401 = new ConsultationEvent();
e1401.setId(\"14:01\");
e1401.setPatient(\"Alice\");
e1401.setDate(\"2021-06-02T14:00\");
publish(e1401);

open(\"http://localhost:42000\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_01:\"));

// check DocMedical
open(\"http://localhost:42001\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_01:\"));
for (DataEvent dataEvent : docMedical.getBuilder().getEventStore().values()) {
   docMedical.getBuilder().load(dataEvent.getBlockId());
}
modelMap = docMedical.getBuilder().getModel().getModelMap();
if (modelMap.values().size() > 0) {
   org.fulib.FulibTools.objectDiagrams().dumpSVG(\"tmp/docMedical14_01.svg\", modelMap.values());
}

open(\"http://localhost:42001\");
// check data note 14:01:01
pre = $(\"#data\");
pre.shouldHave(text(\"- alice_2021_06_02T14_00:\"));
pre.shouldHave(matchText(\"cid:.*Alice#2021-06-02T14:00\"));
pre.shouldHave(matchText(\"patient:.*alice\"));

// create SymptomEvent: symptom validated
SymptomEvent e1402 = new SymptomEvent();
e1402.setId(\"14:02\");
e1402.setSymptom(\"cough\");
e1402.setConsultation(\"Alice#2021-06-02T14:00\");
publish(e1402);

open(\"http://localhost:42000\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_02:\"));

// check DocMedical
open(\"http://localhost:42001\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_02:\"));
for (DataEvent dataEvent : docMedical.getBuilder().getEventStore().values()) {
   docMedical.getBuilder().load(dataEvent.getBlockId());
}
modelMap = docMedical.getBuilder().getModel().getModelMap();
if (modelMap.values().size() > 0) {
   org.fulib.FulibTools.objectDiagrams().dumpSVG(\"tmp/docMedical14_02.svg\", modelMap.values());
}

open(\"http://localhost:42001\");
// check data note 14:02:01
pre = $(\"#data\");
pre.shouldHave(text(\"- cough:\"));
pre.shouldHave(matchText(\"name:.*cough\"));
pre.shouldHave(matchText(\"consultations:.*alice_2021_06_02T14_00.*\"));

// create SymptomEvent: symptom validated
SymptomEvent e1403 = new SymptomEvent();
e1403.setId(\"14:03\");
e1403.setSymptom(\"runny nose\");
e1403.setConsultations(\"[Alice#2021-06-02T14:00]\");
publish(e1403);

open(\"http://localhost:42000\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_03:\"));

// check DocMedical
open(\"http://localhost:42001\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_03:\"));
for (DataEvent dataEvent : docMedical.getBuilder().getEventStore().values()) {
   docMedical.getBuilder().load(dataEvent.getBlockId());
}
modelMap = docMedical.getBuilder().getModel().getModelMap();
if (modelMap.values().size() > 0) {
   org.fulib.FulibTools.objectDiagrams().dumpSVG(\"tmp/docMedical14_03.svg\", modelMap.values());
}

open(\"http://localhost:42001\");
// check data note 14:03:01
pre = $(\"#data\");
pre.shouldHave(text(\"- runny_nose:\"));
pre.shouldHave(matchText(\"name:.*\\"runny nose\\"\"));
pre.shouldHave(matchText(\"consultations:.*alice_2021_06_02T14_00.*\"));

// create TestEvent: test done
TestEvent e1404 = new TestEvent();
e1404.setId(\"14:04\");
e1404.setTest(\"temperature\");
e1404.setResult(\"39.8 Celsius\");
e1404.setConsultation(\"[Alice#2021-06-02T14:00]\");
publish(e1404);

open(\"http://localhost:42000\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_04:\"));

// check DocMedical
open(\"http://localhost:42001\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_04:\"));
for (DataEvent dataEvent : docMedical.getBuilder().getEventStore().values()) {
   docMedical.getBuilder().load(dataEvent.getBlockId());
}
modelMap = docMedical.getBuilder().getModel().getModelMap();
if (modelMap.values().size() > 0) {
   org.fulib.FulibTools.objectDiagrams().dumpSVG(\"tmp/docMedical14_04.svg\", modelMap.values());
}

open(\"http://localhost:42001\");
// check data note 14:04:01
pre = $(\"#data\");
pre.shouldHave(text(\"- alice_t001_2021_06_02T14_00:\"));
pre.shouldHave(matchText(\"cid:.*Alice#t001#2021-06-02T14:00\"));
pre.shouldHave(matchText(\"kind:.*temperature\"));
pre.shouldHave(matchText(\"result:.*\\"39.8 Celsius\\"\"));
pre.shouldHave(matchText(\"consultation:.*alice_2021_06_02T14_00\"));
// check data note 14:04:02
pre = $(\"#data\");
pre.shouldHave(text(\"- medium_fever:\"));
pre.shouldHave(matchText(\"name:.*\\"medium fever\\"\"));
pre.shouldHave(matchText(\"consultations:.*alice_2021_06_02T14_00.*\"));

// create DiagnosisEvent: diagnosis done
DiagnosisEvent e1405 = new DiagnosisEvent();
e1405.setId(\"14:05\");
e1405.setDiagnosis(\"common cold\");
e1405.setConsultation(\"Alice#2021-06-02T14:00\");
publish(e1405);

open(\"http://localhost:42000\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_05:\"));

// check DocMedical
open(\"http://localhost:42001\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_05:\"));
for (DataEvent dataEvent : docMedical.getBuilder().getEventStore().values()) {
   docMedical.getBuilder().load(dataEvent.getBlockId());
}
modelMap = docMedical.getBuilder().getModel().getModelMap();
if (modelMap.values().size() > 0) {
   org.fulib.FulibTools.objectDiagrams().dumpSVG(\"tmp/docMedical14_05.svg\", modelMap.values());
}

open(\"http://localhost:42001\");
// check data note 14:05:01
pre = $(\"#data\");
pre.shouldHave(text(\"- alice_2021_06_02T14_00:\"));
pre.shouldHave(matchText(\"cid:.*Alice#2021-06-02T14:00\"));
pre.shouldHave(matchText(\"diagnosis:.*common_cold\"));

// create TreatmentEvent: treatment initiated
TreatmentEvent e1406 = new TreatmentEvent();
e1406.setId(\"14:06\");
e1406.setTreatment(\"ibuprofen 400 1-1-1\");
e1406.setConsultation(\"Alice#2021-06-02T14:00\");
publish(e1406);

open(\"http://localhost:42000\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_06:\"));

// check DocMedical
open(\"http://localhost:42001\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_06:\"));
for (DataEvent dataEvent : docMedical.getBuilder().getEventStore().values()) {
   docMedical.getBuilder().load(dataEvent.getBlockId());
}
modelMap = docMedical.getBuilder().getModel().getModelMap();
if (modelMap.values().size() > 0) {
   org.fulib.FulibTools.objectDiagrams().dumpSVG(\"tmp/docMedical14_06.svg\", modelMap.values());
}

open(\"http://localhost:42001\");
// check data note 14:06:01
pre = $(\"#data\");
pre.shouldHave(text(\"- alice_2021_06_02T14_00:\"));
pre.shouldHave(matchText(\"cid:.*Alice#2021-06-02T14:00\"));
pre.shouldHave(matchText(\"treatment:.*\\"ibuprofen 400 1-1-1\\"\"));

// workflow Accounting

// create InvoiceSentEvent: invoice sent 14:07
InvoiceSentEvent e1407 = new InvoiceSentEvent();
e1407.setId(\"14:07\");
publish(e1407);

open(\"http://localhost:42000\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_07:\"));

// workflow CovidVaccination

// create CovidVaccinationRequestedEvent: covid vaccination requested 14:10
CovidVaccinationRequestedEvent e1410 = new CovidVaccinationRequestedEvent();
e1410.setId(\"14:10\");
publish(e1410);

open(\"http://localhost:42000\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_10:\"));

// create DiagnosisDoneEvent: diagnosis done 14:20
DiagnosisDoneEvent e1420 = new DiagnosisDoneEvent();
e1420.setId(\"14:20\");
e1420.setDisease(\"covid\");
publish(e1420);

open(\"http://localhost:42000\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_20:\"));

// create TreatmentInitiatedEvent: treatment initiated 14:21
TreatmentInitiatedEvent e1421 = new TreatmentInitiatedEvent();
e1421.setId(\"14:21\");
e1421.setTreatment(\"covid vaccination\");
publish(e1421);

open(\"http://localhost:42000\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_21:\"));

// create DiagnosisDoneEvent: diagnosis done 14:20:02
DiagnosisDoneEvent e142002 = new DiagnosisDoneEvent();
e142002.setId(\"14:20:02\");
e142002.setDisease(\"fever from vaccination\");
publish(e142002);

open(\"http://localhost:42000\");
pre = $(\"#history\");
pre.shouldHave(text(\"- 14_20_02:\"));
try {
   Thread.sleep(3000);
} catch (Exception e) {
}
eventBroker.stop();
docMedical.stop();

System.out.println();
"
  modified: 	false
  modifiers: 	public
  name: 	FamilyDoctor
  paramsString: 	""
  returnType: 	void
  signature: 	"class/TestFamilyDoctor/method/FamilyDoctor()"

- testFamilyDoctor_publish: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	testFamilyDoctor
  declaration: 	"public void publish(Event event)"
  id: 	TestFamilyDoctor_publish
  methodBody: 	"String yaml = Yaml.encodeSimple(event);

try {
   HttpResponse<String> response = Unirest.post(\"http://localhost:42000/publish\")
         .body(yaml)
         .asString();
         Thread.sleep(200);
}
catch (Exception e) {
   e.printStackTrace();
}"
  modified: 	false
  modifiers: 	public
  name: 	publish
  paramsString: 	"Event event"
  returnType: 	void
  signature: 	"class/TestFamilyDoctor/method/publish(Event)"

