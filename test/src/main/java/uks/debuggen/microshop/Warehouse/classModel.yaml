- c: 	org.fulib.classmodel.ClassModel
  classes: 	warehouseModel 	warehouseBusinessLogic 	warehouseBuilder 	warehouseService 	palette 	wHProduct 	pickTask
  defaultCollectionType: 	c1
  defaultPropertyStyle: 	Bean
  defaultRoleType: 	"java.util.ArrayList<%s>"
  mainJavaDir: 	"test/src/main/java"
  packageName: 	uks.debuggen.microshop.Warehouse
  packageSrcFolder: 	"test/src/main/java/uks/debuggen/microshop/Warehouse"

- warehouseModel: 	org.fulib.classmodel.Clazz
  attributes: 	warehouseModel_modelMap
  importList: 	"import java.util.LinkedHashMap;"
  imports: 	"import java.util.LinkedHashMap;"
  methods: 	warehouseModel_getOrCreatePalette 	warehouseModel_getOrCreateWHProduct 	warehouseModel_getOrCreatePickTask
  model: 	c
  modified: 	false
  name: 	WarehouseModel
  propertyStyle: 	Bean

- warehouseBusinessLogic: 	org.fulib.classmodel.Clazz
  attributes: 	warehouseBusinessLogic_model 	warehouseBusinessLogic_handlerMap
  importList: 	"import java.util.LinkedHashMap;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.microshop.events.*;"
  imports: 	"import java.util.LinkedHashMap;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.microshop.events.*;"
  methods: 	warehouseBusinessLogic_handleStoreProductCommand 	warehouseBusinessLogic_handleDemoStoreProductCommand 	warehouseBusinessLogic_handleProductOrderedEvent 	warehouseBusinessLogic_handleDemoProductOrderedEvent 	warehouseBusinessLogic_handleCommand 	warehouseBusinessLogic_handleDemoCommand 	warehouseBusinessLogic_initEventHandlerMap 	warehouseBusinessLogic_ignoreEvent 	warehouseBusinessLogic_getHandler
  model: 	c
  modified: 	false
  name: 	WarehouseBusinessLogic
  propertyStyle: 	Bean
  roles: 	warehouseBusinessLogic_builder 	warehouseBusinessLogic_service

- warehouseBuilder: 	org.fulib.classmodel.Clazz
  attributes: 	warehouseBuilder_model 	warehouseBuilder_eventStore 	warehouseBuilder_loaderMap 	warehouseBuilder_groupStore
  importList: 	"import java.util.LinkedHashMap;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.microshop.events.*;" 	"import java.util.function.Function;"
  imports: 	"import java.util.LinkedHashMap;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.microshop.events.*;" 	"import java.util.function.Function;"
  methods: 	warehouseBuilder_outdated 	warehouseBuilder_storePaletteBuilt 	warehouseBuilder_loadPaletteBuilt 	warehouseBuilder_storeWHProductBuilt 	warehouseBuilder_loadWHProductBuilt 	warehouseBuilder_storePickTaskBuilt 	warehouseBuilder_loadPickTaskBuilt 	warehouseBuilder_load 	warehouseBuilder_initLoaderMap 	warehouseBuilder_getObjectId 	warehouseBuilder_addToGroup 	warehouseBuilder_stripBrackets
  model: 	c
  modified: 	false
  name: 	WarehouseBuilder
  propertyStyle: 	Bean
  roles: 	warehouseBuilder_businessLogic 	warehouseBuilder_service

- warehouseService: 	org.fulib.classmodel.Clazz
  attributes: 	warehouseService_history 	warehouseService_port 	warehouseService_spark 	warehouseService_model
  importList: 	"import java.util.LinkedHashMap;" 	"import java.time.Instant;" 	"import java.time.format.DateTimeFormatter;" 	"import java.util.Map;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.microshop.events.*;" 	"import org.fulib.yaml.Yaml;" 	"import org.fulib.yaml.YamlIdMap;" 	"import spark.Service;" 	"import spark.Request;" 	"import spark.Response;" 	"import com.mashape.unirest.http.HttpResponse;" 	"import com.mashape.unirest.http.Unirest;" 	"import com.mashape.unirest.http.exceptions.UnirestException;" 	"import java.util.concurrent.ExecutorService;" 	"import java.util.concurrent.Executors;" 	"import java.util.logging.Logger;" 	"import java.util.logging.Level;"
  imports: 	"import java.util.LinkedHashMap;" 	"import java.time.Instant;" 	"import java.time.format.DateTimeFormatter;" 	"import java.util.Map;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.microshop.events.*;" 	"import org.fulib.yaml.Yaml;" 	"import org.fulib.yaml.YamlIdMap;" 	"import spark.Service;" 	"import spark.Request;" 	"import spark.Response;" 	"import com.mashape.unirest.http.HttpResponse;" 	"import com.mashape.unirest.http.Unirest;" 	"import com.mashape.unirest.http.exceptions.UnirestException;" 	"import java.util.concurrent.ExecutorService;" 	"import java.util.concurrent.Executors;" 	"import java.util.logging.Logger;" 	"import java.util.logging.Level;"
  methods: 	warehouseService_query 	warehouseService_isoNow 	warehouseService_start 	warehouseService_stop 	warehouseService_getHello 	warehouseService_subscribeAndLoadOldEvents 	warehouseService_apply 	warehouseService_getPage 	warehouseService_getDemoPage 	warehouseService_publish 	warehouseService_postApply
  model: 	c
  modified: 	false
  name: 	WarehouseService
  propertyStyle: 	Bean
  roles: 	warehouseService_businessLogic 	warehouseService_builder

- palette: 	org.fulib.classmodel.Clazz
  attributes: 	palette_id 	palette_barcode 	palette_amount 	palette_location
  model: 	c
  modified: 	false
  name: 	Palette
  propertyStyle: 	Bean
  roles: 	palette_product

- wHProduct: 	org.fulib.classmodel.Clazz
  attributes: 	wHProduct_id 	wHProduct_name 	wHProduct_amount
  model: 	c
  modified: 	false
  name: 	WHProduct
  propertyStyle: 	Bean
  roles: 	wHProduct_palettes 	wHProduct_pickTasks

- pickTask: 	org.fulib.classmodel.Clazz
  attributes: 	pickTask_id 	pickTask_code 	pickTask_shelf 	pickTask_customer 	pickTask_address 	pickTask_state 	pickTask_from
  model: 	c
  modified: 	false
  name: 	PickTask
  propertyStyle: 	Bean
  roles: 	pickTask_product

- c1: 	org.fulib.classmodel.CollectionType
  implClass: 	class java.util.ArrayList
  implTemplate: 	"java.util.ArrayList<%s>"
  itf: 	org.fulib.classmodel.CollectionInterface.List
  qualifiedImplName: 	java.util.ArrayList
  simpleImplName: 	ArrayList

- warehouseModel_modelMap: 	org.fulib.classmodel.Attribute
  clazz: 	warehouseModel
  id: 	WarehouseModel_modelMap
  initialization: 	"new LinkedHashMap<>()"
  modified: 	false
  name: 	modelMap
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<String, Object>"
  typeSignature: 	"LinkedHashMap<String,Object>"

- warehouseModel_getOrCreatePalette: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseModel
  declaration: 	"public Palette getOrCreatePalette(String id)"
  id: 	WarehouseModel_getOrCreatePalette
  methodBody: 	"if (id == null) return null;
return (Palette) modelMap.computeIfAbsent(id, k -> new Palette().setId(k));
"
  modified: 	false
  modifiers: 	public
  name: 	getOrCreatePalette
  paramsString: 	"String id"
  returnType: 	Palette
  signature: 	"class/WarehouseModel/method/getOrCreatePalette(String)"

- warehouseModel_getOrCreateWHProduct: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseModel
  declaration: 	"public WHProduct getOrCreateWHProduct(String id)"
  id: 	WarehouseModel_getOrCreateWHProduct
  methodBody: 	"if (id == null) return null;
return (WHProduct) modelMap.computeIfAbsent(id, k -> new WHProduct().setId(k));
"
  modified: 	false
  modifiers: 	public
  name: 	getOrCreateWHProduct
  paramsString: 	"String id"
  returnType: 	WHProduct
  signature: 	"class/WarehouseModel/method/getOrCreateWHProduct(String)"

- warehouseModel_getOrCreatePickTask: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseModel
  declaration: 	"public PickTask getOrCreatePickTask(String id)"
  id: 	WarehouseModel_getOrCreatePickTask
  methodBody: 	"if (id == null) return null;
return (PickTask) modelMap.computeIfAbsent(id, k -> new PickTask().setId(k));
"
  modified: 	false
  modifiers: 	public
  name: 	getOrCreatePickTask
  paramsString: 	"String id"
  returnType: 	PickTask
  signature: 	"class/WarehouseModel/method/getOrCreatePickTask(String)"

- warehouseBusinessLogic_model: 	org.fulib.classmodel.Attribute
  clazz: 	warehouseBusinessLogic
  id: 	WarehouseBusinessLogic_model
  modified: 	false
  name: 	model
  propertyStyle: 	Bean
  type: 	WarehouseModel
  typeSignature: 	WarehouseModel

- warehouseBusinessLogic_handlerMap: 	org.fulib.classmodel.Attribute
  clazz: 	warehouseBusinessLogic
  id: 	WarehouseBusinessLogic_handlerMap
  modified: 	false
  name: 	handlerMap
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<Class, Consumer<Event>>"
  typeSignature: 	"LinkedHashMap<Class,Consumer<Event>>"

- warehouseBusinessLogic_handleStoreProductCommand: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBusinessLogic
  declaration: 	"private void handleStoreProductCommand(Event e)"
  id: 	WarehouseBusinessLogic_handleStoreProductCommand
  methodBody: 	"// to protect manuel changes to this method insert a 'no' in front of fulib in the next line
// fulib
StoreProductCommand event = (StoreProductCommand) e;
handleDemoStoreProductCommand(event);
"
  modified: 	false
  modifiers: 	private
  name: 	handleStoreProductCommand
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/WarehouseBusinessLogic/method/handleStoreProductCommand(Event)"

- warehouseBusinessLogic_handleDemoStoreProductCommand: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBusinessLogic
  declaration: 	"private void handleDemoStoreProductCommand(StoreProductCommand event)"
  id: 	WarehouseBusinessLogic_handleDemoStoreProductCommand
  methodBody: 	"if (event.getId().equals(\"12:03:01\")) {
   PaletteBuilt b001Event = new PaletteBuilt();
   b001Event.setId(\"12:03:02\");
   b001Event.setBlockId(\"b001\");
   b001Event.setBarcode(\"b001\");
   b001Event.setProduct(\"red_shoes\");
   b001Event.setAmount(\"10\");
   b001Event.setLocation(\"shelf_42\");
   service.apply(b001Event);

   WHProductBuilt red_shoesEvent = new WHProductBuilt();
   red_shoesEvent.setId(\"12:03:03\");
   red_shoesEvent.setBlockId(\"red_shoes\");
   red_shoesEvent.setName(\"red_shoes\");
   red_shoesEvent.setAmount(\"10\");
   service.apply(red_shoesEvent);


   ProductStoredEvent e1204 = new ProductStoredEvent();

   e1204.setId(\"12:04\");
   e1204.setBarcode(\"b001\");
   e1204.setProduct(\"red_shoes\");
   service.apply(e1204);
}
if (event.getId().equals(\"12:06:01\")) {
   PaletteBuilt b002Event = new PaletteBuilt();
   b002Event.setId(\"12:06:02\");
   b002Event.setBlockId(\"b002\");
   b002Event.setBarcode(\"b002\");
   b002Event.setProduct(\"red_shoes\");
   b002Event.setAmount(\"8\");
   b002Event.setLocation(\"shelf_23\");
   service.apply(b002Event);

   WHProductBuilt red_shoesEvent = new WHProductBuilt();
   red_shoesEvent.setId(\"12:06:03\");
   red_shoesEvent.setBlockId(\"red_shoes\");
   red_shoesEvent.setName(\"red_shoes\");
   red_shoesEvent.setAmount(\"18\");
   service.apply(red_shoesEvent);


   ProductStoredEvent e1207 = new ProductStoredEvent();

   e1207.setId(\"12:07\");
   e1207.setBarcode(\"b002\");
   e1207.setProduct(\"red_shoes\");
   service.apply(e1207);
}
if (event.getId().equals(\"12:09:01\")) {
   PaletteBuilt b003Event = new PaletteBuilt();
   b003Event.setId(\"12:09:02\");
   b003Event.setBlockId(\"b003\");
   b003Event.setBarcode(\"b003\");
   b003Event.setProduct(\"blue_jeans\");
   b003Event.setAmount(\"6\");
   b003Event.setLocation(\"shelf_1337\");
   service.apply(b003Event);

   WHProductBuilt blue_jeansEvent = new WHProductBuilt();
   blue_jeansEvent.setId(\"12:09:03\");
   blue_jeansEvent.setBlockId(\"blue_jeans\");
   blue_jeansEvent.setName(\"blue_jeans\");
   blue_jeansEvent.setAmount(\"6\");
   service.apply(blue_jeansEvent);


   ProductStoredEvent e1210 = new ProductStoredEvent();

   e1210.setId(\"12:10\");
   e1210.setBarcode(\"b003\");
   e1210.setProduct(\"blue_jeans\");
   service.apply(e1210);
}
"
  modified: 	false
  modifiers: 	private
  name: 	handleDemoStoreProductCommand
  paramsString: 	"StoreProductCommand event"
  returnType: 	void
  signature: 	"class/WarehouseBusinessLogic/method/handleDemoStoreProductCommand(StoreProductCommand)"

- warehouseBusinessLogic_handleProductOrderedEvent: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBusinessLogic
  declaration: 	"private void handleProductOrderedEvent(Event e)"
  id: 	WarehouseBusinessLogic_handleProductOrderedEvent
  methodBody: 	"// to protect manuel changes to this method insert a 'no' in front of fulib in the next line
// fulib
ProductOrderedEvent event = (ProductOrderedEvent) e;
handleDemoProductOrderedEvent(event);
"
  modified: 	false
  modifiers: 	private
  name: 	handleProductOrderedEvent
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/WarehouseBusinessLogic/method/handleProductOrderedEvent(Event)"

- warehouseBusinessLogic_handleDemoProductOrderedEvent: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBusinessLogic
  declaration: 	"private void handleDemoProductOrderedEvent(ProductOrderedEvent event)"
  id: 	WarehouseBusinessLogic_handleDemoProductOrderedEvent
  methodBody: 	"if (event.getId().equals(\"12:22\")) {
   PickTaskBuilt pt_o0925_1Event = new PickTaskBuilt();
   pt_o0925_1Event.setId(\"12:22:01\");
   pt_o0925_1Event.setBlockId(\"pt_o0925_1\");
   pt_o0925_1Event.setCode(\"pt_o0925_1\");
   pt_o0925_1Event.setProduct(\"red_shoes\");
   pt_o0925_1Event.setShelf(\"[shelf 42, shelf 23]\");
   pt_o0925_1Event.setCustomer(\"Carli_Customer\");
   pt_o0925_1Event.setAddress(\"Wonderland 1\");
   pt_o0925_1Event.setState(\"picking\");
   service.apply(pt_o0925_1Event);


   PickTaskCreatedEvent e1223 = new PickTaskCreatedEvent();

   e1223.setId(\"12:23\");
   e1223.setCode(\"pt_o0925_1\");
   e1223.setOrder(\"o0925_1\");
   service.apply(e1223);
}
"
  modified: 	false
  modifiers: 	private
  name: 	handleDemoProductOrderedEvent
  paramsString: 	"ProductOrderedEvent event"
  returnType: 	void
  signature: 	"class/WarehouseBusinessLogic/method/handleDemoProductOrderedEvent(ProductOrderedEvent)"

- warehouseBusinessLogic_handleCommand: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBusinessLogic
  declaration: 	"private void handleCommand(Event e)"
  id: 	WarehouseBusinessLogic_handleCommand
  methodBody: 	"// to protect manuel changes to this method insert a 'no' in front of fulib in the next line
// fulib
Command event = (Command) e;
handleDemoCommand(event);
"
  modified: 	false
  modifiers: 	private
  name: 	handleCommand
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/WarehouseBusinessLogic/method/handleCommand(Event)"

- warehouseBusinessLogic_handleDemoCommand: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBusinessLogic
  declaration: 	"private void handleDemoCommand(Command event)"
  id: 	WarehouseBusinessLogic_handleDemoCommand
  methodBody: 	"if (event.getId().equals(\"12:26:01\")) {
   PickTaskBuilt pt_o0925_1Event = new PickTaskBuilt();
   pt_o0925_1Event.setId(\"12:26:02\");
   pt_o0925_1Event.setBlockId(\"pt_o0925_1\");
   pt_o0925_1Event.setCode(\"pt_o0925_1\");
   pt_o0925_1Event.setFrom(\"shelf 42\");
   pt_o0925_1Event.setState(\"shipping\");
   service.apply(pt_o0925_1Event);


   OrderPickedEvent e1227 = new OrderPickedEvent();

   e1227.setId(\"12:27\");
   e1227.setOrder(\"o0925_1\");
   service.apply(e1227);
}
"
  modified: 	false
  modifiers: 	private
  name: 	handleDemoCommand
  paramsString: 	"Command event"
  returnType: 	void
  signature: 	"class/WarehouseBusinessLogic/method/handleDemoCommand(Command)"

- warehouseBusinessLogic_initEventHandlerMap: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBusinessLogic
  declaration: 	"public void initEventHandlerMap()"
  id: 	WarehouseBusinessLogic_initEventHandlerMap
  methodBody: 	"if (handlerMap == null) {
   handlerMap = new LinkedHashMap<>();
   handlerMap.put(PaletteBuilt.class, builder::storePaletteBuilt);
   handlerMap.put(WHProductBuilt.class, builder::storeWHProductBuilt);
   handlerMap.put(PickTaskBuilt.class, builder::storePickTaskBuilt);
   handlerMap.put(StoreProductCommand.class, this::handleStoreProductCommand);
   handlerMap.put(ProductOrderedEvent.class, this::handleProductOrderedEvent);
   handlerMap.put(Command.class, this::handleCommand);
}
"
  modified: 	false
  modifiers: 	public
  name: 	initEventHandlerMap
  paramsString: 	""
  returnType: 	void
  signature: 	"class/WarehouseBusinessLogic/method/initEventHandlerMap()"

- warehouseBusinessLogic_ignoreEvent: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBusinessLogic
  declaration: 	"private void ignoreEvent(Event event)"
  id: 	WarehouseBusinessLogic_ignoreEvent
  methodBody: 	"// empty
"
  modified: 	false
  modifiers: 	private
  name: 	ignoreEvent
  paramsString: 	"Event event"
  returnType: 	void
  signature: 	"class/WarehouseBusinessLogic/method/ignoreEvent(Event)"

- warehouseBusinessLogic_getHandler: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBusinessLogic
  declaration: 	"public Consumer<Event> getHandler(Event event)"
  id: 	WarehouseBusinessLogic_getHandler
  methodBody: 	"return getHandlerMap().computeIfAbsent(event.getClass(), k -> this::ignoreEvent);
"
  modified: 	false
  modifiers: 	public
  name: 	getHandler
  paramsString: 	"Event event"
  returnType: 	"Consumer<Event>"
  signature: 	"class/WarehouseBusinessLogic/method/getHandler(Event)"

- warehouseBusinessLogic_builder: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	warehouseBusinessLogic
  id: 	WarehouseBusinessLogic_builder
  modified: 	false
  name: 	builder
  other: 	warehouseBuilder_businessLogic
  propertyStyle: 	Bean

- warehouseBusinessLogic_service: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	warehouseBusinessLogic
  id: 	WarehouseBusinessLogic_service
  modified: 	false
  name: 	service
  other: 	warehouseService_businessLogic
  propertyStyle: 	Bean

- warehouseBuilder_model: 	org.fulib.classmodel.Attribute
  clazz: 	warehouseBuilder
  id: 	WarehouseBuilder_model
  modified: 	false
  name: 	model
  propertyStyle: 	Bean
  type: 	WarehouseModel
  typeSignature: 	WarehouseModel

- warehouseBuilder_eventStore: 	org.fulib.classmodel.Attribute
  clazz: 	warehouseBuilder
  id: 	WarehouseBuilder_eventStore
  initialization: 	"new LinkedHashMap<>()"
  modified: 	false
  name: 	eventStore
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<String, DataEvent>"
  typeSignature: 	"LinkedHashMap<String,DataEvent>"

- warehouseBuilder_loaderMap: 	org.fulib.classmodel.Attribute
  clazz: 	warehouseBuilder
  id: 	WarehouseBuilder_loaderMap
  modified: 	false
  name: 	loaderMap
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<Class, Function<Event, Object>>"
  typeSignature: 	"LinkedHashMap<Class,Function<Event,Object>>"

- warehouseBuilder_groupStore: 	org.fulib.classmodel.Attribute
  clazz: 	warehouseBuilder
  id: 	WarehouseBuilder_groupStore
  initialization: 	"new LinkedHashMap<>()"
  modified: 	false
  name: 	groupStore
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<String, LinkedHashMap<String, DataEvent>>"
  typeSignature: 	"LinkedHashMap<String,LinkedHashMap<String,DataEvent>>"

- warehouseBuilder_outdated: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBuilder
  declaration: 	"private boolean outdated(DataEvent event)"
  id: 	WarehouseBuilder_outdated
  methodBody: 	"      DataEvent oldEvent = getEventStore().get(event.getBlockId());

      if (oldEvent == null) {
         eventStore.put(event.getBlockId(), event);
         return false;
      }

      if (oldEvent.getId().compareTo(event.getId()) < 0) {
         new org.fulib.yaml.Yamler2().mergeObjects(oldEvent, event);
         eventStore.put(event.getBlockId(), event);
         return false;
      }

      return true;"
  modified: 	false
  modifiers: 	private
  name: 	outdated
  paramsString: 	"DataEvent event"
  returnType: 	boolean
  signature: 	"class/WarehouseBuilder/method/outdated(DataEvent)"

- warehouseBuilder_storePaletteBuilt: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBuilder
  declaration: 	"public void storePaletteBuilt(Event e)"
  id: 	WarehouseBuilder_storePaletteBuilt
  methodBody: 	"PaletteBuilt event = (PaletteBuilt) e;
if (outdated(event)) {
   return;
}
// please insert a no before fulib in the next line and insert addToGroup commands as necessary
// fulib
"
  modified: 	false
  modifiers: 	public
  name: 	storePaletteBuilt
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/WarehouseBuilder/method/storePaletteBuilt(Event)"

- warehouseBuilder_loadPaletteBuilt: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBuilder
  declaration: 	"public Palette loadPaletteBuilt(Event e)"
  id: 	WarehouseBuilder_loadPaletteBuilt
  methodBody: 	"PaletteBuilt event = (PaletteBuilt) e;
Palette object = model.getOrCreatePalette(event.getBlockId());
object.setBarcode(event.getBarcode());
object.setProduct(model.getOrCreateWHProduct(event.getProduct()));
object.setAmount(event.getAmount() == null ? 0 : Integer.parseInt(event.getAmount()));
object.setLocation(event.getLocation());
return object;
"
  modified: 	false
  modifiers: 	public
  name: 	loadPaletteBuilt
  paramsString: 	"Event e"
  returnType: 	Palette
  signature: 	"class/WarehouseBuilder/method/loadPaletteBuilt(Event)"

- warehouseBuilder_storeWHProductBuilt: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBuilder
  declaration: 	"public void storeWHProductBuilt(Event e)"
  id: 	WarehouseBuilder_storeWHProductBuilt
  methodBody: 	"WHProductBuilt event = (WHProductBuilt) e;
if (outdated(event)) {
   return;
}
// please insert a no before fulib in the next line and insert addToGroup commands as necessary
// fulib
"
  modified: 	false
  modifiers: 	public
  name: 	storeWHProductBuilt
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/WarehouseBuilder/method/storeWHProductBuilt(Event)"

- warehouseBuilder_loadWHProductBuilt: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBuilder
  declaration: 	"public WHProduct loadWHProductBuilt(Event e)"
  id: 	WarehouseBuilder_loadWHProductBuilt
  methodBody: 	"WHProductBuilt event = (WHProductBuilt) e;
WHProduct object = model.getOrCreateWHProduct(event.getBlockId());
object.setName(event.getName());
object.setAmount(event.getAmount() == null ? 0 : Integer.parseInt(event.getAmount()));
return object;
"
  modified: 	false
  modifiers: 	public
  name: 	loadWHProductBuilt
  paramsString: 	"Event e"
  returnType: 	WHProduct
  signature: 	"class/WarehouseBuilder/method/loadWHProductBuilt(Event)"

- warehouseBuilder_storePickTaskBuilt: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBuilder
  declaration: 	"public void storePickTaskBuilt(Event e)"
  id: 	WarehouseBuilder_storePickTaskBuilt
  methodBody: 	"PickTaskBuilt event = (PickTaskBuilt) e;
if (outdated(event)) {
   return;
}
// please insert a no before fulib in the next line and insert addToGroup commands as necessary
// fulib
"
  modified: 	false
  modifiers: 	public
  name: 	storePickTaskBuilt
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/WarehouseBuilder/method/storePickTaskBuilt(Event)"

- warehouseBuilder_loadPickTaskBuilt: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBuilder
  declaration: 	"public PickTask loadPickTaskBuilt(Event e)"
  id: 	WarehouseBuilder_loadPickTaskBuilt
  methodBody: 	"PickTaskBuilt event = (PickTaskBuilt) e;
PickTask object = model.getOrCreatePickTask(event.getBlockId());
object.setCode(event.getCode());
object.setProduct(model.getOrCreateWHProduct(event.getProduct()));
object.setShelf(event.getShelf());
object.setCustomer(event.getCustomer());
object.setAddress(event.getAddress());
object.setState(event.getState());
object.setFrom(event.getFrom());
return object;
"
  modified: 	false
  modifiers: 	public
  name: 	loadPickTaskBuilt
  paramsString: 	"Event e"
  returnType: 	PickTask
  signature: 	"class/WarehouseBuilder/method/loadPickTaskBuilt(Event)"

- warehouseBuilder_load: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBuilder
  declaration: 	"public Object load(String blockId)"
  id: 	WarehouseBuilder_load
  methodBody: 	"      DataEvent dataEvent = eventStore.get(blockId);
      if (dataEvent == null) {
         return null;
      }

      initLoaderMap();
      Function<Event, Object> loader = loaderMap.get(dataEvent.getClass());
      Object object = loader.apply(dataEvent);

      LinkedHashMap<String, DataEvent> group = groupStore.computeIfAbsent(blockId, k -> new LinkedHashMap<>());
      for (DataEvent element : group.values()) {
         loader = loaderMap.get(element.getClass());
         loader.apply(element);
      }

      return object;"
  modified: 	false
  modifiers: 	public
  name: 	load
  paramsString: 	"String blockId"
  returnType: 	Object
  signature: 	"class/WarehouseBuilder/method/load(String)"

- warehouseBuilder_initLoaderMap: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBuilder
  declaration: 	"private void initLoaderMap()"
  id: 	WarehouseBuilder_initLoaderMap
  methodBody: 	"if (loaderMap == null) {
   loaderMap = new LinkedHashMap<>();
   loaderMap.put(PaletteBuilt.class, this::loadPaletteBuilt);
   loaderMap.put(WHProductBuilt.class, this::loadWHProductBuilt);
   loaderMap.put(PickTaskBuilt.class, this::loadPickTaskBuilt);
}
"
  modified: 	false
  modifiers: 	private
  name: 	initLoaderMap
  paramsString: 	""
  returnType: 	void
  signature: 	"class/WarehouseBuilder/method/initLoaderMap()"

- warehouseBuilder_getObjectId: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBuilder
  declaration: 	"public String getObjectId(String value)"
  id: 	WarehouseBuilder_getObjectId
  methodBody: 	"      if (value == null) {
         return null;
      }
      return value.replaceAll(\"\\W+\", \"_\");"
  modified: 	false
  modifiers: 	public
  name: 	getObjectId
  paramsString: 	"String value"
  returnType: 	String
  signature: 	"class/WarehouseBuilder/method/getObjectId(String)"

- warehouseBuilder_addToGroup: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBuilder
  declaration: 	"private void addToGroup(String groupId, String elementId)"
  id: 	WarehouseBuilder_addToGroup
  methodBody: 	"      DataEvent dataEvent = eventStore.get(elementId);

      if (dataEvent == null) {
         java.util.logging.Logger.getGlobal().severe(String.format(\"could not find element event %s for group %s \", elementId, groupId));
         return;
      }

      LinkedHashMap<String, DataEvent> group = groupStore.computeIfAbsent(groupId, k -> new LinkedHashMap<>());
      group.put(elementId, dataEvent);"
  modified: 	false
  modifiers: 	private
  name: 	addToGroup
  paramsString: 	"String groupId, String elementId"
  returnType: 	void
  signature: 	"class/WarehouseBuilder/method/addToGroup(String,String)"

- warehouseBuilder_stripBrackets: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseBuilder
  declaration: 	"public String stripBrackets(String back)"
  id: 	WarehouseBuilder_stripBrackets
  methodBody: 	"      if (back == null) {
         return \"\";
      }
      int open = back.indexOf('[');
      int close = back.indexOf(']');
      if (open >= 0 && close >= 0) {
         back = back.substring(open + 1, close);
      }
      return back;"
  modified: 	false
  modifiers: 	public
  name: 	stripBrackets
  paramsString: 	"String back"
  returnType: 	String
  signature: 	"class/WarehouseBuilder/method/stripBrackets(String)"

- warehouseBuilder_businessLogic: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	warehouseBuilder
  id: 	WarehouseBuilder_businessLogic
  modified: 	false
  name: 	businessLogic
  other: 	warehouseBusinessLogic_builder
  propertyStyle: 	Bean

- warehouseBuilder_service: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	warehouseBuilder
  id: 	WarehouseBuilder_service
  modified: 	false
  name: 	service
  other: 	warehouseService_builder
  propertyStyle: 	Bean

- warehouseService_history: 	org.fulib.classmodel.Attribute
  clazz: 	warehouseService
  id: 	WarehouseService_history
  initialization: 	"new LinkedHashMap<>()"
  modified: 	false
  name: 	history
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<String, Event>"
  typeSignature: 	"LinkedHashMap<String,Event>"

- warehouseService_port: 	org.fulib.classmodel.Attribute
  clazz: 	warehouseService
  id: 	WarehouseService_port
  initialization: 	42001
  modified: 	false
  name: 	port
  propertyStyle: 	Bean
  type: 	int
  typeSignature: 	int

- warehouseService_spark: 	org.fulib.classmodel.Attribute
  clazz: 	warehouseService
  id: 	WarehouseService_spark
  modified: 	false
  name: 	spark
  propertyStyle: 	Bean
  type: 	Service
  typeSignature: 	Service

- warehouseService_model: 	org.fulib.classmodel.Attribute
  clazz: 	warehouseService
  id: 	WarehouseService_model
  modified: 	false
  name: 	model
  propertyStyle: 	Bean
  type: 	WarehouseModel
  typeSignature: 	WarehouseModel

- warehouseService_query: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseService
  declaration: 	"public Query query(Query query)"
  id: 	WarehouseService_query
  methodBody: 	"      DataEvent dataEvent = getBuilder().getEventStore().get(query.getKey());

      if (dataEvent == null) {
         return query;
      }

      if (dataEvent instanceof DataGroup) {
         DataGroup group = (DataGroup) dataEvent;
         query.withResults(group.getElements());
      }
      else {
         query.withResults(dataEvent);
      }

      return query;"
  modified: 	false
  modifiers: 	public
  name: 	query
  paramsString: 	"Query query"
  returnType: 	Query
  signature: 	"class/WarehouseService/method/query(Query)"

- warehouseService_isoNow: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseService
  declaration: 	"public String isoNow()"
  id: 	WarehouseService_isoNow
  methodBody: 	"return DateTimeFormatter.ISO_INSTANT.format(Instant.now());
"
  modified: 	false
  modifiers: 	public
  name: 	isoNow
  paramsString: 	""
  returnType: 	String
  signature: 	"class/WarehouseService/method/isoNow()"

- warehouseService_start: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseService
  declaration: 	"public void start()"
  id: 	WarehouseService_start
  methodBody: 	"Unirest.setTimeouts(3*60*1000, 3*60*1000);
model = new WarehouseModel();
setBuilder(new WarehouseBuilder().setModel(model));
setBusinessLogic(new WarehouseBusinessLogic());
businessLogic.setBuilder(getBuilder());
businessLogic.setModel(model);
ExecutorService executor = Executors.newSingleThreadExecutor();
spark = Service.ignite();
spark.port(port);
spark.get(\"/page/:id\", (req, res) -> executor.submit(() -> this.getPage(req, res)).get());
spark.get(\"/\", (req, res) -> executor.submit(() -> this.getHello(req, res)).get());
spark.post(\"/apply\", (req, res) -> executor.submit(() -> this.postApply(req, res)).get());
spark.init();
executor.submit(this::subscribeAndLoadOldEvents);
Logger.getGlobal().info(\"Warehouse service is up and running on port \" + port);
"
  modified: 	false
  modifiers: 	public
  name: 	start
  paramsString: 	""
  returnType: 	void
  signature: 	"class/WarehouseService/method/start()"

- warehouseService_stop: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseService
  declaration: 	"public void stop()"
  id: 	WarehouseService_stop
  methodBody: 	"spark.stop();
"
  modified: 	false
  modifiers: 	public
  name: 	stop
  paramsString: 	""
  returnType: 	void
  signature: 	"class/WarehouseService/method/stop()"

- warehouseService_getHello: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseService
  declaration: 	"private String getHello(Request req, Response res)"
  id: 	WarehouseService_getHello
  methodBody: 	"try {
   String events = Yaml.encodeSimple(getHistory().values().toArray());
   String objects = Yaml.encodeSimple(model.getModelMap().values().toArray());
   return \"<p id='Warehouse'>This is the Warehouse service. </p>\n\" +
         \"<pre id=\\"history\\">\" + events + \"</pre>\n\" +
         \"<pre id=\\"data\\">\" + objects + \"</pre>\n\" +
         \"\";
}
catch (Exception e) {
   Logger.getGlobal().log(Level.SEVERE, e.getMessage(), e);
   return \"Warehouse Error \" + e.getMessage();
}
"
  modified: 	false
  modifiers: 	private
  name: 	getHello
  paramsString: 	"Request req, Response res"
  returnType: 	String
  signature: 	"class/WarehouseService/method/getHello(Request,Response)"

- warehouseService_subscribeAndLoadOldEvents: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseService
  declaration: 	"private void subscribeAndLoadOldEvents()"
  id: 	WarehouseService_subscribeAndLoadOldEvents
  methodBody: 	"ServiceSubscribed serviceSubscribed = new ServiceSubscribed()
      .setServiceUrl(String.format(\"http://localhost:%d/apply\", port));
String json = Yaml.encodeSimple(serviceSubscribed);
try {
   String url = \"http://localhost:42000/subscribe\";
   HttpResponse<String> response = Unirest
         .post(url)
         .body(json)
         .asString();
   String body = response.getBody();
   YamlIdMap idMap = new YamlIdMap(Event.class.getPackageName());
   idMap.decode(body);
   Map<String, Object> objectMap = idMap.getObjIdMap();
   for (Object obj : objectMap.values()) {
      apply((Event) obj);
   }
}
catch (UnirestException e) {
   e.printStackTrace();
}"
  modified: 	false
  modifiers: 	private
  name: 	subscribeAndLoadOldEvents
  paramsString: 	""
  returnType: 	void
  signature: 	"class/WarehouseService/method/subscribeAndLoadOldEvents()"

- warehouseService_apply: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseService
  declaration: 	"public void apply(Event event)"
  id: 	WarehouseService_apply
  methodBody: 	"if (history.get(event.getId()) != null) {
   return;
}
businessLogic.initEventHandlerMap();
Consumer<Event> handler = businessLogic.getHandler(event);
handler.accept(event);
history.put(event.getId(), event);
firePropertyChange(PROPERTY_HISTORY, null, event);
publish(event);"
  modified: 	false
  modifiers: 	public
  name: 	apply
  paramsString: 	"Event event"
  returnType: 	void
  signature: 	"class/WarehouseService/method/apply(Event)"

- warehouseService_getPage: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseService
  declaration: 	"public String getPage(Request request, Response response)"
  id: 	WarehouseService_getPage
  methodBody: 	"// to protect manuel changes to this method insert a 'no' in front of fulib in the next line
// fulib
return getDemoPage(request, response);
"
  modified: 	false
  modifiers: 	public
  name: 	getPage
  paramsString: 	"Request request, Response response"
  returnType: 	String
  signature: 	"class/WarehouseService/method/getPage(Request,Response)"

- warehouseService_getDemoPage: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseService
  declaration: 	"public String getDemoPage(Request request, Response response)"
  id: 	WarehouseService_getDemoPage
  methodBody: 	"StringBuilder html = new StringBuilder();
String id = request.params(\"id\");
String event = request.queryParams(\"event\");

if (\"store product 01\".equals(event)) {

   // create StoreProductCommand: store product 01
   StoreProductCommand e120301 = new StoreProductCommand();
   e120301.setId(\"12:03:01\");
   e120301.setBarcode(request.queryParams(\"barcode\"));
   e120301.setProduct(request.queryParams(\"product\"));
   e120301.setAmount(request.queryParams(\"amount\"));
   e120301.setLocation(request.queryParams(\"location\"));
   apply(e120301);
}

if (\"store product 02\".equals(event)) {

   // create StoreProductCommand: store product 02
   StoreProductCommand e120601 = new StoreProductCommand();
   e120601.setId(\"12:06:01\");
   e120601.setBarcode(request.queryParams(\"barcode\"));
   e120601.setProduct(request.queryParams(\"product\"));
   e120601.setAmount(request.queryParams(\"amount\"));
   e120601.setLocation(request.queryParams(\"location\"));
   apply(e120601);
}

if (\"store product 03\".equals(event)) {

   // create StoreProductCommand: store product 03
   StoreProductCommand e120901 = new StoreProductCommand();
   e120901.setId(\"12:09:01\");
   e120901.setBarcode(request.queryParams(\"barcode\"));
   e120901.setProduct(request.queryParams(\"product\"));
   e120901.setAmount(request.queryParams(\"amount\"));
   e120901.setLocation(request.queryParams(\"location\"));
   apply(e120901);
}

if (\"Pick\".equals(event)) {

   // create Command: Pick
   Command e122601 = new Command();
   e122601.setId(\"12:26:01\");
   e122601.setTask(request.queryParams(\"task\"));
   e122601.setShelf(request.queryParams(\"shelf\"));
   apply(e122601);
}

if (\"deliver order\".equals(event)) {

   // create DeliverCommand: deliver order
   DeliverCommand e123001 = new DeliverCommand();
   e123001.setId(\"12:30:01\");
   e123001.setOrder(request.queryParams(\"order\"));
   apply(e123001);
}



// 12:01
if (id.equals(\"12_01\")) {
   html.append(\"<form action=\\"/page/12_02\\" method=\\"get\\">\n\");
   // Warehouse overview 12:01
   html.append(\"   <p>Warehouse Home</p>\n\");
   html.append(\"   <p><input id=\\"Store Tasks\\" name=\\"button\\" type=\\"submit\\" value=\\"Store Tasks\\"></p>\n\");
   html.append(\"   <p><input id=\\"Pick Tasks\\" name=\\"button\\" type=\\"submit\\" value=\\"Pick Tasks\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 12:02
if (id.equals(\"12_02\")) {
   html.append(\"<form action=\\"/page/12_03\\" method=\\"get\\">\n\");
   // Warehouse store tasks 12:02
   html.append(\"   <p>Warehouse palettes</p>\n\");
   html.append(\"   <p><input id=\\"add\\" name=\\"button\\" type=\\"submit\\" value=\\"add\\"></p>\n\");
   html.append(\"   <p>empty</p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 12:03
if (id.equals(\"12_03\")) {
   html.append(\"<form action=\\"/page/12_05\\" method=\\"get\\">\n\");
   // Warehouse add palette 12:03
   html.append(\"   <p>Store new palette</p>\n\");
   html.append(\"   <p><input id=\\"barcode\\" name=\\"barcode\\" placeholder=\\"barcode?\\"></p>\n\");
   html.append(\"   <p><input id=\\"product\\" name=\\"product\\" placeholder=\\"product?\\"></p>\n\");
   html.append(\"   <p><input id=\\"amount\\" name=\\"amount\\" placeholder=\\"amount?\\"></p>\n\");
   html.append(\"   <p><input id=\\"location\\" name=\\"location\\" placeholder=\\"location?\\"></p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"store product 01\\"></p>\n\");
   html.append(\"   <p><input id=\\"ok\\" name=\\"button\\" type=\\"submit\\" value=\\"ok\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 12:05
if (id.equals(\"12_05\")) {
   html.append(\"<form action=\\"/page/12_06\\" method=\\"get\\">\n\");
   // Warehouse store tasks 12:05
   html.append(\"   <p>Warehouse palettes</p>\n\");
   html.append(\"   <p><input id=\\"add\\" name=\\"button\\" type=\\"submit\\" value=\\"add\\"></p>\n\");
   html.append(\"   <p>b001, 10 red_shoes, shelf_42</p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 12:06
if (id.equals(\"12_06\")) {
   html.append(\"<form action=\\"/page/12_08\\" method=\\"get\\">\n\");
   // Warehouse add palette 12:06
   html.append(\"   <p>Store new palette</p>\n\");
   html.append(\"   <p><input id=\\"barcode\\" name=\\"barcode\\" placeholder=\\"barcode?\\"></p>\n\");
   html.append(\"   <p><input id=\\"product\\" name=\\"product\\" placeholder=\\"product?\\"></p>\n\");
   html.append(\"   <p><input id=\\"amount\\" name=\\"amount\\" placeholder=\\"amount?\\"></p>\n\");
   html.append(\"   <p><input id=\\"location\\" name=\\"location\\" placeholder=\\"location?\\"></p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"store product 02\\"></p>\n\");
   html.append(\"   <p><input id=\\"ok\\" name=\\"button\\" type=\\"submit\\" value=\\"ok\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 12:08
if (id.equals(\"12_08\")) {
   html.append(\"<form action=\\"/page/12_09\\" method=\\"get\\">\n\");
   // Warehouse overview 12:08
   html.append(\"   <p>Warehouse palettes</p>\n\");
   html.append(\"   <p><input id=\\"add\\" name=\\"button\\" type=\\"submit\\" value=\\"add\\"></p>\n\");
   html.append(\"   <p>b002, red_shoes, shelf_23</p>\n\");
   html.append(\"   <p>b001, red_shoes, shelf_42</p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 12:09
if (id.equals(\"12_09\")) {
   html.append(\"<form action=\\"/page/12_11\\" method=\\"get\\">\n\");
   // Warehouse add palette 12:09
   html.append(\"   <p>Store new palette</p>\n\");
   html.append(\"   <p><input id=\\"barcode\\" name=\\"barcode\\" placeholder=\\"barcode?\\"></p>\n\");
   html.append(\"   <p><input id=\\"product\\" name=\\"product\\" placeholder=\\"product?\\"></p>\n\");
   html.append(\"   <p><input id=\\"amount\\" name=\\"amount\\" placeholder=\\"amount?\\"></p>\n\");
   html.append(\"   <p><input id=\\"location\\" name=\\"location\\" placeholder=\\"location?\\"></p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"store product 03\\"></p>\n\");
   html.append(\"   <p><input id=\\"ok\\" name=\\"button\\" type=\\"submit\\" value=\\"ok\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 12:11
if (id.equals(\"12_11\")) {
   html.append(\"<form action=\\"/page/12_25\\" method=\\"get\\">\n\");
   // Warehouse overview 12:11
   html.append(\"   <p>Warehouse palettes</p>\n\");
   html.append(\"   <p><input id=\\"add\\" name=\\"button\\" type=\\"submit\\" value=\\"add\\"></p>\n\");
   html.append(\"   <p>b003, blue_jeans, shelf_1337</p>\n\");
   html.append(\"   <p>b002, red_shoes, shelf_23</p>\n\");
   html.append(\"   <p>b001, red_shoes, shelf_42</p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 12:25
if (id.equals(\"12_25\")) {
   html.append(\"<form action=\\"/page/12_26\\" method=\\"get\\">\n\");
   // Warehouse pick tasks 12:25
   html.append(\"   <p>Pick tasks overview</p>\n\");
   html.append(\"   <p><input id=\\"pt_o0925_1, red_shoes, shelf 42, shelf 23\\" name=\\"button\\" type=\\"submit\\" value=\\"pt_o0925_1, red_shoes, shelf 42, shelf 23\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 12:26
if (id.equals(\"12_26\")) {
   html.append(\"<form action=\\"/page/12_28\\" method=\\"get\\">\n\");
   // Warehouse pick one 12:26
   html.append(\"   <p>Pick one</p>\n\");
   html.append(\"   <p><input id=\\"task\\" name=\\"task\\" placeholder=\\"task?\\"></p>\n\");
   html.append(\"   <p><input id=\\"shelf\\" name=\\"shelf\\" placeholder=\\"shelf?\\"></p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"Pick\\"></p>\n\");
   html.append(\"   <p><input id=\\"done\\" name=\\"button\\" type=\\"submit\\" value=\\"done\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 12:28
if (id.equals(\"12_28\")) {
   html.append(\"<form action=\\"/page/next_page\\" method=\\"get\\">\n\");
   // Warehouse pick tasks 12:28
   html.append(\"   <p>Pick tasks overview</p>\n\");
   html.append(\"   <p>no tasks, have a break</p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 12:29
if (id.equals(\"12_29\")) {
   html.append(\"<form action=\\"/page/12_30\\" method=\\"get\\">\n\");
   // Warehouse delivery tasks 12:29
   html.append(\"   <p>Delivery tasks overview</p>\n\");
   html.append(\"   <p><input id=\\"red_shoes, Wonderland 1\\" name=\\"button\\" type=\\"submit\\" value=\\"red_shoes, Wonderland 1\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 12:30
if (id.equals(\"12_30\")) {
   html.append(\"<form action=\\"/page/12_32\\" method=\\"get\\">\n\");
   // Warehouse deliver 12:30
   html.append(\"   <p>Delivering</p>\n\");
   html.append(\"   <p><input id=\\"order\\" name=\\"order\\" placeholder=\\"order?\\"></p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"deliver order\\"></p>\n\");
   html.append(\"   <p><input id=\\"done\\" name=\\"button\\" type=\\"submit\\" value=\\"done\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 12:32
if (id.equals(\"12_32\")) {
   html.append(\"<form action=\\"/page/next_page\\" method=\\"get\\">\n\");
   // Warehouse delivery tasks 12:32
   html.append(\"   <p>Delivery tasks overview</p>\n\");
   html.append(\"   <p>everything delivered, you are a hero</p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}



html.append(\"This is the Shop Service page \" + id + \"\n\");
return html.toString();"
  modified: 	false
  modifiers: 	public
  name: 	getDemoPage
  paramsString: 	"Request request, Response response"
  returnType: 	String
  signature: 	"class/WarehouseService/method/getDemoPage(Request,Response)"

- warehouseService_publish: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseService
  declaration: 	"public void publish(Event event)"
  id: 	WarehouseService_publish
  methodBody: 	"String json = Yaml.encodeSimple(event);

try {
   HttpResponse<String> response = Unirest
         .post(\"http://localhost:42000/publish\")
         .body(json)
         .asString();
}
catch (UnirestException e) {
   e.printStackTrace();
}"
  modified: 	false
  modifiers: 	public
  name: 	publish
  paramsString: 	"Event event"
  returnType: 	void
  signature: 	"class/WarehouseService/method/publish(Event)"

- warehouseService_postApply: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	warehouseService
  declaration: 	"private String postApply(Request req, Response res)"
  id: 	WarehouseService_postApply
  methodBody: 	"      String body = req.body();
      try {
         YamlIdMap idMap = new YamlIdMap(Event.class.getPackageName());
         idMap.decode(body);
         Map<String, Object> map = idMap.getObjIdMap();
         for (Object value : map.values()) {
            Event event = (Event) value;
            apply(event);
         }
      }
      catch (Exception e) {
         String message = e.getMessage();
         if (message.contains(\"ReflectorMap could not find class description\")) {
            Logger.getGlobal().info(\"post apply ignores unknown event \" + body);
         }
         else {
            Logger.getGlobal().log(Level.SEVERE, \"postApply failed\", e);
         }
      }
      return \"apply done\";"
  modified: 	false
  modifiers: 	private
  name: 	postApply
  paramsString: 	"Request req, Response res"
  returnType: 	String
  signature: 	"class/WarehouseService/method/postApply(Request,Response)"

- warehouseService_businessLogic: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	warehouseService
  id: 	WarehouseService_businessLogic
  modified: 	false
  name: 	businessLogic
  other: 	warehouseBusinessLogic_service
  propertyStyle: 	Bean

- warehouseService_builder: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	warehouseService
  id: 	WarehouseService_builder
  modified: 	false
  name: 	builder
  other: 	warehouseBuilder_service
  propertyStyle: 	Bean

- palette_id: 	org.fulib.classmodel.Attribute
  clazz: 	palette
  id: 	Palette_id
  modified: 	false
  name: 	id
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- palette_barcode: 	org.fulib.classmodel.Attribute
  clazz: 	palette
  id: 	Palette_barcode
  modified: 	false
  name: 	barcode
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- palette_amount: 	org.fulib.classmodel.Attribute
  clazz: 	palette
  id: 	Palette_amount
  modified: 	false
  name: 	amount
  propertyStyle: 	Bean
  type: 	int
  typeSignature: 	int

- palette_location: 	org.fulib.classmodel.Attribute
  clazz: 	palette
  id: 	Palette_location
  modified: 	false
  name: 	location
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- palette_product: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	palette
  id: 	Palette_product
  modified: 	false
  name: 	product
  other: 	wHProduct_palettes
  propertyStyle: 	Bean

- wHProduct_id: 	org.fulib.classmodel.Attribute
  clazz: 	wHProduct
  id: 	WHProduct_id
  modified: 	false
  name: 	id
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- wHProduct_name: 	org.fulib.classmodel.Attribute
  clazz: 	wHProduct
  id: 	WHProduct_name
  modified: 	false
  name: 	name
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- wHProduct_amount: 	org.fulib.classmodel.Attribute
  clazz: 	wHProduct
  id: 	WHProduct_amount
  modified: 	false
  name: 	amount
  propertyStyle: 	Bean
  type: 	int
  typeSignature: 	int

- wHProduct_palettes: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	42
  clazz: 	wHProduct
  collectionType: 	c1
  id: 	WHProduct_palettes
  modified: 	false
  name: 	palettes
  other: 	palette_product
  propertyStyle: 	Bean
  roleType: 	"java.util.ArrayList<%s>"

- wHProduct_pickTasks: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	42
  clazz: 	wHProduct
  collectionType: 	c1
  id: 	WHProduct_pickTasks
  modified: 	false
  name: 	pickTasks
  other: 	pickTask_product
  propertyStyle: 	Bean
  roleType: 	"java.util.ArrayList<%s>"

- pickTask_id: 	org.fulib.classmodel.Attribute
  clazz: 	pickTask
  id: 	PickTask_id
  modified: 	false
  name: 	id
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- pickTask_code: 	org.fulib.classmodel.Attribute
  clazz: 	pickTask
  id: 	PickTask_code
  modified: 	false
  name: 	code
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- pickTask_shelf: 	org.fulib.classmodel.Attribute
  clazz: 	pickTask
  id: 	PickTask_shelf
  modified: 	false
  name: 	shelf
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- pickTask_customer: 	org.fulib.classmodel.Attribute
  clazz: 	pickTask
  id: 	PickTask_customer
  modified: 	false
  name: 	customer
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- pickTask_address: 	org.fulib.classmodel.Attribute
  clazz: 	pickTask
  id: 	PickTask_address
  modified: 	false
  name: 	address
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- pickTask_state: 	org.fulib.classmodel.Attribute
  clazz: 	pickTask
  id: 	PickTask_state
  modified: 	false
  name: 	state
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- pickTask_from: 	org.fulib.classmodel.Attribute
  clazz: 	pickTask
  id: 	PickTask_from
  modified: 	false
  name: 	from
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- pickTask_product: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	pickTask
  id: 	PickTask_product
  modified: 	false
  name: 	product
  other: 	wHProduct_pickTasks
  propertyStyle: 	Bean

