- c: 	org.fulib.classmodel.ClassModel
  classes: 	studyRightModel 	studyRightService 	university 	room 	person 	student 	stop 	tour 	tourList
  defaultCollectionType: 	c1
  defaultPropertyStyle: 	Bean
  defaultRoleType: 	"java.util.ArrayList<%s>"
  mainJavaDir: 	"test/src/main/java"
  packageName: 	uks.debuggen.studyright.StudyRight
  packageSrcFolder: 	"test/src/main/java/uks/debuggen/studyright/StudyRight"

- studyRightModel: 	org.fulib.classmodel.Clazz
  attributes: 	studyRightModel_modelMap
  importList: 	"import java.util.LinkedHashMap;"
  imports: 	"import java.util.LinkedHashMap;"
  methods: 	studyRightModel_getOrCreateUniversity 	studyRightModel_getOrCreateRoom 	studyRightModel_getOrCreateStudent 	studyRightModel_getOrCreateStop 	studyRightModel_getOrCreateTour 	studyRightModel_getOrCreateTourList
  model: 	c
  modified: 	false
  name: 	StudyRightModel
  propertyStyle: 	Bean

- studyRightService: 	org.fulib.classmodel.Clazz
  attributes: 	studyRightService_history 	studyRightService_port 	studyRightService_spark 	studyRightService_model 	studyRightService_handlerMap
  importList: 	"import java.util.LinkedHashMap;" 	"import java.util.Map;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.studyright.events.*;" 	"import org.fulib.yaml.Yaml;" 	"import spark.Service;" 	"import spark.Request;" 	"import spark.Response;" 	"import com.mashape.unirest.http.HttpResponse;" 	"import com.mashape.unirest.http.Unirest;" 	"import com.mashape.unirest.http.exceptions.UnirestException;" 	"import java.util.concurrent.ExecutorService;" 	"import java.util.concurrent.Executors;" 	"import java.util.logging.Logger;" 	"import java.util.logging.Level;"
  imports: 	"import java.util.LinkedHashMap;" 	"import java.util.Map;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.studyright.events.*;" 	"import org.fulib.yaml.Yaml;" 	"import spark.Service;" 	"import spark.Request;" 	"import spark.Response;" 	"import com.mashape.unirest.http.HttpResponse;" 	"import com.mashape.unirest.http.Unirest;" 	"import com.mashape.unirest.http.exceptions.UnirestException;" 	"import java.util.concurrent.ExecutorService;" 	"import java.util.concurrent.Executors;" 	"import java.util.logging.Logger;" 	"import java.util.logging.Level;"
  methods: 	studyRightService_start 	studyRightService_getHello 	studyRightService_subscribeAndLoadOldEvents 	studyRightService_apply 	studyRightService_getPage 	studyRightService_getDemoPage 	studyRightService_handleLoadRooms 	studyRightService_handleDemoLoadRooms 	studyRightService_handleFindTours 	studyRightService_handleDemoFindTours 	studyRightService_handleVisitRoom 	studyRightService_handleDemoVisitRoom 	studyRightService_handleReportTourStops 	studyRightService_handleDemoReportTourStops 	studyRightService_handleTourEndFound 	studyRightService_handleDemoTourEndFound 	studyRightService_handleUniversityBuilt 	studyRightService_handleRoomBuilt 	studyRightService_handleStudentBuilt 	studyRightService_handleStopBuilt 	studyRightService_handleTourBuilt 	studyRightService_handleTourListBuilt 	studyRightService_initEventHandlerMap 	studyRightService_ignoreEvent 	studyRightService_publish 	studyRightService_postApply 	studyRightService_stripBrackets
  model: 	c
  modified: 	false
  name: 	StudyRightService
  propertyStyle: 	Bean

- university: 	org.fulib.classmodel.Clazz
  attributes: 	university_id
  model: 	c
  modified: 	false
  name: 	University
  propertyStyle: 	Bean
  roles: 	university_rooms 	university_persons

- room: 	org.fulib.classmodel.Clazz
  attributes: 	room_id 	room_credits
  model: 	c
  modified: 	false
  name: 	Room
  propertyStyle: 	Bean
  roles: 	room_uni 	room_doors

- person: 	org.fulib.classmodel.Clazz
  attributes: 	person_id 	person_name 	person_birthYear
  model: 	c
  modified: 	false
  name: 	Person
  propertyStyle: 	Bean
  roles: 	person_uni
  subClasses: 	student

- student: 	org.fulib.classmodel.Clazz
  attributes: 	student_studentId
  model: 	c
  modified: 	false
  name: 	Student
  propertyStyle: 	Bean
  superClass: 	person

- stop: 	org.fulib.classmodel.Clazz
  attributes: 	stop_id 	stop_motivation 	stop_room
  model: 	c
  modified: 	false
  name: 	Stop
  propertyStyle: 	Bean
  roles: 	stop_previousStop 	stop_nextStops

- tour: 	org.fulib.classmodel.Clazz
  attributes: 	tour_id 	tour_stops
  model: 	c
  modified: 	false
  name: 	Tour
  propertyStyle: 	Bean
  roles: 	tour_tourList

- tourList: 	org.fulib.classmodel.Clazz
  attributes: 	tourList_id
  model: 	c
  modified: 	false
  name: 	TourList
  propertyStyle: 	Bean
  roles: 	tourList_alternatives

- c1: 	org.fulib.classmodel.CollectionType
  implClass: 	class java.util.ArrayList
  implTemplate: 	"java.util.ArrayList<%s>"
  itf: 	org.fulib.classmodel.CollectionInterface.List
  qualifiedImplName: 	java.util.ArrayList
  simpleImplName: 	ArrayList

- studyRightModel_modelMap: 	org.fulib.classmodel.Attribute
  clazz: 	studyRightModel
  id: 	StudyRightModel_modelMap
  initialization: 	"new LinkedHashMap<>()"
  modified: 	false
  name: 	modelMap
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<String, Object>"
  typeSignature: 	"LinkedHashMap<String,Object>"

- studyRightModel_getOrCreateUniversity: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightModel
  declaration: 	"public University getOrCreateUniversity(String id)"
  id: 	StudyRightModel_getOrCreateUniversity
  methodBody: 	"if (id == null) return null;
return (University) modelMap.computeIfAbsent(id, k -> new University().setId(k));
"
  modified: 	false
  modifiers: 	public
  name: 	getOrCreateUniversity
  paramsString: 	"String id"
  returnType: 	University
  signature: 	"class/StudyRightModel/method/getOrCreateUniversity(String)"

- studyRightModel_getOrCreateRoom: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightModel
  declaration: 	"public Room getOrCreateRoom(String id)"
  id: 	StudyRightModel_getOrCreateRoom
  methodBody: 	"if (id == null) return null;
return (Room) modelMap.computeIfAbsent(id, k -> new Room().setId(k));
"
  modified: 	false
  modifiers: 	public
  name: 	getOrCreateRoom
  paramsString: 	"String id"
  returnType: 	Room
  signature: 	"class/StudyRightModel/method/getOrCreateRoom(String)"

- studyRightModel_getOrCreateStudent: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightModel
  declaration: 	"public Student getOrCreateStudent(String id)"
  id: 	StudyRightModel_getOrCreateStudent
  methodBody: 	"if (id == null) return null;
return (Student) modelMap.computeIfAbsent(id, k -> new Student().setId(k));
"
  modified: 	false
  modifiers: 	public
  name: 	getOrCreateStudent
  paramsString: 	"String id"
  returnType: 	Student
  signature: 	"class/StudyRightModel/method/getOrCreateStudent(String)"

- studyRightModel_getOrCreateStop: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightModel
  declaration: 	"public Stop getOrCreateStop(String id)"
  id: 	StudyRightModel_getOrCreateStop
  methodBody: 	"if (id == null) return null;
return (Stop) modelMap.computeIfAbsent(id, k -> new Stop().setId(k));
"
  modified: 	false
  modifiers: 	public
  name: 	getOrCreateStop
  paramsString: 	"String id"
  returnType: 	Stop
  signature: 	"class/StudyRightModel/method/getOrCreateStop(String)"

- studyRightModel_getOrCreateTour: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightModel
  declaration: 	"public Tour getOrCreateTour(String id)"
  id: 	StudyRightModel_getOrCreateTour
  methodBody: 	"if (id == null) return null;
return (Tour) modelMap.computeIfAbsent(id, k -> new Tour().setId(k));
"
  modified: 	false
  modifiers: 	public
  name: 	getOrCreateTour
  paramsString: 	"String id"
  returnType: 	Tour
  signature: 	"class/StudyRightModel/method/getOrCreateTour(String)"

- studyRightModel_getOrCreateTourList: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightModel
  declaration: 	"public TourList getOrCreateTourList(String id)"
  id: 	StudyRightModel_getOrCreateTourList
  methodBody: 	"if (id == null) return null;
return (TourList) modelMap.computeIfAbsent(id, k -> new TourList().setId(k));
"
  modified: 	false
  modifiers: 	public
  name: 	getOrCreateTourList
  paramsString: 	"String id"
  returnType: 	TourList
  signature: 	"class/StudyRightModel/method/getOrCreateTourList(String)"

- studyRightService_history: 	org.fulib.classmodel.Attribute
  clazz: 	studyRightService
  id: 	StudyRightService_history
  initialization: 	"new LinkedHashMap<>()"
  modified: 	false
  name: 	history
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<String, Event>"
  typeSignature: 	"LinkedHashMap<String,Event>"

- studyRightService_port: 	org.fulib.classmodel.Attribute
  clazz: 	studyRightService
  id: 	StudyRightService_port
  initialization: 	42400
  modified: 	false
  name: 	port
  propertyStyle: 	Bean
  type: 	int
  typeSignature: 	int

- studyRightService_spark: 	org.fulib.classmodel.Attribute
  clazz: 	studyRightService
  id: 	StudyRightService_spark
  modified: 	false
  name: 	spark
  propertyStyle: 	Bean
  type: 	Service
  typeSignature: 	Service

- studyRightService_model: 	org.fulib.classmodel.Attribute
  clazz: 	studyRightService
  id: 	StudyRightService_model
  modified: 	false
  name: 	model
  propertyStyle: 	Bean
  type: 	StudyRightModel
  typeSignature: 	StudyRightModel

- studyRightService_handlerMap: 	org.fulib.classmodel.Attribute
  clazz: 	studyRightService
  id: 	StudyRightService_handlerMap
  modified: 	false
  name: 	handlerMap
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<Class, Consumer<Event>>"
  typeSignature: 	"LinkedHashMap<Class,Consumer<Event>>"

- studyRightService_start: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"public void start()"
  id: 	StudyRightService_start
  methodBody: 	"model = new StudyRightModel();
ExecutorService executor = Executors.newSingleThreadExecutor();
spark = Service.ignite();
spark.port(port);
spark.get(\"/page/:id\", (req, res) -> executor.submit(() -> this.getPage(req, res)).get());
spark.get(\"/\", (req, res) -> executor.submit(() -> this.getHello(req, res)).get());
spark.post(\"/apply\", (req, res) -> executor.submit(() -> this.postApply(req, res)).get());
executor.submit(this::subscribeAndLoadOldEvents);
Logger.getGlobal().info(\"StudyRight service is up and running on port \" + port);
"
  modified: 	false
  modifiers: 	public
  name: 	start
  paramsString: 	""
  returnType: 	void
  signature: 	"class/StudyRightService/method/start()"

- studyRightService_getHello: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private String getHello(Request req, Response res)"
  id: 	StudyRightService_getHello
  methodBody: 	"try {
   String events = Yaml.encode(getHistory().values().toArray());
   String objects = Yaml.encode(model.getModelMap().values().toArray());
   return \"<p id='StudyRight'>This is the StudyRight service. </p>\n\" +
         \"<pre id=\\"history\\">\" + events + \"</pre>\n\" +
         \"<pre id=\\"data\\">\" + objects + \"</pre>\n\" +
         \"\";
}
catch (Exception e) {
   Logger.getGlobal().log(Level.SEVERE, e.getMessage(), e);
   return \"StudyRight Error \" + e.getMessage();
}
"
  modified: 	false
  modifiers: 	private
  name: 	getHello
  paramsString: 	"Request req, Response res"
  returnType: 	String
  signature: 	"class/StudyRightService/method/getHello(Request,Response)"

- studyRightService_subscribeAndLoadOldEvents: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void subscribeAndLoadOldEvents()"
  id: 	StudyRightService_subscribeAndLoadOldEvents
  methodBody: 	"ServiceSubscribed serviceSubscribed = new ServiceSubscribed()
      .setServiceUrl(\"http://localhost:42400/apply\");
String json = Yaml.encode(serviceSubscribed);
try {
   String url = \"http://localhost:42000/subscribe\";
   HttpResponse<String> response = Unirest
         .post(url)
         .body(json)
         .asString();
   String body = response.getBody();
   Map<String, Object> objectMap = Yaml.decode(body);
   for (Object obj : objectMap.values()) {
      apply((Event) obj);
   }
}
catch (UnirestException e) {
   e.printStackTrace();
}"
  modified: 	false
  modifiers: 	private
  name: 	subscribeAndLoadOldEvents
  paramsString: 	""
  returnType: 	void
  signature: 	"class/StudyRightService/method/subscribeAndLoadOldEvents()"

- studyRightService_apply: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"public void apply(Event event)"
  id: 	StudyRightService_apply
  methodBody: 	"if (history.get(event.getId()) != null) {
   return;
}
initEventHandlerMap();
Consumer<Event> handler = handlerMap.computeIfAbsent(event.getClass(), k -> this::ignoreEvent);
handler.accept(event);
history.put(event.getId(), event);
publish(event);"
  modified: 	false
  modifiers: 	public
  name: 	apply
  paramsString: 	"Event event"
  returnType: 	void
  signature: 	"class/StudyRightService/method/apply(Event)"

- studyRightService_getPage: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"public String getPage(Request request, Response response)"
  id: 	StudyRightService_getPage
  methodBody: 	"// no fulib
// add your page handling here
return getDemoPage(request, response);
"
  modified: 	false
  modifiers: 	public
  name: 	getPage
  paramsString: 	"Request request, Response response"
  returnType: 	String
  signature: 	"class/StudyRightService/method/getPage(Request,Response)"

- studyRightService_getDemoPage: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"public String getDemoPage(Request request, Response response)"
  id: 	StudyRightService_getDemoPage
  methodBody: 	"StringBuilder html = new StringBuilder();
String id = request.params(\"id\");
String event = request.queryParams(\"event\");


// 11:00
if (id.equals(\"11_00\")) {
   html.append(\"<form action=\\"/page/12_13\\" method=\\"get\\">\n\");
   // StudyRight 11:00
   html.append(\"   <p>Welcome at Study Right</p>\n\");
   html.append(\"   <p>Find your way, start with math</p>\n\");
   html.append(\"   <p><input id=\\"ok\\" name=\\"button\\" type=\\"submit\\" value=\\"ok\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 12:13
if (id.equals(\"12_13\")) {
   html.append(\"<form action=\\"/page/next_page\\" method=\\"get\\">\n\");
   // StudyRight 12:13
   html.append(\"   <p>This are your alternatives</p>\n\");
   html.append(\"   <p>tour1 math algebra modeling exam</p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}



html.append(\"This is the Shop Service page \" + id + \"\n\");
return html.toString();"
  modified: 	false
  modifiers: 	public
  name: 	getDemoPage
  paramsString: 	"Request request, Response response"
  returnType: 	String
  signature: 	"class/StudyRightService/method/getDemoPage(Request,Response)"

- studyRightService_handleLoadRooms: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void handleLoadRooms(Event e)"
  id: 	StudyRightService_handleLoadRooms
  methodBody: 	"// no fulib
LoadRooms event = (LoadRooms) e;
handleDemoLoadRooms(event);
"
  modified: 	false
  modifiers: 	private
  name: 	handleLoadRooms
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/StudyRightService/method/handleLoadRooms(Event)"

- studyRightService_handleDemoLoadRooms: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void handleDemoLoadRooms(LoadRooms event)"
  id: 	StudyRightService_handleDemoLoadRooms
  methodBody: 	"if (event.getId().equals(\"12:00\")) {
   UniversityBuilt studyRightEvent = new UniversityBuilt();
   studyRightEvent.setId(\"12:00:00\");
   studyRightEvent.setBlockId(\"StudyRight\");
   studyRightEvent.setRooms(\"[math exam]\");
   apply(studyRightEvent);

   RoomBuilt mathEvent = new RoomBuilt();
   mathEvent.setId(\"12:00:01\");
   mathEvent.setBlockId(\"math\");
   mathEvent.setCredits(\"23\");
   mathEvent.setUni(\"StudyRight\");
   mathEvent.setDoors(\"[modeling algebra]\");
   apply(mathEvent);

   RoomBuilt modelingEvent = new RoomBuilt();
   modelingEvent.setId(\"12:00:02\");
   modelingEvent.setBlockId(\"modeling\");
   modelingEvent.setUni(\"StudyRight\");
   modelingEvent.setCredits(\"42\");
   modelingEvent.setDoors(\"[math algebra exam]\");
   apply(modelingEvent);

   RoomBuilt algebraEvent = new RoomBuilt();
   algebraEvent.setId(\"12:00:03\");
   algebraEvent.setBlockId(\"algebra\");
   algebraEvent.setUni(\"StudyRight\");
   algebraEvent.setCredits(\"12\");
   apply(algebraEvent);

   RoomBuilt examEvent = new RoomBuilt();
   examEvent.setId(\"12:00:04\");
   examEvent.setBlockId(\"exam\");
   examEvent.setCredits(\"0\");
   examEvent.setUni(\"StudyRight\");
   apply(examEvent);

   StudentBuilt carliEvent = new StudentBuilt();
   carliEvent.setId(\"12:00:05\");
   carliEvent.setBlockId(\"carli\");
   carliEvent.setName(\"Carli\");
   carliEvent.setBirthYear(\"1970\");
   carliEvent.setStudentId(\"stud42\");
   carliEvent.setUni(\"StudyRight\");
   apply(carliEvent);


   RoomsLoaded e120006 = new RoomsLoaded();

   e120006.setId(\"12:00:06\");
   e120006.setEvent(\"rooms loaded 12:00:06\");
   apply(e120006);

   FindTours e1201 = new FindTours();

   e1201.setId(\"12:01\");
   e1201.setCommand(\"find tours 12:01\");
   apply(e1201);
}
"
  modified: 	false
  modifiers: 	private
  name: 	handleDemoLoadRooms
  paramsString: 	"LoadRooms event"
  returnType: 	void
  signature: 	"class/StudyRightService/method/handleDemoLoadRooms(LoadRooms)"

- studyRightService_handleFindTours: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void handleFindTours(Event e)"
  id: 	StudyRightService_handleFindTours
  methodBody: 	"// no fulib
FindTours event = (FindTours) e;
handleDemoFindTours(event);
"
  modified: 	false
  modifiers: 	private
  name: 	handleFindTours
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/StudyRightService/method/handleFindTours(Event)"

- studyRightService_handleDemoFindTours: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void handleDemoFindTours(FindTours event)"
  id: 	StudyRightService_handleDemoFindTours
  methodBody: 	"if (event.getId().equals(\"12:01\")) {
   StopBuilt s01Event = new StopBuilt();
   s01Event.setId(\"12:01:01\");
   s01Event.setBlockId(\"s01\");
   s01Event.setMotivation(\"77\");
   apply(s01Event);


   VisitRoom e1202 = new VisitRoom();

   e1202.setId(\"12:02\");
   e1202.setCommand(\"visit room 12:02\");
   e1202.setRoom(\"math\");
   e1202.setPreviousStop(\"s01\");
   apply(e1202);
}
"
  modified: 	false
  modifiers: 	private
  name: 	handleDemoFindTours
  paramsString: 	"FindTours event"
  returnType: 	void
  signature: 	"class/StudyRightService/method/handleDemoFindTours(FindTours)"

- studyRightService_handleVisitRoom: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void handleVisitRoom(Event e)"
  id: 	StudyRightService_handleVisitRoom
  methodBody: 	"// no fulib
VisitRoom event = (VisitRoom) e;
handleDemoVisitRoom(event);
"
  modified: 	false
  modifiers: 	private
  name: 	handleVisitRoom
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/StudyRightService/method/handleVisitRoom(Event)"

- studyRightService_handleDemoVisitRoom: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void handleDemoVisitRoom(VisitRoom event)"
  id: 	StudyRightService_handleDemoVisitRoom
  methodBody: 	"if (event.getId().equals(\"12:02\")) {
   StopBuilt s02Event = new StopBuilt();
   s02Event.setId(\"12:02:01\");
   s02Event.setBlockId(\"s02\");
   s02Event.setRoom(\"math\");
   s02Event.setMotivation(\"54\");
   s02Event.setPreviousStop(\"s01\");
   apply(s02Event);


   VisitRoom e1203 = new VisitRoom();

   e1203.setId(\"12:03\");
   e1203.setCommand(\"visit room 12:03\");
   e1203.setRoom(\"algebra\");
   e1203.setPreviousStop(\"s02\");
   apply(e1203);

   VisitRoom e1204 = new VisitRoom();

   e1204.setId(\"12:04\");
   e1204.setCommand(\"visit room 12:04\");
   e1204.setRoom(\"modeling\");
   e1204.setPreviousStop(\"s02\");
   apply(e1204);
}
if (event.getId().equals(\"12:03\")) {
   StopBuilt s03Event = new StopBuilt();
   s03Event.setId(\"12:03:01\");
   s03Event.setBlockId(\"s03\");
   s03Event.setRoom(\"algebra\");
   s03Event.setPreviousStop(\"s02\");
   s03Event.setMotivation(\"42\");
   apply(s03Event);


   VisitRoom e1205 = new VisitRoom();

   e1205.setId(\"12:05\");
   e1205.setCommand(\"visit room 12:05\");
   e1205.setPreviousStop(\"s03\");
   e1205.setRoom(\"modeling\");
   apply(e1205);

   VisitRoom e1206 = new VisitRoom();

   e1206.setId(\"12:06\");
   e1206.setCommand(\"visit room 12:06\");
   e1206.setPreviousStop(\"s03\");
   e1206.setRoom(\"math\");
   apply(e1206);
}
if (event.getId().equals(\"12:05\")) {
   StopBuilt s05Event = new StopBuilt();
   s05Event.setId(\"12:05:01\");
   s05Event.setBlockId(\"s05\");
   s05Event.setRoom(\"modeling\");
   s05Event.setPreviousStop(\"s03\");
   s05Event.setMotivation(\"0\");
   apply(s05Event);


   VisitRoom e1207 = new VisitRoom();

   e1207.setId(\"12:07\");
   e1207.setCommand(\"visit room 12:07\");
   e1207.setPreviousStop(\"s05\");
   e1207.setRoom(\"math\");
   apply(e1207);

   VisitRoom e1208 = new VisitRoom();

   e1208.setId(\"12:08\");
   e1208.setCommand(\"visit room 12:08\");
   e1208.setPreviousStop(\"s05\");
   e1208.setRoom(\"exam\");
   apply(e1208);
}
if (event.getId().equals(\"12:07\")) {
   StopBuilt s07Event = new StopBuilt();
   s07Event.setId(\"12:07:01\");
   s07Event.setBlockId(\"s07\");
   s07Event.setRoom(\"math\");
   s07Event.setPreviousStop(\"s05\");
   s07Event.setMotivation(\"-23\");
   apply(s07Event);


   TourFailed e120702 = new TourFailed();

   e120702.setId(\"12:07:02\");
   e120702.setEvent(\"tour failed 12:07:02\");
   e120702.setStop(\"s07\");
   e120702.setRoom(\"math\");
   e120702.setCredits(\"-23\");
   apply(e120702);
}
if (event.getId().equals(\"12:08\")) {
   StopBuilt s08Event = new StopBuilt();
   s08Event.setId(\"12:08:01\");
   s08Event.setBlockId(\"s08\");
   s08Event.setRoom(\"exam\");
   s08Event.setPreviousStop(\"s05\");
   s08Event.setMotivation(\"0\");
   apply(s08Event);


   ReportTourStops e1209 = new ReportTourStops();

   e1209.setId(\"12:09\");
   e1209.setCommand(\"report tour stops 12:09\");
   apply(e1209);
}
if (event.getId().equals(\"12:08\")) {

   TourEndFound e120803 = new TourEndFound();

   e120803.setId(\"12:08:03\");
   e120803.setEvent(\"tour end found 12:08:03\");
   e120803.setStop(\"s08\");
   e120803.setTour(\"tour1\");
   e120803.setTourList(\"allTours\");
   apply(e120803);
   TourBuilt tour1Event = new TourBuilt();
   tour1Event.setId(\"12:08:02\");
   tour1Event.setBlockId(\"tour1\");
   tour1Event.setStops(\"exam\");
   apply(tour1Event);

   TourListBuilt allToursEvent = new TourListBuilt();
   allToursEvent.setId(\"12:08:03\");
   allToursEvent.setBlockId(\"allTours\");
   allToursEvent.setAlternatives(\"[tour1]\");
   apply(allToursEvent);


   TourEndFound e1209 = new TourEndFound();

   e1209.setId(\"12:09\");
   e1209.setEvent(\"tour end found 12:09\");
   e1209.setStop(\"s08\");
   e1209.setTour(\"tour1\");
   e1209.setTourList(\"allTours\");
   apply(e1209);
}
"
  modified: 	false
  modifiers: 	private
  name: 	handleDemoVisitRoom
  paramsString: 	"VisitRoom event"
  returnType: 	void
  signature: 	"class/StudyRightService/method/handleDemoVisitRoom(VisitRoom)"

- studyRightService_handleReportTourStops: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void handleReportTourStops(Event e)"
  id: 	StudyRightService_handleReportTourStops
  methodBody: 	"// no fulib
ReportTourStops event = (ReportTourStops) e;
handleDemoReportTourStops(event);
"
  modified: 	false
  modifiers: 	private
  name: 	handleReportTourStops
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/StudyRightService/method/handleReportTourStops(Event)"

- studyRightService_handleDemoReportTourStops: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void handleDemoReportTourStops(ReportTourStops event)"
  id: 	StudyRightService_handleDemoReportTourStops
  methodBody: 	"if (event.getId().equals(\"12:09\")) {
   TourBuilt tour1Event = new TourBuilt();
   tour1Event.setId(\"12:09:01\");
   tour1Event.setBlockId(\"tour1\");
   tour1Event.setStops(\"modeling exam\");
   tour1Event.setTourList(\"allTours\");
   apply(tour1Event);


   TourEndFound e1210 = new TourEndFound();

   e1210.setId(\"12:10\");
   e1210.setEvent(\"tour end found 12:10\");
   e1210.setStop(\"s05\");
   e1210.setTour(\"tour1\");
   apply(e1210);
}
"
  modified: 	false
  modifiers: 	private
  name: 	handleDemoReportTourStops
  paramsString: 	"ReportTourStops event"
  returnType: 	void
  signature: 	"class/StudyRightService/method/handleDemoReportTourStops(ReportTourStops)"

- studyRightService_handleTourEndFound: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void handleTourEndFound(Event e)"
  id: 	StudyRightService_handleTourEndFound
  methodBody: 	"// no fulib
TourEndFound event = (TourEndFound) e;
handleDemoTourEndFound(event);
"
  modified: 	false
  modifiers: 	private
  name: 	handleTourEndFound
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/StudyRightService/method/handleTourEndFound(Event)"

- studyRightService_handleDemoTourEndFound: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void handleDemoTourEndFound(TourEndFound event)"
  id: 	StudyRightService_handleDemoTourEndFound
  methodBody: 	"if (event.getId().equals(\"12:10\")) {
   TourBuilt tour1Event = new TourBuilt();
   tour1Event.setId(\"12:10:01\");
   tour1Event.setBlockId(\"tour1\");
   tour1Event.setStops(\"algebra modeling exam\");
   apply(tour1Event);


   TourEndFound e1211 = new TourEndFound();

   e1211.setId(\"12:11\");
   e1211.setEvent(\"tour end found 12:11\");
   e1211.setStop(\"s03\");
   e1211.setTour(\"tour1\");
   apply(e1211);
}
if (event.getId().equals(\"12:11\")) {
   TourBuilt tour1Event = new TourBuilt();
   tour1Event.setId(\"12:11:01\");
   tour1Event.setBlockId(\"tour1\");
   tour1Event.setStops(\"math algebra modeling exam\");
   apply(tour1Event);


   TourEndFound e1212 = new TourEndFound();

   e1212.setId(\"12:12\");
   e1212.setEvent(\"tour end found 12:12\");
   e1212.setStop(\"s02\");
   e1212.setTour(\"tour1\");
   apply(e1212);
}
"
  modified: 	false
  modifiers: 	private
  name: 	handleDemoTourEndFound
  paramsString: 	"TourEndFound event"
  returnType: 	void
  signature: 	"class/StudyRightService/method/handleDemoTourEndFound(TourEndFound)"

- studyRightService_handleUniversityBuilt: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void handleUniversityBuilt(Event e)"
  id: 	StudyRightService_handleUniversityBuilt
  methodBody: 	"UniversityBuilt event = (UniversityBuilt) e;
University object = model.getOrCreateUniversity(event.getBlockId());
for (String name : stripBrackets(event.getRooms()).split(\"\\s+\")) {
   if (name.equals(\"\")) continue;
   object.withRooms(model.getOrCreateRoom(name));
}
"
  modified: 	false
  modifiers: 	private
  name: 	handleUniversityBuilt
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/StudyRightService/method/handleUniversityBuilt(Event)"

- studyRightService_handleRoomBuilt: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void handleRoomBuilt(Event e)"
  id: 	StudyRightService_handleRoomBuilt
  methodBody: 	"RoomBuilt event = (RoomBuilt) e;
Room object = model.getOrCreateRoom(event.getBlockId());
object.setCredits(event.getCredits());
object.setUni(model.getOrCreateUniversity(event.getUni()));
for (String name : stripBrackets(event.getDoors()).split(\"\\s+\")) {
   if (name.equals(\"\")) continue;
   object.withDoors(model.getOrCreateRoom(name));
}
"
  modified: 	false
  modifiers: 	private
  name: 	handleRoomBuilt
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/StudyRightService/method/handleRoomBuilt(Event)"

- studyRightService_handleStudentBuilt: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void handleStudentBuilt(Event e)"
  id: 	StudyRightService_handleStudentBuilt
  methodBody: 	"StudentBuilt event = (StudentBuilt) e;
Student object = model.getOrCreateStudent(event.getBlockId());
object.setName(event.getName());
object.setBirthYear(Integer.parseInt(event.getBirthYear()));
object.setStudentId(event.getStudentId());
object.setUni(model.getOrCreateUniversity(event.getUni()));
"
  modified: 	false
  modifiers: 	private
  name: 	handleStudentBuilt
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/StudyRightService/method/handleStudentBuilt(Event)"

- studyRightService_handleStopBuilt: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void handleStopBuilt(Event e)"
  id: 	StudyRightService_handleStopBuilt
  methodBody: 	"StopBuilt event = (StopBuilt) e;
Stop object = model.getOrCreateStop(event.getBlockId());
object.setMotivation(event.getMotivation());
object.setRoom(event.getRoom());
object.setPreviousStop(model.getOrCreateStop(event.getPreviousStop()));
"
  modified: 	false
  modifiers: 	private
  name: 	handleStopBuilt
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/StudyRightService/method/handleStopBuilt(Event)"

- studyRightService_handleTourBuilt: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void handleTourBuilt(Event e)"
  id: 	StudyRightService_handleTourBuilt
  methodBody: 	"TourBuilt event = (TourBuilt) e;
Tour object = model.getOrCreateTour(event.getBlockId());
object.setStops(event.getStops());
object.setTourList(model.getOrCreateTourList(event.getTourList()));
"
  modified: 	false
  modifiers: 	private
  name: 	handleTourBuilt
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/StudyRightService/method/handleTourBuilt(Event)"

- studyRightService_handleTourListBuilt: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void handleTourListBuilt(Event e)"
  id: 	StudyRightService_handleTourListBuilt
  methodBody: 	"TourListBuilt event = (TourListBuilt) e;
TourList object = model.getOrCreateTourList(event.getBlockId());
for (String name : stripBrackets(event.getAlternatives()).split(\"\\s+\")) {
   if (name.equals(\"\")) continue;
   object.withAlternatives(model.getOrCreateTour(name));
}
"
  modified: 	false
  modifiers: 	private
  name: 	handleTourListBuilt
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/StudyRightService/method/handleTourListBuilt(Event)"

- studyRightService_initEventHandlerMap: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void initEventHandlerMap()"
  id: 	StudyRightService_initEventHandlerMap
  methodBody: 	"if (handlerMap == null) {
   handlerMap = new LinkedHashMap<>();
   handlerMap.put(LoadRooms.class, this::handleLoadRooms);
   handlerMap.put(FindTours.class, this::handleFindTours);
   handlerMap.put(VisitRoom.class, this::handleVisitRoom);
   handlerMap.put(ReportTourStops.class, this::handleReportTourStops);
   handlerMap.put(TourEndFound.class, this::handleTourEndFound);
   handlerMap.put(UniversityBuilt.class, this::handleUniversityBuilt);
   handlerMap.put(RoomBuilt.class, this::handleRoomBuilt);
   handlerMap.put(StudentBuilt.class, this::handleStudentBuilt);
   handlerMap.put(StopBuilt.class, this::handleStopBuilt);
   handlerMap.put(TourBuilt.class, this::handleTourBuilt);
   handlerMap.put(TourListBuilt.class, this::handleTourListBuilt);
}
"
  modified: 	false
  modifiers: 	private
  name: 	initEventHandlerMap
  paramsString: 	""
  returnType: 	void
  signature: 	"class/StudyRightService/method/initEventHandlerMap()"

- studyRightService_ignoreEvent: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private void ignoreEvent(Event event)"
  id: 	StudyRightService_ignoreEvent
  methodBody: 	"// empty
"
  modified: 	false
  modifiers: 	private
  name: 	ignoreEvent
  paramsString: 	"Event event"
  returnType: 	void
  signature: 	"class/StudyRightService/method/ignoreEvent(Event)"

- studyRightService_publish: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"public void publish(Event event)"
  id: 	StudyRightService_publish
  methodBody: 	"String json = Yaml.encode(event);

try {
   HttpResponse<String> response = Unirest
         .post(\"http://localhost:42000/publish\")
         .body(json)
         .asString();
}
catch (UnirestException e) {
   e.printStackTrace();
}"
  modified: 	false
  modifiers: 	public
  name: 	publish
  paramsString: 	"Event event"
  returnType: 	void
  signature: 	"class/StudyRightService/method/publish(Event)"

- studyRightService_postApply: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"private String postApply(Request req, Response res)"
  id: 	StudyRightService_postApply
  methodBody: 	"      try {
         String body = req.body();
         Map<String, Object> map = Yaml.decode(body);
         for (Object value : map.values()) {
            Event event = (Event) value;
            apply(event);
         }
      }
      catch (Exception e) {
         Logger.getGlobal().log(Level.SEVERE, \"postApply failed\", e);
      }
      return \"apply done\";"
  modified: 	false
  modifiers: 	private
  name: 	postApply
  paramsString: 	"Request req, Response res"
  returnType: 	String
  signature: 	"class/StudyRightService/method/postApply(Request,Response)"

- studyRightService_stripBrackets: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	studyRightService
  declaration: 	"public String stripBrackets(String back)"
  id: 	StudyRightService_stripBrackets
  methodBody: 	"      if (back == null) {
         return \"\";
      }
      int open = back.indexOf('[');
      int close = back.indexOf(']');
      if (open >= 0 && close >= 0) {
         back = back.substring(open + 1, close);
      }
      return back;"
  modified: 	false
  modifiers: 	public
  name: 	stripBrackets
  paramsString: 	"String back"
  returnType: 	String
  signature: 	"class/StudyRightService/method/stripBrackets(String)"

- university_id: 	org.fulib.classmodel.Attribute
  clazz: 	university
  id: 	University_id
  modified: 	false
  name: 	id
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- university_rooms: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	42
  clazz: 	university
  collectionType: 	c1
  id: 	University_rooms
  modified: 	false
  name: 	rooms
  other: 	room_uni
  propertyStyle: 	Bean
  roleType: 	"java.util.ArrayList<%s>"

- university_persons: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	42
  clazz: 	university
  collectionType: 	c1
  id: 	University_persons
  modified: 	false
  name: 	persons
  other: 	person_uni
  propertyStyle: 	Bean
  roleType: 	"java.util.ArrayList<%s>"

- room_id: 	org.fulib.classmodel.Attribute
  clazz: 	room
  id: 	Room_id
  modified: 	false
  name: 	id
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- room_credits: 	org.fulib.classmodel.Attribute
  clazz: 	room
  id: 	Room_credits
  modified: 	false
  name: 	credits
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- room_uni: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	room
  id: 	Room_uni
  modified: 	false
  name: 	uni
  other: 	university_rooms
  propertyStyle: 	Bean

- room_doors: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	42
  clazz: 	room
  collectionType: 	c1
  id: 	Room_doors
  modified: 	false
  name: 	doors
  other: 	room_doors
  propertyStyle: 	Bean
  roleType: 	"java.util.ArrayList<%s>"

- person_id: 	org.fulib.classmodel.Attribute
  clazz: 	person
  id: 	Person_id
  modified: 	false
  name: 	id
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- person_name: 	org.fulib.classmodel.Attribute
  clazz: 	person
  id: 	Person_name
  modified: 	false
  name: 	name
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- person_birthYear: 	org.fulib.classmodel.Attribute
  clazz: 	person
  id: 	Person_birthYear
  modified: 	false
  name: 	birthYear
  propertyStyle: 	Bean
  type: 	int
  typeSignature: 	int

- person_uni: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	person
  id: 	Person_uni
  modified: 	false
  name: 	uni
  other: 	university_persons
  propertyStyle: 	Bean

- student_studentId: 	org.fulib.classmodel.Attribute
  clazz: 	student
  id: 	Student_studentId
  modified: 	false
  name: 	studentId
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- stop_id: 	org.fulib.classmodel.Attribute
  clazz: 	stop
  id: 	Stop_id
  modified: 	false
  name: 	id
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- stop_motivation: 	org.fulib.classmodel.Attribute
  clazz: 	stop
  id: 	Stop_motivation
  modified: 	false
  name: 	motivation
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- stop_room: 	org.fulib.classmodel.Attribute
  clazz: 	stop
  id: 	Stop_room
  modified: 	false
  name: 	room
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- stop_previousStop: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	stop
  id: 	Stop_previousStop
  modified: 	false
  name: 	previousStop
  other: 	stop_nextStops
  propertyStyle: 	Bean

- stop_nextStops: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	42
  clazz: 	stop
  collectionType: 	c1
  id: 	Stop_nextStops
  modified: 	false
  name: 	nextStops
  other: 	stop_previousStop
  propertyStyle: 	Bean
  roleType: 	"java.util.ArrayList<%s>"

- tour_id: 	org.fulib.classmodel.Attribute
  clazz: 	tour
  id: 	Tour_id
  modified: 	false
  name: 	id
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- tour_stops: 	org.fulib.classmodel.Attribute
  clazz: 	tour
  id: 	Tour_stops
  modified: 	false
  name: 	stops
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- tour_tourList: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	tour
  id: 	Tour_tourList
  modified: 	false
  name: 	tourList
  other: 	tourList_alternatives
  propertyStyle: 	Bean

- tourList_id: 	org.fulib.classmodel.Attribute
  clazz: 	tourList
  id: 	TourList_id
  modified: 	false
  name: 	id
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- tourList_alternatives: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	42
  clazz: 	tourList
  collectionType: 	c1
  id: 	TourList_alternatives
  modified: 	false
  name: 	alternatives
  other: 	tour_tourList
  propertyStyle: 	Bean
  roleType: 	"java.util.ArrayList<%s>"

