- c: 	org.fulib.classmodel.ClassModel
  classes: 	ionicKassel42Model 	ionicKassel42BusinessLogic 	ionicKassel42Builder 	ionicKassel42Service
  defaultCollectionType: 	c1
  defaultPropertyStyle: 	Bean
  defaultRoleType: 	"java.util.ArrayList<%s>"
  mainJavaDir: 	"test/src/main/java"
  packageName: 	uks.debuggen.interconnect.IonicKassel42
  packageSrcFolder: 	"test/src/main/java/uks/debuggen/interconnect/IonicKassel42"

- ionicKassel42Model: 	org.fulib.classmodel.Clazz
  attributes: 	ionicKassel42Model_modelMap
  importList: 	"import java.util.LinkedHashMap;"
  imports: 	"import java.util.LinkedHashMap;"
  model: 	c
  modified: 	false
  name: 	IonicKassel42Model
  propertyStyle: 	Bean

- ionicKassel42BusinessLogic: 	org.fulib.classmodel.Clazz
  attributes: 	ionicKassel42BusinessLogic_model 	ionicKassel42BusinessLogic_handlerMap
  importList: 	"import java.util.LinkedHashMap;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.interconnect.events.*;"
  imports: 	"import java.util.LinkedHashMap;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.interconnect.events.*;"
  methods: 	ionicKassel42BusinessLogic_handleCarConnectedEvent 	ionicKassel42BusinessLogic_handleDemoCarConnectedEvent 	ionicKassel42BusinessLogic_initEventHandlerMap 	ionicKassel42BusinessLogic_ignoreEvent 	ionicKassel42BusinessLogic_getHandler
  model: 	c
  modified: 	false
  name: 	IonicKassel42BusinessLogic
  propertyStyle: 	Bean
  roles: 	ionicKassel42BusinessLogic_builder 	ionicKassel42BusinessLogic_service

- ionicKassel42Builder: 	org.fulib.classmodel.Clazz
  attributes: 	ionicKassel42Builder_model 	ionicKassel42Builder_eventStore 	ionicKassel42Builder_loaderMap 	ionicKassel42Builder_groupStore
  importList: 	"import java.util.LinkedHashMap;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.interconnect.events.*;" 	"import java.util.function.Function;"
  imports: 	"import java.util.LinkedHashMap;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.interconnect.events.*;" 	"import java.util.function.Function;"
  methods: 	ionicKassel42Builder_outdated 	ionicKassel42Builder_load 	ionicKassel42Builder_initLoaderMap 	ionicKassel42Builder_addToGroup 	ionicKassel42Builder_stripBrackets
  model: 	c
  modified: 	false
  name: 	IonicKassel42Builder
  propertyStyle: 	Bean
  roles: 	ionicKassel42Builder_businessLogic 	ionicKassel42Builder_service

- ionicKassel42Service: 	org.fulib.classmodel.Clazz
  attributes: 	ionicKassel42Service_history 	ionicKassel42Service_port 	ionicKassel42Service_spark 	ionicKassel42Service_model
  importList: 	"import java.util.LinkedHashMap;" 	"import java.time.Instant;" 	"import java.time.format.DateTimeFormatter;" 	"import java.util.Map;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.interconnect.events.*;" 	"import org.fulib.yaml.Yaml;" 	"import org.fulib.yaml.YamlIdMap;" 	"import spark.Service;" 	"import spark.Request;" 	"import spark.Response;" 	"import com.mashape.unirest.http.HttpResponse;" 	"import com.mashape.unirest.http.Unirest;" 	"import com.mashape.unirest.http.exceptions.UnirestException;" 	"import java.util.concurrent.ExecutorService;" 	"import java.util.concurrent.Executors;" 	"import java.util.logging.Logger;" 	"import java.util.logging.Level;"
  imports: 	"import java.util.LinkedHashMap;" 	"import java.time.Instant;" 	"import java.time.format.DateTimeFormatter;" 	"import java.util.Map;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.interconnect.events.*;" 	"import org.fulib.yaml.Yaml;" 	"import org.fulib.yaml.YamlIdMap;" 	"import spark.Service;" 	"import spark.Request;" 	"import spark.Response;" 	"import com.mashape.unirest.http.HttpResponse;" 	"import com.mashape.unirest.http.Unirest;" 	"import com.mashape.unirest.http.exceptions.UnirestException;" 	"import java.util.concurrent.ExecutorService;" 	"import java.util.concurrent.Executors;" 	"import java.util.logging.Logger;" 	"import java.util.logging.Level;"
  methods: 	ionicKassel42Service_query 	ionicKassel42Service_isoNow 	ionicKassel42Service_start 	ionicKassel42Service_getHello 	ionicKassel42Service_subscribeAndLoadOldEvents 	ionicKassel42Service_apply 	ionicKassel42Service_getPage 	ionicKassel42Service_getDemoPage 	ionicKassel42Service_publish 	ionicKassel42Service_postApply
  model: 	c
  modified: 	false
  name: 	IonicKassel42Service
  propertyStyle: 	Bean
  roles: 	ionicKassel42Service_businessLogic 	ionicKassel42Service_builder

- c1: 	org.fulib.classmodel.CollectionType
  implClass: 	class java.util.ArrayList
  implTemplate: 	"java.util.ArrayList<%s>"
  itf: 	org.fulib.classmodel.CollectionInterface.List
  qualifiedImplName: 	java.util.ArrayList
  simpleImplName: 	ArrayList

- ionicKassel42Model_modelMap: 	org.fulib.classmodel.Attribute
  clazz: 	ionicKassel42Model
  id: 	IonicKassel42Model_modelMap
  initialization: 	"new LinkedHashMap<>()"
  modified: 	false
  name: 	modelMap
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<String, Object>"
  typeSignature: 	"LinkedHashMap<String,Object>"

- ionicKassel42BusinessLogic_model: 	org.fulib.classmodel.Attribute
  clazz: 	ionicKassel42BusinessLogic
  id: 	IonicKassel42BusinessLogic_model
  modified: 	false
  name: 	model
  propertyStyle: 	Bean
  type: 	IonicKassel42Model
  typeSignature: 	IonicKassel42Model

- ionicKassel42BusinessLogic_handlerMap: 	org.fulib.classmodel.Attribute
  clazz: 	ionicKassel42BusinessLogic
  id: 	IonicKassel42BusinessLogic_handlerMap
  modified: 	false
  name: 	handlerMap
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<Class, Consumer<Event>>"
  typeSignature: 	"LinkedHashMap<Class,Consumer<Event>>"

- ionicKassel42BusinessLogic_handleCarConnectedEvent: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42BusinessLogic
  declaration: 	"private void handleCarConnectedEvent(Event e)"
  id: 	IonicKassel42BusinessLogic_handleCarConnectedEvent
  methodBody: 	"// to protect manuel changes to this method insert a 'no' in front of fulib in the next line
// fulib
CarConnectedEvent event = (CarConnectedEvent) e;
handleDemoCarConnectedEvent(event);
"
  modified: 	false
  modifiers: 	private
  name: 	handleCarConnectedEvent
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/IonicKassel42BusinessLogic/method/handleCarConnectedEvent(Event)"

- ionicKassel42BusinessLogic_handleDemoCarConnectedEvent: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42BusinessLogic
  declaration: 	"private void handleDemoCarConnectedEvent(CarConnectedEvent event)"
  id: 	IonicKassel42BusinessLogic_handleDemoCarConnectedEvent
  methodBody: 	"if (event.getId().equals(\"11:55\")) {

   ChargerInstalledEvent e1200 = new ChargerInstalledEvent();

   e1200.setId(\"12:00\");
   e1200.setChargerId(\"IonicKassel42\");
   e1200.setAddress(\"Wilhelmshoeher Alle 73\");
   e1200.setPower(\"100 KW\");
   service.apply(e1200);

   ChargingRequestedEvent e1230 = new ChargingRequestedEvent();

   e1230.setId(\"12:30\");
   e1230.setRequestId(\"IonicKassel42_1230\");
   e1230.setChargerId(\"IonicKassel42\");
   e1230.setPower(\"100 KW\");
   e1230.setInterval(\"12:30 - 12:50\");
   service.apply(e1230);
}
"
  modified: 	false
  modifiers: 	private
  name: 	handleDemoCarConnectedEvent
  paramsString: 	"CarConnectedEvent event"
  returnType: 	void
  signature: 	"class/IonicKassel42BusinessLogic/method/handleDemoCarConnectedEvent(CarConnectedEvent)"

- ionicKassel42BusinessLogic_initEventHandlerMap: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42BusinessLogic
  declaration: 	"public void initEventHandlerMap()"
  id: 	IonicKassel42BusinessLogic_initEventHandlerMap
  methodBody: 	"if (handlerMap == null) {
   handlerMap = new LinkedHashMap<>();
   handlerMap.put(CarConnectedEvent.class, this::handleCarConnectedEvent);
}
"
  modified: 	false
  modifiers: 	public
  name: 	initEventHandlerMap
  paramsString: 	""
  returnType: 	void
  signature: 	"class/IonicKassel42BusinessLogic/method/initEventHandlerMap()"

- ionicKassel42BusinessLogic_ignoreEvent: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42BusinessLogic
  declaration: 	"private void ignoreEvent(Event event)"
  id: 	IonicKassel42BusinessLogic_ignoreEvent
  methodBody: 	"// empty
"
  modified: 	false
  modifiers: 	private
  name: 	ignoreEvent
  paramsString: 	"Event event"
  returnType: 	void
  signature: 	"class/IonicKassel42BusinessLogic/method/ignoreEvent(Event)"

- ionicKassel42BusinessLogic_getHandler: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42BusinessLogic
  declaration: 	"public Consumer<Event> getHandler(Event event)"
  id: 	IonicKassel42BusinessLogic_getHandler
  methodBody: 	"return getHandlerMap().computeIfAbsent(event.getClass(), k -> this::ignoreEvent);
"
  modified: 	false
  modifiers: 	public
  name: 	getHandler
  paramsString: 	"Event event"
  returnType: 	"Consumer<Event>"
  signature: 	"class/IonicKassel42BusinessLogic/method/getHandler(Event)"

- ionicKassel42BusinessLogic_builder: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	ionicKassel42BusinessLogic
  id: 	IonicKassel42BusinessLogic_builder
  modified: 	false
  name: 	builder
  other: 	ionicKassel42Builder_businessLogic
  propertyStyle: 	Bean

- ionicKassel42BusinessLogic_service: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	ionicKassel42BusinessLogic
  id: 	IonicKassel42BusinessLogic_service
  modified: 	false
  name: 	service
  other: 	ionicKassel42Service_businessLogic
  propertyStyle: 	Bean

- ionicKassel42Builder_model: 	org.fulib.classmodel.Attribute
  clazz: 	ionicKassel42Builder
  id: 	IonicKassel42Builder_model
  modified: 	false
  name: 	model
  propertyStyle: 	Bean
  type: 	IonicKassel42Model
  typeSignature: 	IonicKassel42Model

- ionicKassel42Builder_eventStore: 	org.fulib.classmodel.Attribute
  clazz: 	ionicKassel42Builder
  id: 	IonicKassel42Builder_eventStore
  initialization: 	"new LinkedHashMap<>()"
  modified: 	false
  name: 	eventStore
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<String, DataEvent>"
  typeSignature: 	"LinkedHashMap<String,DataEvent>"

- ionicKassel42Builder_loaderMap: 	org.fulib.classmodel.Attribute
  clazz: 	ionicKassel42Builder
  id: 	IonicKassel42Builder_loaderMap
  modified: 	false
  name: 	loaderMap
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<Class, Function<Event, Object>>"
  typeSignature: 	"LinkedHashMap<Class,Function<Event,Object>>"

- ionicKassel42Builder_groupStore: 	org.fulib.classmodel.Attribute
  clazz: 	ionicKassel42Builder
  id: 	IonicKassel42Builder_groupStore
  initialization: 	"new LinkedHashMap<>()"
  modified: 	false
  name: 	groupStore
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<String, LinkedHashMap<String, DataEvent>>"
  typeSignature: 	"LinkedHashMap<String,LinkedHashMap<String,DataEvent>>"

- ionicKassel42Builder_outdated: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42Builder
  declaration: 	"private boolean outdated(DataEvent event)"
  id: 	IonicKassel42Builder_outdated
  methodBody: 	"      DataEvent oldEvent = getEventStore().get(event.getBlockId());

      if (oldEvent == null) {
         eventStore.put(event.getBlockId(), event);
         return false;
      }

      if (oldEvent.getId().compareTo(event.getId()) < 0) {
         eventStore.put(event.getBlockId(), event);
         return false;
      }

      return true;"
  modified: 	false
  modifiers: 	private
  name: 	outdated
  paramsString: 	"DataEvent event"
  returnType: 	boolean
  signature: 	"class/IonicKassel42Builder/method/outdated(DataEvent)"

- ionicKassel42Builder_load: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42Builder
  declaration: 	"public Object load(String blockId)"
  id: 	IonicKassel42Builder_load
  methodBody: 	"      DataEvent dataEvent = eventStore.get(blockId);
      if (dataEvent == null) {
         return null;
      }

      initLoaderMap();
      Function<Event, Object> loader = loaderMap.get(dataEvent.getClass());
      Object object = loader.apply(dataEvent);

      LinkedHashMap<String, DataEvent> group = groupStore.computeIfAbsent(blockId, k -> new LinkedHashMap<>());
      for (DataEvent element : group.values()) {
         loader = loaderMap.get(element.getClass());
         loader.apply(element);
      }

      return object;"
  modified: 	false
  modifiers: 	public
  name: 	load
  paramsString: 	"String blockId"
  returnType: 	Object
  signature: 	"class/IonicKassel42Builder/method/load(String)"

- ionicKassel42Builder_initLoaderMap: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42Builder
  declaration: 	"private void initLoaderMap()"
  id: 	IonicKassel42Builder_initLoaderMap
  methodBody: 	"if (loaderMap == null) {
   loaderMap = new LinkedHashMap<>();
}
"
  modified: 	false
  modifiers: 	private
  name: 	initLoaderMap
  paramsString: 	""
  returnType: 	void
  signature: 	"class/IonicKassel42Builder/method/initLoaderMap()"

- ionicKassel42Builder_addToGroup: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42Builder
  declaration: 	"private void addToGroup(String groupId, String elementId)"
  id: 	IonicKassel42Builder_addToGroup
  methodBody: 	"      DataEvent dataEvent = eventStore.get(elementId);

      if (dataEvent == null) {
         java.util.logging.Logger.getGlobal().severe(String.format(\"could not find element event %s for group %s \", elementId, groupId));
         return;
      }

      LinkedHashMap<String, DataEvent> group = groupStore.computeIfAbsent(groupId, k -> new LinkedHashMap<>());
      group.put(elementId, dataEvent);"
  modified: 	false
  modifiers: 	private
  name: 	addToGroup
  paramsString: 	"String groupId, String elementId"
  returnType: 	void
  signature: 	"class/IonicKassel42Builder/method/addToGroup(String,String)"

- ionicKassel42Builder_stripBrackets: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42Builder
  declaration: 	"public String stripBrackets(String back)"
  id: 	IonicKassel42Builder_stripBrackets
  methodBody: 	"      if (back == null) {
         return \"\";
      }
      int open = back.indexOf('[');
      int close = back.indexOf(']');
      if (open >= 0 && close >= 0) {
         back = back.substring(open + 1, close);
      }
      return back;"
  modified: 	false
  modifiers: 	public
  name: 	stripBrackets
  paramsString: 	"String back"
  returnType: 	String
  signature: 	"class/IonicKassel42Builder/method/stripBrackets(String)"

- ionicKassel42Builder_businessLogic: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	ionicKassel42Builder
  id: 	IonicKassel42Builder_businessLogic
  modified: 	false
  name: 	businessLogic
  other: 	ionicKassel42BusinessLogic_builder
  propertyStyle: 	Bean

- ionicKassel42Builder_service: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	ionicKassel42Builder
  id: 	IonicKassel42Builder_service
  modified: 	false
  name: 	service
  other: 	ionicKassel42Service_builder
  propertyStyle: 	Bean

- ionicKassel42Service_history: 	org.fulib.classmodel.Attribute
  clazz: 	ionicKassel42Service
  id: 	IonicKassel42Service_history
  initialization: 	"new LinkedHashMap<>()"
  modified: 	false
  name: 	history
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<String, Event>"
  typeSignature: 	"LinkedHashMap<String,Event>"

- ionicKassel42Service_port: 	org.fulib.classmodel.Attribute
  clazz: 	ionicKassel42Service
  id: 	IonicKassel42Service_port
  initialization: 	42001
  modified: 	false
  name: 	port
  propertyStyle: 	Bean
  type: 	int
  typeSignature: 	int

- ionicKassel42Service_spark: 	org.fulib.classmodel.Attribute
  clazz: 	ionicKassel42Service
  id: 	IonicKassel42Service_spark
  modified: 	false
  name: 	spark
  propertyStyle: 	Bean
  type: 	Service
  typeSignature: 	Service

- ionicKassel42Service_model: 	org.fulib.classmodel.Attribute
  clazz: 	ionicKassel42Service
  id: 	IonicKassel42Service_model
  modified: 	false
  name: 	model
  propertyStyle: 	Bean
  type: 	IonicKassel42Model
  typeSignature: 	IonicKassel42Model

- ionicKassel42Service_query: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42Service
  declaration: 	"public Query query(Query query)"
  id: 	IonicKassel42Service_query
  methodBody: 	"      DataEvent dataEvent = getBuilder().getEventStore().get(query.getKey());

      if (dataEvent == null) {
         return query;
      }

      if (dataEvent instanceof DataGroup) {
         DataGroup group = (DataGroup) dataEvent;
         query.withResults(group.getElements());
      }
      else {
         query.withResults(dataEvent);
      }

      return query;"
  modified: 	false
  modifiers: 	public
  name: 	query
  paramsString: 	"Query query"
  returnType: 	Query
  signature: 	"class/IonicKassel42Service/method/query(Query)"

- ionicKassel42Service_isoNow: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42Service
  declaration: 	"public String isoNow()"
  id: 	IonicKassel42Service_isoNow
  methodBody: 	"return DateTimeFormatter.ISO_INSTANT.format(Instant.now());
"
  modified: 	false
  modifiers: 	public
  name: 	isoNow
  paramsString: 	""
  returnType: 	String
  signature: 	"class/IonicKassel42Service/method/isoNow()"

- ionicKassel42Service_start: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42Service
  declaration: 	"public void start()"
  id: 	IonicKassel42Service_start
  methodBody: 	"model = new IonicKassel42Model();
setBuilder(new IonicKassel42Builder().setModel(model));
setBusinessLogic(new IonicKassel42BusinessLogic());
businessLogic.setBuilder(getBuilder());
businessLogic.setModel(model);
ExecutorService executor = Executors.newSingleThreadExecutor();
spark = Service.ignite();
spark.port(port);
spark.get(\"/page/:id\", (req, res) -> executor.submit(() -> this.getPage(req, res)).get());
spark.get(\"/\", (req, res) -> executor.submit(() -> this.getHello(req, res)).get());
spark.post(\"/apply\", (req, res) -> executor.submit(() -> this.postApply(req, res)).get());
executor.submit(this::subscribeAndLoadOldEvents);
Logger.getGlobal().info(\"IonicKassel42 service is up and running on port \" + port);
"
  modified: 	false
  modifiers: 	public
  name: 	start
  paramsString: 	""
  returnType: 	void
  signature: 	"class/IonicKassel42Service/method/start()"

- ionicKassel42Service_getHello: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42Service
  declaration: 	"private String getHello(Request req, Response res)"
  id: 	IonicKassel42Service_getHello
  methodBody: 	"try {
   String events = Yaml.encodeSimple(getHistory().values().toArray());
   String objects = Yaml.encodeSimple(model.getModelMap().values().toArray());
   return \"<p id='IonicKassel42'>This is the IonicKassel42 service. </p>\n\" +
         \"<pre id=\\"history\\">\" + events + \"</pre>\n\" +
         \"<pre id=\\"data\\">\" + objects + \"</pre>\n\" +
         \"\";
}
catch (Exception e) {
   Logger.getGlobal().log(Level.SEVERE, e.getMessage(), e);
   return \"IonicKassel42 Error \" + e.getMessage();
}
"
  modified: 	false
  modifiers: 	private
  name: 	getHello
  paramsString: 	"Request req, Response res"
  returnType: 	String
  signature: 	"class/IonicKassel42Service/method/getHello(Request,Response)"

- ionicKassel42Service_subscribeAndLoadOldEvents: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42Service
  declaration: 	"private void subscribeAndLoadOldEvents()"
  id: 	IonicKassel42Service_subscribeAndLoadOldEvents
  methodBody: 	"ServiceSubscribed serviceSubscribed = new ServiceSubscribed()
      .setServiceUrl(String.format(\"http://localhost:%d/apply\", port));
String json = Yaml.encodeSimple(serviceSubscribed);
try {
   String url = \"http://localhost:42000/subscribe\";
   HttpResponse<String> response = Unirest
         .post(url)
         .body(json)
         .asString();
   String body = response.getBody();
   YamlIdMap idMap = new YamlIdMap(Event.class.getPackageName());
   idMap.decode(body);
   Map<String, Object> objectMap = idMap.getObjIdMap();
   for (Object obj : objectMap.values()) {
      apply((Event) obj);
   }
}
catch (UnirestException e) {
   e.printStackTrace();
}"
  modified: 	false
  modifiers: 	private
  name: 	subscribeAndLoadOldEvents
  paramsString: 	""
  returnType: 	void
  signature: 	"class/IonicKassel42Service/method/subscribeAndLoadOldEvents()"

- ionicKassel42Service_apply: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42Service
  declaration: 	"public void apply(Event event)"
  id: 	IonicKassel42Service_apply
  methodBody: 	"if (history.get(event.getId()) != null) {
   return;
}
businessLogic.initEventHandlerMap();
Consumer<Event> handler = businessLogic.getHandler(event);
handler.accept(event);
history.put(event.getId(), event);
firePropertyChange(PROPERTY_HISTORY, null, event);
publish(event);"
  modified: 	false
  modifiers: 	public
  name: 	apply
  paramsString: 	"Event event"
  returnType: 	void
  signature: 	"class/IonicKassel42Service/method/apply(Event)"

- ionicKassel42Service_getPage: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42Service
  declaration: 	"public String getPage(Request request, Response response)"
  id: 	IonicKassel42Service_getPage
  methodBody: 	"// to protect manuel changes to this method insert a 'no' in front of fulib in the next line
// fulib
return getDemoPage(request, response);
"
  modified: 	false
  modifiers: 	public
  name: 	getPage
  paramsString: 	"Request request, Response response"
  returnType: 	String
  signature: 	"class/IonicKassel42Service/method/getPage(Request,Response)"

- ionicKassel42Service_getDemoPage: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42Service
  declaration: 	"public String getDemoPage(Request request, Response response)"
  id: 	IonicKassel42Service_getDemoPage
  methodBody: 	"StringBuilder html = new StringBuilder();
String id = request.params(\"id\");
String event = request.queryParams(\"event\");



html.append(\"This is the Shop Service page \" + id + \"\n\");
return html.toString();"
  modified: 	false
  modifiers: 	public
  name: 	getDemoPage
  paramsString: 	"Request request, Response response"
  returnType: 	String
  signature: 	"class/IonicKassel42Service/method/getDemoPage(Request,Response)"

- ionicKassel42Service_publish: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42Service
  declaration: 	"public void publish(Event event)"
  id: 	IonicKassel42Service_publish
  methodBody: 	"String json = Yaml.encodeSimple(event);

try {
   HttpResponse<String> response = Unirest
         .post(\"http://localhost:42000/publish\")
         .body(json)
         .asString();
}
catch (UnirestException e) {
   e.printStackTrace();
}"
  modified: 	false
  modifiers: 	public
  name: 	publish
  paramsString: 	"Event event"
  returnType: 	void
  signature: 	"class/IonicKassel42Service/method/publish(Event)"

- ionicKassel42Service_postApply: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	ionicKassel42Service
  declaration: 	"private String postApply(Request req, Response res)"
  id: 	IonicKassel42Service_postApply
  methodBody: 	"      String body = req.body();
      try {
         YamlIdMap idMap = new YamlIdMap(Event.class.getPackageName());
         idMap.decode(body);
         Map<String, Object> map = idMap.getObjIdMap();
         for (Object value : map.values()) {
            Event event = (Event) value;
            apply(event);
         }
      }
      catch (Exception e) {
         String message = e.getMessage();
         if (message.contains(\"ReflectorMap could not find class description\")) {
            Logger.getGlobal().info(\"post apply ignores unknown event \" + body);
         }
         else {
            Logger.getGlobal().log(Level.SEVERE, \"postApply failed\", e);
         }
      }
      return \"apply done\";"
  modified: 	false
  modifiers: 	private
  name: 	postApply
  paramsString: 	"Request req, Response res"
  returnType: 	String
  signature: 	"class/IonicKassel42Service/method/postApply(Request,Response)"

- ionicKassel42Service_businessLogic: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	ionicKassel42Service
  id: 	IonicKassel42Service_businessLogic
  modified: 	false
  name: 	businessLogic
  other: 	ionicKassel42BusinessLogic_service
  propertyStyle: 	Bean

- ionicKassel42Service_builder: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	ionicKassel42Service
  id: 	IonicKassel42Service_builder
  modified: 	false
  name: 	builder
  other: 	ionicKassel42Builder_service
  propertyStyle: 	Bean

