- c: 	org.fulib.classmodel.ClassModel
  classes: 	partyAppModel 	partyAppBusinessLogic 	partyAppBuilder 	partyAppService 	user 	region 	party2 	item 	guest
  defaultCollectionType: 	c1
  defaultPropertyStyle: 	Bean
  defaultRoleType: 	"java.util.ArrayList<%s>"
  mainJavaDir: 	"test/src/main/java"
  packageName: 	uks.debuggen.party2.PartyApp
  packageSrcFolder: 	"test/src/main/java/uks/debuggen/party2/PartyApp"

- partyAppModel: 	org.fulib.classmodel.Clazz
  attributes: 	partyAppModel_modelMap
  importList: 	"import java.util.LinkedHashMap;"
  imports: 	"import java.util.LinkedHashMap;"
  methods: 	partyAppModel_getOrCreateUser 	partyAppModel_getOrCreateRegion 	partyAppModel_getOrCreateParty2 	partyAppModel_getOrCreateItem 	partyAppModel_getOrCreateGuest
  model: 	c
  modified: 	false
  name: 	PartyAppModel
  propertyStyle: 	Bean

- partyAppBusinessLogic: 	org.fulib.classmodel.Clazz
  attributes: 	partyAppBusinessLogic_model 	partyAppBusinessLogic_handlerMap
  importList: 	"import java.util.LinkedHashMap;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.party2.events.*;"
  imports: 	"import java.util.LinkedHashMap;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.party2.events.*;"
  methods: 	partyAppBusinessLogic_handleCheckNameCommand 	partyAppBusinessLogic_handleDemoCheckNameCommand 	partyAppBusinessLogic_handleCheckEmailCommand 	partyAppBusinessLogic_handleDemoCheckEmailCommand 	partyAppBusinessLogic_handleCheckPasswordCommand 	partyAppBusinessLogic_handleDemoCheckPasswordCommand 	partyAppBusinessLogic_handleGetRegionCommand 	partyAppBusinessLogic_handleDemoGetRegionCommand 	partyAppBusinessLogic_handleGetPartyCommand 	partyAppBusinessLogic_handleDemoGetPartyCommand 	partyAppBusinessLogic_handleBuildItemCommand 	partyAppBusinessLogic_handleDemoBuildItemCommand 	partyAppBusinessLogic_initEventHandlerMap 	partyAppBusinessLogic_ignoreEvent 	partyAppBusinessLogic_getHandler
  model: 	c
  modified: 	false
  name: 	PartyAppBusinessLogic
  propertyStyle: 	Bean
  roles: 	partyAppBusinessLogic_builder 	partyAppBusinessLogic_service

- partyAppBuilder: 	org.fulib.classmodel.Clazz
  attributes: 	partyAppBuilder_model 	partyAppBuilder_eventStore
  importList: 	"import java.util.LinkedHashMap;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.party2.events.*;"
  imports: 	"import java.util.LinkedHashMap;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.party2.events.*;"
  methods: 	partyAppBuilder_outdated 	partyAppBuilder_handleUserBuilt 	partyAppBuilder_handleRegionBuilt 	partyAppBuilder_handlePartyBuilt 	partyAppBuilder_handleParty2Built 	partyAppBuilder_handleItemBuilt 	partyAppBuilder_handleGuestBuilt 	partyAppBuilder_stripBrackets
  model: 	c
  modified: 	false
  name: 	PartyAppBuilder
  propertyStyle: 	Bean
  roles: 	partyAppBuilder_businessLogic 	partyAppBuilder_service

- partyAppService: 	org.fulib.classmodel.Clazz
  attributes: 	partyAppService_history 	partyAppService_port 	partyAppService_spark 	partyAppService_model
  importList: 	"import java.util.LinkedHashMap;" 	"import java.time.Instant;
" 	"import java.time.format.DateTimeFormatter;" 	"import java.util.Map;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.party2.events.*;" 	"import org.fulib.yaml.Yaml;" 	"import org.fulib.yaml.YamlIdMap;" 	"import spark.Service;" 	"import spark.Request;" 	"import spark.Response;" 	"import com.mashape.unirest.http.HttpResponse;" 	"import com.mashape.unirest.http.Unirest;" 	"import com.mashape.unirest.http.exceptions.UnirestException;" 	"import java.util.concurrent.ExecutorService;" 	"import java.util.concurrent.Executors;" 	"import java.util.logging.Logger;" 	"import java.util.logging.Level;"
  imports: 	"import java.util.LinkedHashMap;" 	"import java.time.Instant;
" 	"import java.time.format.DateTimeFormatter;" 	"import java.util.Map;" 	"import java.util.function.Consumer;" 	"import uks.debuggen.party2.events.*;" 	"import org.fulib.yaml.Yaml;" 	"import org.fulib.yaml.YamlIdMap;" 	"import spark.Service;" 	"import spark.Request;" 	"import spark.Response;" 	"import com.mashape.unirest.http.HttpResponse;" 	"import com.mashape.unirest.http.Unirest;" 	"import com.mashape.unirest.http.exceptions.UnirestException;" 	"import java.util.concurrent.ExecutorService;" 	"import java.util.concurrent.Executors;" 	"import java.util.logging.Logger;" 	"import java.util.logging.Level;"
  methods: 	partyAppService_query 	partyAppService_isoNow 	partyAppService_start 	partyAppService_getHello 	partyAppService_subscribeAndLoadOldEvents 	partyAppService_apply 	partyAppService_getPage 	partyAppService_getDemoPage 	partyAppService_publish 	partyAppService_postApply
  model: 	c
  modified: 	false
  name: 	PartyAppService
  propertyStyle: 	Bean
  roles: 	partyAppService_businessLogic 	partyAppService_builder

- user: 	org.fulib.classmodel.Clazz
  attributes: 	user_id 	user_name 	user_email 	user_password
  model: 	c
  modified: 	false
  name: 	User
  propertyStyle: 	Bean

- region: 	org.fulib.classmodel.Clazz
  attributes: 	region_id
  model: 	c
  modified: 	false
  name: 	Region
  propertyStyle: 	Bean
  roles: 	region_parties

- party2: 	org.fulib.classmodel.Clazz
  attributes: 	party2_id 	party2_name 	party2_address
  model: 	c
  modified: 	false
  name: 	Party2
  propertyStyle: 	Bean
  roles: 	party2_region 	party2_items 	party2_guests

- item: 	org.fulib.classmodel.Clazz
  attributes: 	item_id 	item_name 	item_price
  model: 	c
  modified: 	false
  name: 	Item
  propertyStyle: 	Bean
  roles: 	item_buyer 	item_party

- guest: 	org.fulib.classmodel.Clazz
  attributes: 	guest_id 	guest_name 	guest_expenses
  model: 	c
  modified: 	false
  name: 	Guest
  propertyStyle: 	Bean
  roles: 	guest_items 	guest_party

- c1: 	org.fulib.classmodel.CollectionType
  implClass: 	class java.util.ArrayList
  implTemplate: 	"java.util.ArrayList<%s>"
  itf: 	org.fulib.classmodel.CollectionInterface.List
  qualifiedImplName: 	java.util.ArrayList
  simpleImplName: 	ArrayList

- partyAppModel_modelMap: 	org.fulib.classmodel.Attribute
  clazz: 	partyAppModel
  id: 	PartyAppModel_modelMap
  initialization: 	"new LinkedHashMap<>()"
  modified: 	false
  name: 	modelMap
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<String, Object>"
  typeSignature: 	"LinkedHashMap<String,Object>"

- partyAppModel_getOrCreateUser: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppModel
  declaration: 	"public User getOrCreateUser(String id)"
  id: 	PartyAppModel_getOrCreateUser
  methodBody: 	"if (id == null) return null;
return (User) modelMap.computeIfAbsent(id, k -> new User().setId(k));
"
  modified: 	false
  modifiers: 	public
  name: 	getOrCreateUser
  paramsString: 	"String id"
  returnType: 	User
  signature: 	"class/PartyAppModel/method/getOrCreateUser(String)"

- partyAppModel_getOrCreateRegion: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppModel
  declaration: 	"public Region getOrCreateRegion(String id)"
  id: 	PartyAppModel_getOrCreateRegion
  methodBody: 	"if (id == null) return null;
return (Region) modelMap.computeIfAbsent(id, k -> new Region().setId(k));
"
  modified: 	false
  modifiers: 	public
  name: 	getOrCreateRegion
  paramsString: 	"String id"
  returnType: 	Region
  signature: 	"class/PartyAppModel/method/getOrCreateRegion(String)"

- partyAppModel_getOrCreateParty2: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppModel
  declaration: 	"public Party2 getOrCreateParty2(String id)"
  id: 	PartyAppModel_getOrCreateParty2
  methodBody: 	"if (id == null) return null;
return (Party2) modelMap.computeIfAbsent(id, k -> new Party2().setId(k));
"
  modified: 	false
  modifiers: 	public
  name: 	getOrCreateParty2
  paramsString: 	"String id"
  returnType: 	Party2
  signature: 	"class/PartyAppModel/method/getOrCreateParty2(String)"

- partyAppModel_getOrCreateItem: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppModel
  declaration: 	"public Item getOrCreateItem(String id)"
  id: 	PartyAppModel_getOrCreateItem
  methodBody: 	"if (id == null) return null;
return (Item) modelMap.computeIfAbsent(id, k -> new Item().setId(k));
"
  modified: 	false
  modifiers: 	public
  name: 	getOrCreateItem
  paramsString: 	"String id"
  returnType: 	Item
  signature: 	"class/PartyAppModel/method/getOrCreateItem(String)"

- partyAppModel_getOrCreateGuest: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppModel
  declaration: 	"public Guest getOrCreateGuest(String id)"
  id: 	PartyAppModel_getOrCreateGuest
  methodBody: 	"if (id == null) return null;
return (Guest) modelMap.computeIfAbsent(id, k -> new Guest().setId(k));
"
  modified: 	false
  modifiers: 	public
  name: 	getOrCreateGuest
  paramsString: 	"String id"
  returnType: 	Guest
  signature: 	"class/PartyAppModel/method/getOrCreateGuest(String)"

- partyAppBusinessLogic_model: 	org.fulib.classmodel.Attribute
  clazz: 	partyAppBusinessLogic
  id: 	PartyAppBusinessLogic_model
  modified: 	false
  name: 	model
  propertyStyle: 	Bean
  type: 	PartyAppModel
  typeSignature: 	PartyAppModel

- partyAppBusinessLogic_handlerMap: 	org.fulib.classmodel.Attribute
  clazz: 	partyAppBusinessLogic
  id: 	PartyAppBusinessLogic_handlerMap
  modified: 	false
  name: 	handlerMap
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<Class, Consumer<Event>>"
  typeSignature: 	"LinkedHashMap<Class,Consumer<Event>>"

- partyAppBusinessLogic_handleCheckNameCommand: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBusinessLogic
  declaration: 	"private void handleCheckNameCommand(Event e)"
  id: 	PartyAppBusinessLogic_handleCheckNameCommand
  methodBody: 	"// to protect manuel changes to this method insert a 'no' in front of fulib in the next line
// fulib
CheckNameCommand event = (CheckNameCommand) e;
handleDemoCheckNameCommand(event);
"
  modified: 	false
  modifiers: 	private
  name: 	handleCheckNameCommand
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/PartyAppBusinessLogic/method/handleCheckNameCommand(Event)"

- partyAppBusinessLogic_handleDemoCheckNameCommand: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBusinessLogic
  declaration: 	"private void handleDemoCheckNameCommand(CheckNameCommand event)"
  id: 	PartyAppBusinessLogic_handleDemoCheckNameCommand
  methodBody: 	"if (event.getId().equals(\"12:01\")) {
}
if (event.getId().equals(\"13:01\")) {
}
"
  modified: 	false
  modifiers: 	private
  name: 	handleDemoCheckNameCommand
  paramsString: 	"CheckNameCommand event"
  returnType: 	void
  signature: 	"class/PartyAppBusinessLogic/method/handleDemoCheckNameCommand(CheckNameCommand)"

- partyAppBusinessLogic_handleCheckEmailCommand: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBusinessLogic
  declaration: 	"private void handleCheckEmailCommand(Event e)"
  id: 	PartyAppBusinessLogic_handleCheckEmailCommand
  methodBody: 	"// to protect manuel changes to this method insert a 'no' in front of fulib in the next line
// fulib
CheckEmailCommand event = (CheckEmailCommand) e;
handleDemoCheckEmailCommand(event);
"
  modified: 	false
  modifiers: 	private
  name: 	handleCheckEmailCommand
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/PartyAppBusinessLogic/method/handleCheckEmailCommand(Event)"

- partyAppBusinessLogic_handleDemoCheckEmailCommand: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBusinessLogic
  declaration: 	"private void handleDemoCheckEmailCommand(CheckEmailCommand event)"
  id: 	PartyAppBusinessLogic_handleDemoCheckEmailCommand
  methodBody: 	"if (event.getId().equals(\"12:03\")) {
}
"
  modified: 	false
  modifiers: 	private
  name: 	handleDemoCheckEmailCommand
  paramsString: 	"CheckEmailCommand event"
  returnType: 	void
  signature: 	"class/PartyAppBusinessLogic/method/handleDemoCheckEmailCommand(CheckEmailCommand)"

- partyAppBusinessLogic_handleCheckPasswordCommand: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBusinessLogic
  declaration: 	"private void handleCheckPasswordCommand(Event e)"
  id: 	PartyAppBusinessLogic_handleCheckPasswordCommand
  methodBody: 	"// to protect manuel changes to this method insert a 'no' in front of fulib in the next line
// fulib
CheckPasswordCommand event = (CheckPasswordCommand) e;
handleDemoCheckPasswordCommand(event);
"
  modified: 	false
  modifiers: 	private
  name: 	handleCheckPasswordCommand
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/PartyAppBusinessLogic/method/handleCheckPasswordCommand(Event)"

- partyAppBusinessLogic_handleDemoCheckPasswordCommand: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBusinessLogic
  declaration: 	"private void handleDemoCheckPasswordCommand(CheckPasswordCommand event)"
  id: 	PartyAppBusinessLogic_handleDemoCheckPasswordCommand
  methodBody: 	"if (event.getId().equals(\"12:05\")) {
   UserBuilt aliceEvent = new UserBuilt();
   aliceEvent.setId(\"12:05:02\");
   aliceEvent.setBlockId(\"Alice\");
   aliceEvent.setName(\"Alice\");
   aliceEvent.setEmail(\"a@b.de\");
   aliceEvent.setPassword(\"secret\");
   service.apply(aliceEvent);


   UserRegisteredEvent e120503 = new UserRegisteredEvent();

   e120503.setId(\"12:05:03\");
   e120503.setName(\"Alice\");
   service.apply(e120503);

   LoginSucceededEvent e120504 = new LoginSucceededEvent();

   e120504.setId(\"12:05:04\");
   e120504.setName(\"Alice\");
   service.apply(e120504);
}
if (event.getId().equals(\"13:03\")) {
}
"
  modified: 	false
  modifiers: 	private
  name: 	handleDemoCheckPasswordCommand
  paramsString: 	"CheckPasswordCommand event"
  returnType: 	void
  signature: 	"class/PartyAppBusinessLogic/method/handleDemoCheckPasswordCommand(CheckPasswordCommand)"

- partyAppBusinessLogic_handleGetRegionCommand: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBusinessLogic
  declaration: 	"private void handleGetRegionCommand(Event e)"
  id: 	PartyAppBusinessLogic_handleGetRegionCommand
  methodBody: 	"// to protect manuel changes to this method insert a 'no' in front of fulib in the next line
// fulib
GetRegionCommand event = (GetRegionCommand) e;
handleDemoGetRegionCommand(event);
"
  modified: 	false
  modifiers: 	private
  name: 	handleGetRegionCommand
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/PartyAppBusinessLogic/method/handleGetRegionCommand(Event)"

- partyAppBusinessLogic_handleDemoGetRegionCommand: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBusinessLogic
  declaration: 	"private void handleDemoGetRegionCommand(GetRegionCommand event)"
  id: 	PartyAppBusinessLogic_handleDemoGetRegionCommand
  methodBody: 	"if (event.getId().equals(\"13:56\")) {
   RegionBuilt kasselEvent = new RegionBuilt();
   kasselEvent.setId(\"13:56:02\");
   kasselEvent.setBlockId(\"Kassel\");
   service.apply(kasselEvent);

}
"
  modified: 	false
  modifiers: 	private
  name: 	handleDemoGetRegionCommand
  paramsString: 	"GetRegionCommand event"
  returnType: 	void
  signature: 	"class/PartyAppBusinessLogic/method/handleDemoGetRegionCommand(GetRegionCommand)"

- partyAppBusinessLogic_handleGetPartyCommand: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBusinessLogic
  declaration: 	"private void handleGetPartyCommand(Event e)"
  id: 	PartyAppBusinessLogic_handleGetPartyCommand
  methodBody: 	"// to protect manuel changes to this method insert a 'no' in front of fulib in the next line
// fulib
GetPartyCommand event = (GetPartyCommand) e;
handleDemoGetPartyCommand(event);
"
  modified: 	false
  modifiers: 	private
  name: 	handleGetPartyCommand
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/PartyAppBusinessLogic/method/handleGetPartyCommand(Event)"

- partyAppBusinessLogic_handleDemoGetPartyCommand: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBusinessLogic
  declaration: 	"private void handleDemoGetPartyCommand(GetPartyCommand event)"
  id: 	PartyAppBusinessLogic_handleDemoGetPartyCommand
  methodBody: 	"if (event.getId().equals(\"14:01\")) {
   Party2Built sE_BBQEvent = new Party2Built();
   sE_BBQEvent.setId(\"14:01:03\");
   sE_BBQEvent.setBlockId(\"sE_BBQ\");
   sE_BBQEvent.setName(\"SE BBQ\");
   sE_BBQEvent.setRegion(\"Kassel\");
   sE_BBQEvent.setAddress(\"Uni\");
   service.apply(sE_BBQEvent);

}
"
  modified: 	false
  modifiers: 	private
  name: 	handleDemoGetPartyCommand
  paramsString: 	"GetPartyCommand event"
  returnType: 	void
  signature: 	"class/PartyAppBusinessLogic/method/handleDemoGetPartyCommand(GetPartyCommand)"

- partyAppBusinessLogic_handleBuildItemCommand: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBusinessLogic
  declaration: 	"private void handleBuildItemCommand(Event e)"
  id: 	PartyAppBusinessLogic_handleBuildItemCommand
  methodBody: 	"// to protect manuel changes to this method insert a 'no' in front of fulib in the next line
// fulib
BuildItemCommand event = (BuildItemCommand) e;
handleDemoBuildItemCommand(event);
"
  modified: 	false
  modifiers: 	private
  name: 	handleBuildItemCommand
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/PartyAppBusinessLogic/method/handleBuildItemCommand(Event)"

- partyAppBusinessLogic_handleDemoBuildItemCommand: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBusinessLogic
  declaration: 	"private void handleDemoBuildItemCommand(BuildItemCommand event)"
  id: 	PartyAppBusinessLogic_handleDemoBuildItemCommand
  methodBody: 	"if (event.getId().equals(\"14:05\")) {
   ItemBuilt beerEvent = new ItemBuilt();
   beerEvent.setId(\"14:05:01\");
   beerEvent.setBlockId(\"beer\");
   beerEvent.setName(\"beer\");
   beerEvent.setPrice(\"12.00\");
   beerEvent.setBuyer(\"sE_BBQ_Bob\");
   beerEvent.setParty(\"sE_BBQ\");
   service.apply(beerEvent);

   GuestBuilt sE_BBQ_BobEvent = new GuestBuilt();
   sE_BBQ_BobEvent.setId(\"14:05:02\");
   sE_BBQ_BobEvent.setBlockId(\"sE_BBQ_Bob\");
   sE_BBQ_BobEvent.setName(\"Bob\");
   sE_BBQ_BobEvent.setParty(\"sE_BBQ\");
   service.apply(sE_BBQ_BobEvent);

}
if (event.getId().equals(\"14:09\")) {
   ItemBuilt meatEvent = new ItemBuilt();
   meatEvent.setId(\"14:09:01\");
   meatEvent.setBlockId(\"meat\");
   meatEvent.setName(\"meat\");
   meatEvent.setPrice(\"21.00\");
   meatEvent.setBuyer(\"sE_BBQ_Alice\");
   meatEvent.setParty(\"sE_BBQ\");
   service.apply(meatEvent);

   GuestBuilt sE_BBQ_AliceEvent = new GuestBuilt();
   sE_BBQ_AliceEvent.setId(\"14:09:02\");
   sE_BBQ_AliceEvent.setBlockId(\"sE_BBQ_Alice\");
   sE_BBQ_AliceEvent.setName(\"Alice\");
   sE_BBQ_AliceEvent.setExpenses(\"0.00\");
   sE_BBQ_AliceEvent.setParty(\"sE_BBQ\");
   service.apply(sE_BBQ_AliceEvent);

}
"
  modified: 	false
  modifiers: 	private
  name: 	handleDemoBuildItemCommand
  paramsString: 	"BuildItemCommand event"
  returnType: 	void
  signature: 	"class/PartyAppBusinessLogic/method/handleDemoBuildItemCommand(BuildItemCommand)"

- partyAppBusinessLogic_initEventHandlerMap: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBusinessLogic
  declaration: 	"public void initEventHandlerMap()"
  id: 	PartyAppBusinessLogic_initEventHandlerMap
  methodBody: 	"if (handlerMap == null) {
   handlerMap = new LinkedHashMap<>();
   handlerMap.put(CheckNameCommand.class, this::handleCheckNameCommand);
   handlerMap.put(CheckEmailCommand.class, this::handleCheckEmailCommand);
   handlerMap.put(CheckPasswordCommand.class, this::handleCheckPasswordCommand);
   handlerMap.put(GetRegionCommand.class, this::handleGetRegionCommand);
   handlerMap.put(GetPartyCommand.class, this::handleGetPartyCommand);
   handlerMap.put(BuildItemCommand.class, this::handleBuildItemCommand);
   handlerMap.put(UserBuilt.class, builder::handleUserBuilt);
   handlerMap.put(RegionBuilt.class, builder::handleRegionBuilt);
   handlerMap.put(PartyBuilt.class, builder::handlePartyBuilt);
   handlerMap.put(Party2Built.class, builder::handleParty2Built);
   handlerMap.put(ItemBuilt.class, builder::handleItemBuilt);
   handlerMap.put(GuestBuilt.class, builder::handleGuestBuilt);
}
"
  modified: 	false
  modifiers: 	public
  name: 	initEventHandlerMap
  paramsString: 	""
  returnType: 	void
  signature: 	"class/PartyAppBusinessLogic/method/initEventHandlerMap()"

- partyAppBusinessLogic_ignoreEvent: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBusinessLogic
  declaration: 	"private void ignoreEvent(Event event)"
  id: 	PartyAppBusinessLogic_ignoreEvent
  methodBody: 	"// empty
"
  modified: 	false
  modifiers: 	private
  name: 	ignoreEvent
  paramsString: 	"Event event"
  returnType: 	void
  signature: 	"class/PartyAppBusinessLogic/method/ignoreEvent(Event)"

- partyAppBusinessLogic_getHandler: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBusinessLogic
  declaration: 	"public Consumer<Event> getHandler(Event event)"
  id: 	PartyAppBusinessLogic_getHandler
  methodBody: 	"return getHandlerMap().computeIfAbsent(event.getClass(), k -> this::ignoreEvent);
"
  modified: 	false
  modifiers: 	public
  name: 	getHandler
  paramsString: 	"Event event"
  returnType: 	"Consumer<Event>"
  signature: 	"class/PartyAppBusinessLogic/method/getHandler(Event)"

- partyAppBusinessLogic_builder: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	partyAppBusinessLogic
  id: 	PartyAppBusinessLogic_builder
  modified: 	false
  name: 	builder
  other: 	partyAppBuilder_businessLogic
  propertyStyle: 	Bean

- partyAppBusinessLogic_service: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	partyAppBusinessLogic
  id: 	PartyAppBusinessLogic_service
  modified: 	false
  name: 	service
  other: 	partyAppService_businessLogic
  propertyStyle: 	Bean

- partyAppBuilder_model: 	org.fulib.classmodel.Attribute
  clazz: 	partyAppBuilder
  id: 	PartyAppBuilder_model
  modified: 	false
  name: 	model
  propertyStyle: 	Bean
  type: 	PartyAppModel
  typeSignature: 	PartyAppModel

- partyAppBuilder_eventStore: 	org.fulib.classmodel.Attribute
  clazz: 	partyAppBuilder
  id: 	PartyAppBuilder_eventStore
  initialization: 	"new LinkedHashMap<>()"
  modified: 	false
  name: 	eventStore
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<String, DataEvent>"
  typeSignature: 	"LinkedHashMap<String,DataEvent>"

- partyAppBuilder_outdated: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBuilder
  declaration: 	"private boolean outdated(DataEvent event)"
  id: 	PartyAppBuilder_outdated
  methodBody: 	"      DataEvent oldEvent = getEventStore().get(event.getBlockId());

      if (oldEvent == null) {
         eventStore.put(event.getBlockId(), event);
         return false;
      }

      if (oldEvent.getId().compareTo(event.getId()) < 0) {
         eventStore.put(event.getBlockId(), event);
         return false;
      }

      return true;"
  modified: 	false
  modifiers: 	private
  name: 	outdated
  paramsString: 	"DataEvent event"
  returnType: 	boolean
  signature: 	"class/PartyAppBuilder/method/outdated(DataEvent)"

- partyAppBuilder_handleUserBuilt: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBuilder
  declaration: 	"public void handleUserBuilt(Event e)"
  id: 	PartyAppBuilder_handleUserBuilt
  methodBody: 	"UserBuilt event = (UserBuilt) e;
if (outdated(event)) {
   return;
}
User object = model.getOrCreateUser(event.getBlockId());
object.setName(event.getName());
object.setEmail(event.getEmail());
object.setPassword(event.getPassword());
"
  modified: 	false
  modifiers: 	public
  name: 	handleUserBuilt
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/PartyAppBuilder/method/handleUserBuilt(Event)"

- partyAppBuilder_handleRegionBuilt: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBuilder
  declaration: 	"public void handleRegionBuilt(Event e)"
  id: 	PartyAppBuilder_handleRegionBuilt
  methodBody: 	"RegionBuilt event = (RegionBuilt) e;
if (outdated(event)) {
   return;
}
Region object = model.getOrCreateRegion(event.getBlockId());
"
  modified: 	false
  modifiers: 	public
  name: 	handleRegionBuilt
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/PartyAppBuilder/method/handleRegionBuilt(Event)"

- partyAppBuilder_handlePartyBuilt: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBuilder
  declaration: 	"public void handlePartyBuilt(Event e)"
  id: 	PartyAppBuilder_handlePartyBuilt
  methodBody: 	"PartyBuilt event = (PartyBuilt) e;
if (outdated(event)) {
   return;
}
// please insert a no before fulib in the next line and insert event upgrading code
// fulib
"
  modified: 	false
  modifiers: 	public
  name: 	handlePartyBuilt
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/PartyAppBuilder/method/handlePartyBuilt(Event)"

- partyAppBuilder_handleParty2Built: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBuilder
  declaration: 	"public void handleParty2Built(Event e)"
  id: 	PartyAppBuilder_handleParty2Built
  methodBody: 	"Party2Built event = (Party2Built) e;
if (outdated(event)) {
   return;
}
Party2 object = model.getOrCreateParty2(event.getBlockId());
object.setName(event.getName());
object.setRegion(model.getOrCreateRegion(event.getRegion()));
object.setAddress(event.getAddress());
"
  modified: 	false
  modifiers: 	public
  name: 	handleParty2Built
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/PartyAppBuilder/method/handleParty2Built(Event)"

- partyAppBuilder_handleItemBuilt: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBuilder
  declaration: 	"public void handleItemBuilt(Event e)"
  id: 	PartyAppBuilder_handleItemBuilt
  methodBody: 	"ItemBuilt event = (ItemBuilt) e;
if (outdated(event)) {
   return;
}
Item object = model.getOrCreateItem(event.getBlockId());
object.setName(event.getName());
object.setPrice(event.getPrice());
object.setBuyer(model.getOrCreateGuest(event.getBuyer()));
object.setParty(model.getOrCreateParty2(event.getParty()));
"
  modified: 	false
  modifiers: 	public
  name: 	handleItemBuilt
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/PartyAppBuilder/method/handleItemBuilt(Event)"

- partyAppBuilder_handleGuestBuilt: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBuilder
  declaration: 	"public void handleGuestBuilt(Event e)"
  id: 	PartyAppBuilder_handleGuestBuilt
  methodBody: 	"GuestBuilt event = (GuestBuilt) e;
if (outdated(event)) {
   return;
}
Guest object = model.getOrCreateGuest(event.getBlockId());
object.setName(event.getName());
object.setParty(model.getOrCreateParty2(event.getParty()));
object.setExpenses(event.getExpenses());
"
  modified: 	false
  modifiers: 	public
  name: 	handleGuestBuilt
  paramsString: 	"Event e"
  returnType: 	void
  signature: 	"class/PartyAppBuilder/method/handleGuestBuilt(Event)"

- partyAppBuilder_stripBrackets: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppBuilder
  declaration: 	"public String stripBrackets(String back)"
  id: 	PartyAppBuilder_stripBrackets
  methodBody: 	"      if (back == null) {
         return \"\";
      }
      int open = back.indexOf('[');
      int close = back.indexOf(']');
      if (open >= 0 && close >= 0) {
         back = back.substring(open + 1, close);
      }
      return back;"
  modified: 	false
  modifiers: 	public
  name: 	stripBrackets
  paramsString: 	"String back"
  returnType: 	String
  signature: 	"class/PartyAppBuilder/method/stripBrackets(String)"

- partyAppBuilder_businessLogic: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	partyAppBuilder
  id: 	PartyAppBuilder_businessLogic
  modified: 	false
  name: 	businessLogic
  other: 	partyAppBusinessLogic_builder
  propertyStyle: 	Bean

- partyAppBuilder_service: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	partyAppBuilder
  id: 	PartyAppBuilder_service
  modified: 	false
  name: 	service
  other: 	partyAppService_builder
  propertyStyle: 	Bean

- partyAppService_history: 	org.fulib.classmodel.Attribute
  clazz: 	partyAppService
  id: 	PartyAppService_history
  initialization: 	"new LinkedHashMap<>()"
  modified: 	false
  name: 	history
  propertyStyle: 	Bean
  type: 	"LinkedHashMap<String, Event>"
  typeSignature: 	"LinkedHashMap<String,Event>"

- partyAppService_port: 	org.fulib.classmodel.Attribute
  clazz: 	partyAppService
  id: 	PartyAppService_port
  initialization: 	42001
  modified: 	false
  name: 	port
  propertyStyle: 	Bean
  type: 	int
  typeSignature: 	int

- partyAppService_spark: 	org.fulib.classmodel.Attribute
  clazz: 	partyAppService
  id: 	PartyAppService_spark
  modified: 	false
  name: 	spark
  propertyStyle: 	Bean
  type: 	Service
  typeSignature: 	Service

- partyAppService_model: 	org.fulib.classmodel.Attribute
  clazz: 	partyAppService
  id: 	PartyAppService_model
  modified: 	false
  name: 	model
  propertyStyle: 	Bean
  type: 	PartyAppModel
  typeSignature: 	PartyAppModel

- partyAppService_query: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppService
  declaration: 	"public Query query(Query query)"
  id: 	PartyAppService_query
  methodBody: 	"      DataEvent dataEvent = getBuilder().getEventStore().get(query.getKey());

      if (dataEvent == null) {
         return query;
      }

      if (dataEvent instanceof DataGroup) {
         DataGroup group = (DataGroup) dataEvent;
         query.withResults(group.getElements());
      }
      else {
         query.withResults(dataEvent);
      }

      return query;"
  modified: 	false
  modifiers: 	public
  name: 	query
  paramsString: 	"Query query"
  returnType: 	Query
  signature: 	"class/PartyAppService/method/query(Query)"

- partyAppService_isoNow: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppService
  declaration: 	"public String isoNow()"
  id: 	PartyAppService_isoNow
  methodBody: 	"return DateTimeFormatter.ISO_INSTANT.format(Instant.now());
"
  modified: 	false
  modifiers: 	public
  name: 	isoNow
  paramsString: 	""
  returnType: 	String
  signature: 	"class/PartyAppService/method/isoNow()"

- partyAppService_start: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppService
  declaration: 	"public void start()"
  id: 	PartyAppService_start
  methodBody: 	"model = new PartyAppModel();
setBuilder(new PartyAppBuilder().setModel(model));
setBusinessLogic(new PartyAppBusinessLogic());
businessLogic.setBuilder(getBuilder());
businessLogic.setModel(model);
ExecutorService executor = Executors.newSingleThreadExecutor();
spark = Service.ignite();
spark.port(port);
spark.get(\"/page/:id\", (req, res) -> executor.submit(() -> this.getPage(req, res)).get());
spark.get(\"/\", (req, res) -> executor.submit(() -> this.getHello(req, res)).get());
spark.post(\"/apply\", (req, res) -> executor.submit(() -> this.postApply(req, res)).get());
executor.submit(this::subscribeAndLoadOldEvents);
Logger.getGlobal().info(\"PartyApp service is up and running on port \" + port);
"
  modified: 	false
  modifiers: 	public
  name: 	start
  paramsString: 	""
  returnType: 	void
  signature: 	"class/PartyAppService/method/start()"

- partyAppService_getHello: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppService
  declaration: 	"private String getHello(Request req, Response res)"
  id: 	PartyAppService_getHello
  methodBody: 	"try {
   String events = Yaml.encodeSimple(getHistory().values().toArray());
   String objects = Yaml.encodeSimple(model.getModelMap().values().toArray());
   return \"<p id='PartyApp'>This is the PartyApp service. </p>\n\" +
         \"<pre id=\\"history\\">\" + events + \"</pre>\n\" +
         \"<pre id=\\"data\\">\" + objects + \"</pre>\n\" +
         \"\";
}
catch (Exception e) {
   Logger.getGlobal().log(Level.SEVERE, e.getMessage(), e);
   return \"PartyApp Error \" + e.getMessage();
}
"
  modified: 	false
  modifiers: 	private
  name: 	getHello
  paramsString: 	"Request req, Response res"
  returnType: 	String
  signature: 	"class/PartyAppService/method/getHello(Request,Response)"

- partyAppService_subscribeAndLoadOldEvents: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppService
  declaration: 	"private void subscribeAndLoadOldEvents()"
  id: 	PartyAppService_subscribeAndLoadOldEvents
  methodBody: 	"ServiceSubscribed serviceSubscribed = new ServiceSubscribed()
      .setServiceUrl(String.format(\"http://localhost:%d/apply\", port));
String json = Yaml.encodeSimple(serviceSubscribed);
try {
   String url = \"http://localhost:42000/subscribe\";
   HttpResponse<String> response = Unirest
         .post(url)
         .body(json)
         .asString();
   String body = response.getBody();
   YamlIdMap idMap = new YamlIdMap(Event.class.getPackageName());
   idMap.decode(body);
   Map<String, Object> objectMap = idMap.getObjIdMap();
   for (Object obj : objectMap.values()) {
      apply((Event) obj);
   }
}
catch (UnirestException e) {
   e.printStackTrace();
}"
  modified: 	false
  modifiers: 	private
  name: 	subscribeAndLoadOldEvents
  paramsString: 	""
  returnType: 	void
  signature: 	"class/PartyAppService/method/subscribeAndLoadOldEvents()"

- partyAppService_apply: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppService
  declaration: 	"public void apply(Event event)"
  id: 	PartyAppService_apply
  methodBody: 	"if (history.get(event.getId()) != null) {
   return;
}
businessLogic.initEventHandlerMap();
Consumer<Event> handler = businessLogic.getHandler(event);
handler.accept(event);
history.put(event.getId(), event);
firePropertyChange(PROPERTY_HISTORY, null, event);
publish(event);"
  modified: 	false
  modifiers: 	public
  name: 	apply
  paramsString: 	"Event event"
  returnType: 	void
  signature: 	"class/PartyAppService/method/apply(Event)"

- partyAppService_getPage: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppService
  declaration: 	"public String getPage(Request request, Response response)"
  id: 	PartyAppService_getPage
  methodBody: 	"// to protect manuel changes to this method insert a 'no' in front of fulib in the next line
// fulib
return getDemoPage(request, response);
"
  modified: 	false
  modifiers: 	public
  name: 	getPage
  paramsString: 	"Request request, Response response"
  returnType: 	String
  signature: 	"class/PartyAppService/method/getPage(Request,Response)"

- partyAppService_getDemoPage: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppService
  declaration: 	"public String getDemoPage(Request request, Response response)"
  id: 	PartyAppService_getDemoPage
  methodBody: 	"StringBuilder html = new StringBuilder();
String id = request.params(\"id\");
String event = request.queryParams(\"event\");

if (\"check name 12:01\".equals(event)) {

   // create CheckNameCommand: check name 12:01
   CheckNameCommand e1201 = new CheckNameCommand();
   e1201.setId(\"12:01\");
   e1201.setName(request.queryParams(\"name\"));
   apply(e1201);
}

if (\"check email 12:03\".equals(event)) {

   // create CheckEmailCommand: check email 12:03
   CheckEmailCommand e1203 = new CheckEmailCommand();
   e1203.setId(\"12:03\");
   e1203.setEmail(request.queryParams(\"email\"));
   apply(e1203);
}

if (\"check password 12:05\".equals(event)) {

   // create CheckPasswordCommand: check password 12:05
   CheckPasswordCommand e1205 = new CheckPasswordCommand();
   e1205.setId(\"12:05\");
   apply(e1205);
}

if (\"check party 12:07\".equals(event)) {

   // create CheckPartyCommand: check party 12:07
   CheckPartyCommand e1207 = new CheckPartyCommand();
   e1207.setId(\"12:07\");
   e1207.setParty(request.queryParams(\"party\"));
   apply(e1207);
}

if (\"check name 13:01\".equals(event)) {

   // create CheckNameCommand: check name 13:01
   CheckNameCommand e1301 = new CheckNameCommand();
   e1301.setId(\"13:01\");
   e1301.setName(request.queryParams(\"name\"));
   apply(e1301);
}

if (\"check password 13:03\".equals(event)) {

   // create CheckPasswordCommand: check password 13:03
   CheckPasswordCommand e1303 = new CheckPasswordCommand();
   e1303.setId(\"13:03\");
   apply(e1303);
}

if (\"get party 13:05\".equals(event)) {

   // create GetPartyCommand: get party 13:05
   GetPartyCommand e1305 = new GetPartyCommand();
   e1305.setId(\"13:05\");
   e1305.setParty(request.queryParams(\"party\"));
   apply(e1305);
}

if (\"get region 13:56\".equals(event)) {

   // create GetRegionCommand: get region 13:56
   GetRegionCommand e1356 = new GetRegionCommand();
   e1356.setId(\"13:56\");
   e1356.setRegion(request.queryParams(\"region\"));
   apply(e1356);
}

if (\"get party 14:01\".equals(event)) {

   // create GetPartyCommand: get party 14:01
   GetPartyCommand e1401 = new GetPartyCommand();
   e1401.setId(\"14:01\");
   e1401.setParty(request.queryParams(\"party\"));
   e1401.setLocation(request.queryParams(\"location\"));
   apply(e1401);
}

if (\"add item 14:03\".equals(event)) {

   // create AddItemCommand: add item 14:03
   AddItemCommand e1403 = new AddItemCommand();
   e1403.setId(\"14:03\");
   apply(e1403);
}

if (\"build item 14:05\".equals(event)) {

   // create BuildItemCommand: build item 14:05
   BuildItemCommand e1405 = new BuildItemCommand();
   e1405.setId(\"14:05\");
   e1405.setItem(request.queryParams(\"item\"));
   e1405.setPrice(request.queryParams(\"price\"));
   e1405.setBuyer(request.queryParams(\"buyer\"));
   apply(e1405);
}

if (\"add item 14:07\".equals(event)) {

   // create AddItemCommand: add item 14:07
   AddItemCommand e1407 = new AddItemCommand();
   e1407.setId(\"14:07\");
   apply(e1407);
}

if (\"build item 14:09\".equals(event)) {

   // create BuildItemCommand: build item 14:09
   BuildItemCommand e1409 = new BuildItemCommand();
   e1409.setId(\"14:09\");
   e1409.setItem(request.queryParams(\"item\"));
   e1409.setPrice(request.queryParams(\"price\"));
   e1409.setBuyer(request.queryParams(\"buyer\"));
   apply(e1409);
}



// 12:00
if (id.equals(\"12_00\")) {
   html.append(\"<form action=\\"/page/12_02\\" method=\\"get\\">\n\");
   // PartyApp 12:00
   html.append(\"   <p>Welcome to the parties</p>\n\");
   html.append(\"   <p>What's your name?</p>\n\");
   html.append(\"   <p><input id=\\"name\\" name=\\"name\\" placeholder=\\"name?\\"></p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"check name 12:01\\"></p>\n\");
   html.append(\"   <p><input id=\\"ok\\" name=\\"button\\" type=\\"submit\\" value=\\"ok\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 12:02
if (id.equals(\"12_02\")) {
   html.append(\"<form action=\\"/page/12_04\\" method=\\"get\\">\n\");
   // PartyApp 12:02
   html.append(\"   <p>Welcome Alice</p>\n\");
   html.append(\"   <p>You are new to parties</p>\n\");
   html.append(\"   <p>We need your email</p>\n\");
   html.append(\"   <p><input id=\\"email\\" name=\\"email\\" placeholder=\\"email?\\"></p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"check email 12:03\\"></p>\n\");
   html.append(\"   <p><input id=\\"ok\\" name=\\"button\\" type=\\"submit\\" value=\\"ok\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 12:04
if (id.equals(\"12_04\")) {
   html.append(\"<form action=\\"/page/12_06\\" method=\\"get\\">\n\");
   // PartyApp 12:04
   html.append(\"   <p>Welcome Alice</p>\n\");
   html.append(\"   <p>Choose a password</p>\n\");
   html.append(\"   <p><input id=\\"password\\" name=\\"password\\" type=\\"password\\" placeholder=\\"password?\\"></p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"check password 12:05\\"></p>\n\");
   html.append(\"   <p><input id=\\"ok\\" name=\\"button\\" type=\\"submit\\" value=\\"ok\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 12:06
if (id.equals(\"12_06\")) {
   html.append(\"<form action=\\"/page/13_00\\" method=\\"get\\">\n\");
   // PartyApp 12:06
   html.append(\"   <p>Welcome Alice</p>\n\");
   html.append(\"   <p>Choose a party</p>\n\");
   html.append(\"   <p><input id=\\"party\\" name=\\"party\\" placeholder=\\"party?\\"></p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"check party 12:07\\"></p>\n\");
   html.append(\"   <p><input id=\\"ok\\" name=\\"button\\" type=\\"submit\\" value=\\"ok\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 13:00
if (id.equals(\"13_00\")) {
   html.append(\"<form action=\\"/page/13_02\\" method=\\"get\\">\n\");
   // PartyApp 13:00
   html.append(\"   <p>Welcome to the parties</p>\n\");
   html.append(\"   <p>What's your name?</p>\n\");
   html.append(\"   <p><input id=\\"name\\" name=\\"name\\" placeholder=\\"name?\\"></p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"check name 13:01\\"></p>\n\");
   html.append(\"   <p><input id=\\"ok\\" name=\\"button\\" type=\\"submit\\" value=\\"ok\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 13:02
if (id.equals(\"13_02\")) {
   html.append(\"<form action=\\"/page/13_04\\" method=\\"get\\">\n\");
   // PartyApp 13:02
   html.append(\"   <p>Welcome Alice</p>\n\");
   html.append(\"   <p>Provide a password</p>\n\");
   html.append(\"   <p><input id=\\"password\\" name=\\"password\\" type=\\"password\\" placeholder=\\"password?\\"></p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"check password 13:03\\"></p>\n\");
   html.append(\"   <p><input id=\\"ok\\" name=\\"button\\" type=\\"submit\\" value=\\"ok\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 13:04
if (id.equals(\"13_04\")) {
   html.append(\"<form action=\\"/page/next_page\\" method=\\"get\\">\n\");
   // PartyApp 13:04
   html.append(\"   <p>Welcome Alice</p>\n\");
   html.append(\"   <p>Choose a party</p>\n\");
   html.append(\"   <p><input id=\\"party\\" name=\\"party\\" placeholder=\\"party?\\"></p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"get party 13:05\\"></p>\n\");
   html.append(\"   <p><input id=\\"ok\\" name=\\"button\\" type=\\"submit\\" value=\\"ok\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 13:55
if (id.equals(\"13_55\")) {
   html.append(\"<form action=\\"/page/14_00\\" method=\\"get\\">\n\");
   // PartyApp 13:55
   html.append(\"   <p>Welcome Alice</p>\n\");
   html.append(\"   <p>In which region is your party</p>\n\");
   html.append(\"   <p><input id=\\"region\\" name=\\"region\\" placeholder=\\"region?\\"></p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"get region 13:56\\"></p>\n\");
   html.append(\"   <p><input id=\\"ok\\" name=\\"button\\" type=\\"submit\\" value=\\"ok\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 14:00
if (id.equals(\"14_00\")) {
   html.append(\"<form action=\\"/page/14_02\\" method=\\"get\\">\n\");
   // PartyApp 14:00
   html.append(\"   <p>Welcome Alice</p>\n\");
   html.append(\"   <p>Choose a party</p>\n\");
   html.append(\"   <p><input id=\\"party\\" name=\\"party\\" placeholder=\\"party?\\"></p>\n\");
   html.append(\"   <p><input id=\\"location\\" name=\\"location\\" placeholder=\\"location?\\"></p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"get party 14:01\\"></p>\n\");
   html.append(\"   <p><input id=\\"ok\\" name=\\"button\\" type=\\"submit\\" value=\\"ok\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 14:02
if (id.equals(\"14_02\")) {
   html.append(\"<form action=\\"/page/14_04\\" method=\\"get\\">\n\");
   // PartyApp 14:02
   html.append(\"   <p>Welcome Alice</p>\n\");
   html.append(\"   <p>Let's do the SE BBQ</p>\n\");
   html.append(\"   <p>no items yet</p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"add item 14:03\\"></p>\n\");
   html.append(\"   <p><input id=\\"add\\" name=\\"button\\" type=\\"submit\\" value=\\"add\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 14:04
if (id.equals(\"14_04\")) {
   html.append(\"<form action=\\"/page/14_06\\" method=\\"get\\">\n\");
   // PartyApp 14:04
   html.append(\"   <p>Welcome Alice</p>\n\");
   html.append(\"   <p>Let's do the SE BBQ</p>\n\");
   html.append(\"   <p><input id=\\"item\\" name=\\"item\\" placeholder=\\"item?\\"></p>\n\");
   html.append(\"   <p><input id=\\"price\\" name=\\"price\\" placeholder=\\"price?\\"></p>\n\");
   html.append(\"   <p><input id=\\"buyer\\" name=\\"buyer\\" placeholder=\\"buyer?\\"></p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"build item 14:05\\"></p>\n\");
   html.append(\"   <p><input id=\\"ok\\" name=\\"button\\" type=\\"submit\\" value=\\"ok\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 14:06
if (id.equals(\"14_06\")) {
   html.append(\"<form action=\\"/page/14_08\\" method=\\"get\\">\n\");
   // PartyApp 14:06
   html.append(\"   <p>Welcome Alice</p>\n\");
   html.append(\"   <p>Let's do the SE BBQ</p>\n\");
   html.append(\"   <p>beer 12.00 Bob</p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"add item 14:07\\"></p>\n\");
   html.append(\"   <p><input id=\\"add\\" name=\\"button\\" type=\\"submit\\" value=\\"add\\"></p>\n\");
   html.append(\"   <p>Total 12.00</p>\n\");
   html.append(\"   <p>Share 12.00</p>\n\");
   html.append(\"   <p>Bob 0.00</p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 14:08
if (id.equals(\"14_08\")) {
   html.append(\"<form action=\\"/page/14_10\\" method=\\"get\\">\n\");
   // PartyApp 14:08
   html.append(\"   <p>Welcome Alice</p>\n\");
   html.append(\"   <p>Let's do the SE BBQ</p>\n\");
   html.append(\"   <p><input id=\\"item\\" name=\\"item\\" placeholder=\\"item?\\"></p>\n\");
   html.append(\"   <p><input id=\\"price\\" name=\\"price\\" placeholder=\\"price?\\"></p>\n\");
   html.append(\"   <p><input id=\\"buyer\\" name=\\"buyer\\" placeholder=\\"buyer?\\"></p>\n\");
   html.append(\"   <p><input id=\\"event\\" name=\\"event\\" type=\\"hidden\\" value=\\"build item 14:09\\"></p>\n\");
   html.append(\"   <p><input id=\\"ok\\" name=\\"button\\" type=\\"submit\\" value=\\"ok\\"></p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}

// 14:10
if (id.equals(\"14_10\")) {
   html.append(\"<form action=\\"/page/next_page\\" method=\\"get\\">\n\");
   // PartyApp 14:10
   html.append(\"   <p>Welcome Alice</p>\n\");
   html.append(\"   <p>Let's do the SE BBQ</p>\n\");
   html.append(\"   <p>beer 12.00 Bob</p>\n\");
   html.append(\"   <p>meat 21.00 Alice</p>\n\");
   html.append(\"   <p><input id=\\"add\\" name=\\"button\\" type=\\"submit\\" value=\\"add\\"></p>\n\");
   html.append(\"   <p>Total 33.00</p>\n\");
   html.append(\"   <p>Share 16.50</p>\n\");
   html.append(\"   <p>Bob -4.50</p>\n\");
   html.append(\"   <p>Alice +4.50</p>\n\");
   html.append(\"</form>\n\");
   return html.toString();
}



html.append(\"This is the Shop Service page \" + id + \"\n\");
return html.toString();"
  modified: 	false
  modifiers: 	public
  name: 	getDemoPage
  paramsString: 	"Request request, Response response"
  returnType: 	String
  signature: 	"class/PartyAppService/method/getDemoPage(Request,Response)"

- partyAppService_publish: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppService
  declaration: 	"public void publish(Event event)"
  id: 	PartyAppService_publish
  methodBody: 	"String json = Yaml.encodeSimple(event);

try {
   HttpResponse<String> response = Unirest
         .post(\"http://localhost:42000/publish\")
         .body(json)
         .asString();
}
catch (UnirestException e) {
   e.printStackTrace();
}"
  modified: 	false
  modifiers: 	public
  name: 	publish
  paramsString: 	"Event event"
  returnType: 	void
  signature: 	"class/PartyAppService/method/publish(Event)"

- partyAppService_postApply: 	org.fulib.classmodel.FMethod
  annotations: 	""
  clazz: 	partyAppService
  declaration: 	"private String postApply(Request req, Response res)"
  id: 	PartyAppService_postApply
  methodBody: 	"      String body = req.body();
      try {
         YamlIdMap idMap = new YamlIdMap(Event.class.getPackageName());
         idMap.decode(body);
         Map<String, Object> map = idMap.getObjIdMap();
         for (Object value : map.values()) {
            Event event = (Event) value;
            apply(event);
         }
      }
      catch (Exception e) {
         String message = e.getMessage();
         if (message.contains(\"ReflectorMap could not find class description\")) {
            Logger.getGlobal().info(\"post apply ignores unknown event \" + body);
         }
         else {
            Logger.getGlobal().log(Level.SEVERE, \"postApply failed\", e);
         }
      }
      return \"apply done\";"
  modified: 	false
  modifiers: 	private
  name: 	postApply
  paramsString: 	"Request req, Response res"
  returnType: 	String
  signature: 	"class/PartyAppService/method/postApply(Request,Response)"

- partyAppService_businessLogic: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	partyAppService
  id: 	PartyAppService_businessLogic
  modified: 	false
  name: 	businessLogic
  other: 	partyAppBusinessLogic_service
  propertyStyle: 	Bean

- partyAppService_builder: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	partyAppService
  id: 	PartyAppService_builder
  modified: 	false
  name: 	builder
  other: 	partyAppBuilder_service
  propertyStyle: 	Bean

- user_id: 	org.fulib.classmodel.Attribute
  clazz: 	user
  id: 	User_id
  modified: 	false
  name: 	id
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- user_name: 	org.fulib.classmodel.Attribute
  clazz: 	user
  id: 	User_name
  modified: 	false
  name: 	name
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- user_email: 	org.fulib.classmodel.Attribute
  clazz: 	user
  id: 	User_email
  modified: 	false
  name: 	email
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- user_password: 	org.fulib.classmodel.Attribute
  clazz: 	user
  id: 	User_password
  modified: 	false
  name: 	password
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- region_id: 	org.fulib.classmodel.Attribute
  clazz: 	region
  id: 	Region_id
  modified: 	false
  name: 	id
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- region_parties: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	42
  clazz: 	region
  collectionType: 	c1
  id: 	Region_parties
  modified: 	false
  name: 	parties
  other: 	party2_region
  propertyStyle: 	Bean
  roleType: 	"java.util.ArrayList<%s>"

- party2_id: 	org.fulib.classmodel.Attribute
  clazz: 	party2
  id: 	Party2_id
  modified: 	false
  name: 	id
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- party2_name: 	org.fulib.classmodel.Attribute
  clazz: 	party2
  id: 	Party2_name
  modified: 	false
  name: 	name
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- party2_address: 	org.fulib.classmodel.Attribute
  clazz: 	party2
  id: 	Party2_address
  modified: 	false
  name: 	address
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- party2_region: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	party2
  id: 	Party2_region
  modified: 	false
  name: 	region
  other: 	region_parties
  propertyStyle: 	Bean

- party2_items: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	42
  clazz: 	party2
  collectionType: 	c1
  id: 	Party2_items
  modified: 	false
  name: 	items
  other: 	item_party
  propertyStyle: 	Bean
  roleType: 	"java.util.ArrayList<%s>"

- party2_guests: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	42
  clazz: 	party2
  collectionType: 	c1
  id: 	Party2_guests
  modified: 	false
  name: 	guests
  other: 	guest_party
  propertyStyle: 	Bean
  roleType: 	"java.util.ArrayList<%s>"

- item_id: 	org.fulib.classmodel.Attribute
  clazz: 	item
  id: 	Item_id
  modified: 	false
  name: 	id
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- item_name: 	org.fulib.classmodel.Attribute
  clazz: 	item
  id: 	Item_name
  modified: 	false
  name: 	name
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- item_price: 	org.fulib.classmodel.Attribute
  clazz: 	item
  id: 	Item_price
  modified: 	false
  name: 	price
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- item_buyer: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	item
  id: 	Item_buyer
  modified: 	false
  name: 	buyer
  other: 	guest_items
  propertyStyle: 	Bean

- item_party: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	item
  id: 	Item_party
  modified: 	false
  name: 	party
  other: 	party2_items
  propertyStyle: 	Bean

- guest_id: 	org.fulib.classmodel.Attribute
  clazz: 	guest
  id: 	Guest_id
  modified: 	false
  name: 	id
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- guest_name: 	org.fulib.classmodel.Attribute
  clazz: 	guest
  id: 	Guest_name
  modified: 	false
  name: 	name
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- guest_expenses: 	org.fulib.classmodel.Attribute
  clazz: 	guest
  id: 	Guest_expenses
  modified: 	false
  name: 	expenses
  propertyStyle: 	Bean
  type: 	String
  typeSignature: 	String

- guest_items: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	42
  clazz: 	guest
  collectionType: 	c1
  id: 	Guest_items
  modified: 	false
  name: 	items
  other: 	item_buyer
  propertyStyle: 	Bean
  roleType: 	"java.util.ArrayList<%s>"

- guest_party: 	org.fulib.classmodel.AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	guest
  id: 	Guest_party
  modified: 	false
  name: 	party
  other: 	party2_guests
  propertyStyle: 	Bean

